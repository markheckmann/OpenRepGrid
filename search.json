[{"path":[]},{"path":"https://docs.openrepgrid.org/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"https://docs.openrepgrid.org/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://docs.openrepgrid.org/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://docs.openrepgrid.org/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://docs.openrepgrid.org/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team openrepgrid@gmail.com. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://docs.openrepgrid.org/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available https://www.contributor-covenant.org/version/1/4/code--conduct.html answers common questions code conduct, see https://www.contributor-covenant.org/faq","code":""},{"path":"https://docs.openrepgrid.org/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to OpenRepGrid","title":"Contributing to OpenRepGrid","text":"Everybody can contribute! need R programmer .","code":""},{"path":"https://docs.openrepgrid.org/CONTRIBUTING.html","id":"make-suggestions","dir":"","previous_headings":"","what":"Make suggestions","title":"Contributing to OpenRepGrid","text":"make OpenRepGrid suit communitie’s needs, need know features need, miss feel needs improvement. can suggest improvements new features send us email.","code":""},{"path":"https://docs.openrepgrid.org/CONTRIBUTING.html","id":"report-bugs","dir":"","previous_headings":"","what":"Report bugs","title":"Contributing to OpenRepGrid","text":"discover bugs software (incorrect results, crashes etc.), please let us know. may file bug reports github issue send us email.","code":""},{"path":"https://docs.openrepgrid.org/CONTRIBUTING.html","id":"write-documentation","dir":"","previous_headings":"","what":"Write documentation","title":"Contributing to OpenRepGrid","text":"feel documentation needs improvement use case tutorial like see documentation, just get touch via email. Also, already draft like add, send us.","code":""},{"path":"https://docs.openrepgrid.org/CONTRIBUTING.html","id":"supply-code-snippets","dir":"","previous_headings":"","what":"Supply code snippets","title":"Contributing to OpenRepGrid","text":"basic R knowledge come code snippets just send us take care integrate ideas package.","code":""},{"path":"https://docs.openrepgrid.org/CONTRIBUTING.html","id":"join-the-dev-team","dir":"","previous_headings":"","what":"Join the dev team","title":"Contributing to OpenRepGrid","text":"solid R knowledge, just hammer code send us. , familiar git, fork OpenRepGrid repo, make changes submit pull request.","code":""},{"path":"https://docs.openrepgrid.org/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Join the dev team","what":"Pull request process","title":"Contributing to OpenRepGrid","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"markheckmann/OpenRepGrid\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://docs.openrepgrid.org/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Join the dev team","what":"Code style","title":"Contributing to OpenRepGrid","text":"run styler make sure R code formatted correctly. please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://docs.openrepgrid.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://docs.openrepgrid.org/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://docs.openrepgrid.org/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://docs.openrepgrid.org/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://docs.openrepgrid.org/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://docs.openrepgrid.org/TODO.html","id":null,"dir":"","previous_headings":"","what":"TODOs","title":"TODOs","text":"switch cli package console output? make function generic accept repgridlists well (index functions) Format scripts RStudio comment headers make readable Redo printing wherever necessary replace print funs constructCor etc. print_square_matrix move gh-pages /docs folder add tests biplot others one function (see email José) intensity elements yet match add tests reorder build bipolar variant construct matches? (similar IC)","code":""},{"path":"https://docs.openrepgrid.org/articles/web/basic_operations.html","id":"displaying-a-grid","dir":"Articles > Web","previous_headings":"","what":"Displaying a grid","title":"Basis operations","text":"Whenever name variable containing grid object typed console printed. Several datasets already included OpenRepGrid package available package loaded. Two bell2010 fbb2003. Type one variable names console andthe grid printed. Usually convenient name object way like . can save grids variable like. save grid variable x type now type x console grid printed.","code":"bell2010 #  # RATINGS: #              A teacher you respected - 5 6 - Mother (or the person who fill      #     A person of the opposite sex t - 4 | | 7 - A person of the opposite sex t    #   the unhappiest person you know - 3 | | | | 8 - The most confident person you   # closest friend of the same sex - 2 | | | | | | 9 - A person you work well with ( #                         self - 1 | | | | | | | | 10 - A teacher you did not resp #                                | | | | | | | | | |                               #                  relaxed (1)   4 4 6 5 3 6 5 2 2 6   (1) worried & tense         #  so smart (academically) (2)   6 7 6 5 7 4 6 7 4 7   (2) smart (academically)    #          dislikes sports (3)   6 3 7 6 4 4 2 3 6 3   (3) loves sports            #          not interactive (4)   6 7 5 6 6 5 6 7 7 4   (4) loves people            #          not transparent (5)   6 4 5 7 3 7 6 5 6 3   (5) transparent             #              insensitive (6)   4 6 5 4 4 6 5 3 4 2   (6) sensitive               #            fearful&timid (7)   5 4 4 6 5 3 5 6 5 5   (7) fearless                #                    rough (8)   5 6 6 4 5 7 7 3 5 6   (8) gentle                  #          accept as it is (9)   5 5 6 7 4 4 6 7 5 5   (9) loves to argue x <- bell2010 x #  # RATINGS: #              A teacher you respected - 5 6 - Mother (or the person who fill      #     A person of the opposite sex t - 4 | | 7 - A person of the opposite sex t    #   the unhappiest person you know - 3 | | | | 8 - The most confident person you   # closest friend of the same sex - 2 | | | | | | 9 - A person you work well with ( #                         self - 1 | | | | | | | | 10 - A teacher you did not resp #                                | | | | | | | | | |                               #                  relaxed (1)   4 4 6 5 3 6 5 2 2 6   (1) worried & tense         #  so smart (academically) (2)   6 7 6 5 7 4 6 7 4 7   (2) smart (academically)    #          dislikes sports (3)   6 3 7 6 4 4 2 3 6 3   (3) loves sports            #          not interactive (4)   6 7 5 6 6 5 6 7 7 4   (4) loves people            #          not transparent (5)   6 4 5 7 3 7 6 5 6 3   (5) transparent             #              insensitive (6)   4 6 5 4 4 6 5 3 4 2   (6) sensitive               #            fearful&timid (7)   5 4 4 6 5 3 5 6 5 5   (7) fearless                #                    rough (8)   5 6 6 4 5 7 7 3 5 6   (8) gentle                  #          accept as it is (9)   5 5 6 7 4 4 6 7 5 5   (9) loves to argue"},{"path":"https://docs.openrepgrid.org/articles/web/basic_operations.html","id":"extract-a-subset-of-the-grid","dir":"Articles > Web","previous_headings":"","what":"Extract a subset of the grid","title":"Basis operations","text":"One powerful operators repgrid objects [ (extract) function. can used access parts data reorder rows columns. applied way R objects (cf. R docu, type ?Extract console). Within squared brackets index rows (constructs) /columns (elements) supplied determining order subset grid. E.g. order extract first three rows first four elements bell2010 data use. produce 3x4 subset grid may save new object.","code":"bell2010[1:3, 1:4] #  # RATINGS: # closest friend of the same sex - 2 3 - the unhappiest person you kno #                         self - 1 | | 4 - A person of the opposite se #                                | | | |                               #                  relaxed (1)   4 4 6 5   (1) worried & tense         #  so smart (academically) (2)   6 7 6 5   (2) smart (academically)    #          dislikes sports (3)   6 3 7 6   (3) loves sports"},{"path":"https://docs.openrepgrid.org/articles/web/basic_operations.html","id":"delete-elements-andor-constructs","dir":"Articles > Web","previous_headings":"","what":"Delete elements and/or constructs","title":"Basis operations","text":"Negative indexes indicate row /column deleted. order delete first construct row (line 1) first two elements (line 2) respectively type","code":"bell2010[-1, ] bell2010[, -c(1, 2)]"},{"path":"https://docs.openrepgrid.org/articles/web/basic_operations.html","id":"reorder-a-grid","dir":"Articles > Web","previous_headings":"","what":"Reorder a grid","title":"Basis operations","text":"brackets function can also used reorder grid. reverse order constructs type Likewise can rearrange order elements. order facilitate comparison elements self, unhappiest person know mother (elements 1, 3 6) may want rearrange next .","code":"bell2010[9:1, ] #  # RATINGS: #              A teacher you respected - 5 6 - Mother (or the person who fill      #     A person of the opposite sex t - 4 | | 7 - A person of the opposite sex t    #   the unhappiest person you know - 3 | | | | 8 - The most confident person you   # closest friend of the same sex - 2 | | | | | | 9 - A person you work well with ( #                         self - 1 | | | | | | | | 10 - A teacher you did not resp #                                | | | | | | | | | |                               #          accept as it is (1)   5 5 6 7 4 4 6 7 5 5   (1) loves to argue          #                    rough (2)   5 6 6 4 5 7 7 3 5 6   (2) gentle                  #            fearful&timid (3)   5 4 4 6 5 3 5 6 5 5   (3) fearless                #              insensitive (4)   4 6 5 4 4 6 5 3 4 2   (4) sensitive               #          not transparent (5)   6 4 5 7 3 7 6 5 6 3   (5) transparent             #          not interactive (6)   6 7 5 6 6 5 6 7 7 4   (6) loves people            #          dislikes sports (7)   6 3 7 6 4 4 2 3 6 3   (7) loves sports            #  so smart (academically) (8)   6 7 6 5 7 4 6 7 4 7   (8) smart (academically)    #                  relaxed (9)   4 4 6 5 3 6 5 2 2 6   (9) worried & tense bell2010[, c(1, 3, 6, 2, 4, 5, 7:10)] #  # RATINGS: #       A person of the opposite sex t - 5 6 - A teacher you respected             #     closest friend of the same sex - 4 | | 7 - A person of the opposite sex t    #   Mother (or the person who fill - 3 | | | | 8 - The most confident person you   # the unhappiest person you know - 2 | | | | | | 9 - A person you work well with ( #                         self - 1 | | | | | | | | 10 - A teacher you did not resp #                                | | | | | | | | | |                               #                  relaxed (1)   4 6 6 4 5 3 5 2 2 6   (1) worried & tense         #  so smart (academically) (2)   6 6 4 7 5 7 6 7 4 7   (2) smart (academically)    #          dislikes sports (3)   6 7 4 3 6 4 2 3 6 3   (3) loves sports            #          not interactive (4)   6 5 5 7 6 6 6 7 7 4   (4) loves people            #          not transparent (5)   6 5 7 4 7 3 6 5 6 3   (5) transparent             #              insensitive (6)   4 5 6 6 4 4 5 3 4 2   (6) sensitive               #            fearful&timid (7)   5 4 3 4 6 5 5 6 5 5   (7) fearless                #                    rough (8)   5 6 7 6 4 5 7 3 5 6   (8) gentle                  #          accept as it is (9)   5 6 4 5 7 4 6 7 5 5   (9) loves to argue"},{"path":"https://docs.openrepgrid.org/articles/web/basic_operations.html","id":"moving-elements-and-constructs","dir":"Articles > Web","previous_headings":"","what":"Moving elements and constructs","title":"Basis operations","text":"Several tasks concerning reordering used repeatedly, like e. g. moving construct upwards. extract function can fulfill task, code quickly becomes tedious. Hence, specialized functions available standard actions. E.g. move construct 2 upwards following two lines code equivalent. following table lists several functions provide shortcut standard operations.","code":"bell2010[c(2, 1, 3:9), ] up(bell2010, 2)"},{"path":"https://docs.openrepgrid.org/articles/web/basic_operations.html","id":"swapping-poles","dir":"Articles > Web","previous_headings":"","what":"Swapping poles","title":"Basis operations","text":"Due bipolar nature constructs direction construct arbitrary. Hence, poles can also swapped without affecting grid information . reflect one constructs function swapPoles can used. following code reflect constructs one three.","code":"swapPoles(bell2010, 1:3)"},{"path":"https://docs.openrepgrid.org/articles/web/basic_operations.html","id":"change-ratings","dir":"Articles > Web","previous_headings":"","what":"Change Ratings","title":"Basis operations","text":"change single ratings elements constructs also extract function can used. context, square brackets used determine part grid assigned new scores. change rating cell (1,1) dataset bell2010 1 type Likewise, new scores can assigned number cells grid, whole rows, whole columns entire grid. following code gives examples.","code":"bell2010[1, 1] <- 1 x <- bell2010[1:4, 1:5] # subset of the Bell2010 data set with four rows and five columns x[1:3, 1] <- c(1, 4, 3) # rows 1 to 3 in column 1 x[1, c(1, 4)] <- c(2, 2) # columns 1 and 4 in row 1 x[1, ] <- c(2, 2, 1, 4, 3) # all columns in row one x[, 1] <- c(2, 2, 1, 4) # all rows in column one x[, ] <- c(   1, 2, 3, 4, # whole grid column wise   1, 2, 3, 4,   1, 2, 3, 4,   1, 2, 3, 4,   1, 2, 3, 4 )"},{"path":"https://docs.openrepgrid.org/articles/web/basic_operations.html","id":"modify-element-and-construct-names","dir":"Articles > Web","previous_headings":"","what":"Modify element and construct names","title":"Basis operations","text":"grid object contains information element construct labels, abbreviations, status (e.g. ideal element preferred pole). information contained grid object can manipulated via functions setConstructAttr setElelemntAttr. e.g. change construct labels provide row new pole labels function. change element label first element, proceed likewise.","code":"setConstructAttr(boeker, 1, \"new left pole\", \"new right pole\") #  # RATINGS: #                                          8 - martin                           #                               george - 7 | 9 - elizabeth                      #                               karl - 6 | | | 10 - therapist                   #                             kurt - 5 | | | | | 11 - irene                     #                         father - 4 | | | | | | | 12 - childhood self          #                       mother - 3 | | | | | | | | | 13 - self before illness   #                 ideal self - 2 | | | | | | | | | | | 14 - self with delusion  #                     self - 1 | | | | | | | | | | | | | 15 - self as dreamer   #                            | | | | | | | | | | | | | | |                      #        new left pole (1)   1 4 2 2 3 5 2 5 4 2 6 2 2 3 3   (1) new right pole #             isolated (2)   3 6 3 5 5 4 5 4 5 4 4 4 2 2 3   (2) sociable       #   closely integrated (3)   2 2 2 3 5 3 2 3 2 3 3 4 4 5 3   (3) excluded       #           discursive (4)   4 1 3 1 2 4 2 3 3 2 3 3 3 5 4   (4) passive        #          open minded (5)   2 1 2 1 2 4 4 2 4 2 6 3 2 2 3   (5) indifferent    #               dreamy (6)   4 5 3 5 4 5 4 5 4 4 6 3 3 3 2   (6) dispassionate  # practically oriented (7)   2 1 3 2 3 3 3 2 2 3 2 3 3 3 3   (7) depressed      #              playful (8)   4 5 4 3 4 3 2 3 4 4 5 3 2 4 3   (8) serious        #      socially minded (9)   2 1 3 2 4 5 4 1 3 2 6 3 3 3 3   (9) selfish        #         quarrelsome (10)   5 5 5 5 5 2 5 2 4 4 1 6 5 5 5   (10) peaceful      #            artistic (11)   5 1 2 4 3 5 3 2 4 3 3 4 4 4 4   (11) technical     #          scientific (12)   2 1 5 3 4 4 5 3 4 1 6 4 2 3 3   (12) emotional     #           introvert (13)   4 5 4 6 5 3 5 3 5 2 5 2 2 2 3   (13) extrovert     #          wanderlust (14)   1 1 4 2 4 5 2 5 5 3 6 1 1 2 1   (14) home oriented setElementAttr(boeker, 1, \"new name\") #  # RATINGS: #                                          8 - martin                                    #                               george - 7 | 9 - elizabeth                               #                               karl - 6 | | | 10 - therapist                            #                             kurt - 5 | | | | | 11 - irene                              #                         father - 4 | | | | | | | 12 - childhood self                   #                       mother - 3 | | | | | | | | | 13 - self before illness            #                 ideal self - 2 | | | | | | | | | | | 14 - self with delusion           #                 new name - 1 | | | | | | | | | | | | | 15 - self as dreamer            #                            | | | | | | | | | | | | | | |                               #             balanced (1)   1 4 2 2 3 5 2 5 4 2 6 2 2 3 3   (1) get along with conflict #             isolated (2)   3 6 3 5 5 4 5 4 5 4 4 4 2 2 3   (2) sociable                #   closely integrated (3)   2 2 2 3 5 3 2 3 2 3 3 4 4 5 3   (3) excluded                #           discursive (4)   4 1 3 1 2 4 2 3 3 2 3 3 3 5 4   (4) passive                 #          open minded (5)   2 1 2 1 2 4 4 2 4 2 6 3 2 2 3   (5) indifferent             #               dreamy (6)   4 5 3 5 4 5 4 5 4 4 6 3 3 3 2   (6) dispassionate           # practically oriented (7)   2 1 3 2 3 3 3 2 2 3 2 3 3 3 3   (7) depressed               #              playful (8)   4 5 4 3 4 3 2 3 4 4 5 3 2 4 3   (8) serious                 #      socially minded (9)   2 1 3 2 4 5 4 1 3 2 6 3 3 3 3   (9) selfish                 #         quarrelsome (10)   5 5 5 5 5 2 5 2 4 4 1 6 5 5 5   (10) peaceful               #            artistic (11)   5 1 2 4 3 5 3 2 4 3 3 4 4 4 4   (11) technical              #          scientific (12)   2 1 5 3 4 4 5 3 4 1 6 4 2 3 3   (12) emotional              #           introvert (13)   4 5 4 6 5 3 5 3 5 2 5 2 2 2 3   (13) extrovert              #          wanderlust (14)   1 1 4 2 4 5 2 5 5 3 6 1 1 2 1   (14) home oriented"},{"path":"https://docs.openrepgrid.org/articles/web/basic_operations.html","id":"add-elements-and-constructs","dir":"Articles > Web","previous_headings":"","what":"Add elements and constructs","title":"Basis operations","text":"Sometimes necessary add element construct. can achieved modifying input file . Another option use functions addConstruct addElement. following call add construct corresponding ratings bell2010 dataset. left right pole labeled “left pole” “right pole” respectively. following code add element label “new element” dataset.","code":"addConstruct(bell2010, \"left pole\", \"pole right\", c(3, 1, 3, 2, 5, 4, 6, 3, 7, 1)) #  # RATINGS: #              A teacher you respected - 5 6 - Mother (or the person who fill      #     A person of the opposite sex t - 4 | | 7 - A person of the opposite sex t    #   the unhappiest person you know - 3 | | | | 8 - The most confident person you   # closest friend of the same sex - 2 | | | | | | 9 - A person you work well with ( #                         self - 1 | | | | | | | | 10 - A teacher you did not resp #                                | | | | | | | | | |                               #                  relaxed (1)   1 4 6 5 3 6 5 2 2 6   (1) worried & tense         #  so smart (academically) (2)   6 7 6 5 7 4 6 7 4 7   (2) smart (academically)    #          dislikes sports (3)   6 3 7 6 4 4 2 3 6 3   (3) loves sports            #          not interactive (4)   6 7 5 6 6 5 6 7 7 4   (4) loves people            #          not transparent (5)   6 4 5 7 3 7 6 5 6 3   (5) transparent             #              insensitive (6)   4 6 5 4 4 6 5 3 4 2   (6) sensitive               #            fearful&timid (7)   5 4 4 6 5 3 5 6 5 5   (7) fearless                #                    rough (8)   5 6 6 4 5 7 7 3 5 6   (8) gentle                  #          accept as it is (9)   5 5 6 7 4 4 6 7 5 5   (9) loves to argue          #               left pole (10)   3 1 3 2 5 4 6 3 7 1   (10) pole right addElement(bell2010, \"new element\", c(1, 2, 5, 4, 3, 6, 5, 2, 7)) #  # RATINGS: #                                          6 - Mother (or the person who fill        #              A teacher you respected - 5 | 7 - A person of the opposite sex t      #     A person of the opposite sex t - 4 | | | 8 - The most confident person you     #   the unhappiest person you know - 3 | | | | | 9 - A person you work well with (a  # closest friend of the same sex - 2 | | | | | | | 10 - A teacher you did not respec #                         self - 1 | | | | | | | | | 11 - new element                #                                | | | | | | | | | | |                               #                  relaxed (1)   1 4 6 5 3 6 5 2 2 6 1   (1) worried & tense         #  so smart (academically) (2)   6 7 6 5 7 4 6 7 4 7 2   (2) smart (academically)    #          dislikes sports (3)   6 3 7 6 4 4 2 3 6 3 5   (3) loves sports            #          not interactive (4)   6 7 5 6 6 5 6 7 7 4 4   (4) loves people            #          not transparent (5)   6 4 5 7 3 7 6 5 6 3 3   (5) transparent             #              insensitive (6)   4 6 5 4 4 6 5 3 4 2 6   (6) sensitive               #            fearful&timid (7)   5 4 4 6 5 3 5 6 5 5 5   (7) fearless                #                    rough (8)   5 6 6 4 5 7 7 3 5 6 2   (8) gentle                  #          accept as it is (9)   5 5 6 7 4 4 6 7 5 5 7   (9) loves to argue"},{"path":"https://docs.openrepgrid.org/articles/web/basic_operations.html","id":"defining-a-grid-manually","dir":"Articles > Web","previous_headings":"","what":"Defining a grid manually","title":"Basis operations","text":"import functions make use internal functions construct grid scratch using imported data. also possible call functions manually, option advanced users may consider. convenient way use function makeRepGrid. First list arguments (args) containing elements constructs names rating scores created. list supplied function makeRepGrid. Note scale range set using setScale, order draw grid properly. Usually convenient create grid via .txt import function.","code":"args <- list(   name = c(\"element 1\", \"element 2\", \"element 3\", \"element 4\", \"element 5\"),   l.name = c(\"left pole 1\", \"left pole 2\", \"left pole 3\", \"left pole 4\"),   r.name = c(\"right pole 1\", \"right pole 2\", \"right pole3 \", \"right pole 4\"),   scores = c(     4, 4, 6, 5, 1,     2, 7, 6, 5, 2,     6, 3, 1, 6, 4,     6, 7, 5, 6, 3   ) ) newGrid <- makeRepgrid(args) newGrid <- setScale(newGrid, 1, 7) newGrid #  # RATINGS: #                       3 - element 3            #         element 2 - 2 | 4 - element 4          #       element 1 - 1 | | | 5 - element 5        #                   | | | | |                    # left pole 1 (1)   4 4 6 5 1   (1) right pole 1 # left pole 2 (2)   2 7 6 5 2   (2) right pole 2 # left pole 3 (3)   6 3 1 6 4   (3) right pole3  # left pole 4 (4)   6 7 5 6 3   (4) right pole 4"},{"path":"https://docs.openrepgrid.org/articles/web/clustering.html","id":"description","dir":"Articles > Web","previous_headings":"","what":"Description","title":"Clustering constructs and elements","text":"method identifying structures construct system cluster analysis. distance similarity measure accounting certain type association used cluster criterion. Traditionally mostly Euclidean Manhattan distances used. earliest implementation cluster algorithm repertory grids incorporated program FOCUS (Shaw & Thomas, 1978). Several distance measure can selected (explanations ?dist dcoumentation): euclidean: Squared distance two vectors (L2 norm) manhattan: Also called city-block-distance, absolute distance two vectors (L1 norm). minkowski: p norm, pth root sum pth powers differences components. maximum: Maximum distance two components x y (supremum norm) canberra: ∑(|xi−yi|/|xi+yi|)\\sum(|x_i - y_i| / |x_i + y_i|) Terms zero numerator denominator omitted sum treated values missing. intended non-negative values (e.g. counts). binary: vectors regarded binary bits, non-zero elements zero elements . distance proportion bits one amongst least one . Also several cluster methods can selected (explanations ?hclust documentation). ward.D, ward.D2: Ward’s minimum variance method aims finding compact, spherical clusters. complete: complete linkage method finds similar clusters. single: single linkage method (closely related minimal spanning tree) adopts ‘friends friends’ clustering strategy. methods can regarded aiming clusters characteristics somewhere single complete link methods: average mcquitty median centroid distance cluster methods can combined wished.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/clustering.html","id":"clustering","dir":"Articles > Web","previous_headings":"R-Code","what":"Clustering","title":"Clustering constructs and elements","text":"function cluster called dendrograms construct element clustering drawn.  function also returns reordered matrix invisibly. see reordered grid save new object. oppress creation graphic set print = FALSE. function also allows cluster constructs elements. cluster constructs us following code. dendrogram drawn grid reordered constructs returned. cluster elements set along=2. apply different distance measures cluster methods us arguments dmethod cmethod (manhattan distance single linkage clustering). apply different methods constructs rows, use two-step approach. options can set. Paste code R console try . See ?cluster information.","code":"cluster(bell2010) x <- cluster(bell2010, print = FALSE) x #  # RATINGS: # er (or the person who fill - 5 6 - A person of the opposite  #  A teacher you respected - 4 | | 7 - the unhappiest person y # friend of the same sex - 3 | | | | 8 - A person of the oppos #  you did not respect - 2 | | | | | | 9 - A person you work w # fident person you  - 1 | | | | | | | | 10 - self             #                      | | | | | | | | | |                     #   loves sports (1)   5 5 5 4 4 6 1 2 2 2   (1) dislikes spor #    transparent (2)   3 5 4 5 1 2 3 1 2 2   (2) not transpare # orried & tense (3)   6 2 4 5 2 3 2 3 6 4   (3) relaxed       #         gentle (4)   5 2 2 3 1 1 2 4 3 3   (4) rough         #      sensitive (5)   5 6 2 4 2 3 3 4 4 4   (5) insensitive   # (academically) (6)   1 1 1 1 4 2 2 3 4 2   (6) not so smart  #   loves people (7)   1 4 1 2 3 2 3 2 1 2   (7) not interacti #       fearless (8)   2 3 4 3 5 3 4 2 3 3   (8) fearful&timid # loves to argue (9)   1 3 3 4 4 2 2 1 3 3   (9) accept as it x <- cluster(bell2010, along = 1, print = FALSE) x #  # RATINGS: # er (or the person who fill - 5 6 - A person of the opposite  #  A teacher you respected - 4 | | 7 - the unhappiest person y # friend of the same sex - 3 | | | | 8 - A person you work wel #  you did not respect - 2 | | | | | | 9 - self                # fident person you  - 1 | | | | | | | | 10 - A person of the  #                      | | | | | | | | | |                     #   loves sports (1)   5 5 5 4 4 6 1 2 2 2   (1) dislikes spor #    transparent (2)   3 5 4 5 1 2 3 2 2 1   (2) not transpare # orried & tense (3)   6 2 4 5 2 3 2 6 4 3   (3) relaxed       #         gentle (4)   5 2 2 3 1 1 2 3 3 4   (4) rough         #      sensitive (5)   5 6 2 4 2 3 3 4 4 4   (5) insensitive   # (academically) (6)   1 1 1 1 4 2 2 4 2 3   (6) not so smart  #   loves people (7)   1 4 1 2 3 2 3 1 2 2   (7) not interacti #       fearless (8)   2 3 4 3 5 3 4 3 3 2   (8) fearful&timid # loves to argue (9)   1 3 3 4 4 2 2 3 3 1   (9) accept as it x <- cluster(bell2010, along = 2, print = FALSE) x #  # RATINGS: # er (or the person who fill - 5 6 - A person of the opposite  #  A teacher you respected - 4 | | 7 - the unhappiest person y # friend of the same sex - 3 | | | | 8 - A person of the oppos #  you did not respect - 2 | | | | | | 9 - A person you work w # fident person you  - 1 | | | | | | | | 10 - self             #                      | | | | | | | | | |                     #    transparent (1)   3 5 4 5 1 2 3 1 2 2   (1) not transpare #   loves sports (2)   5 5 5 4 4 6 1 2 2 2   (2) dislikes spor #         gentle (3)   5 2 2 3 1 1 2 4 3 3   (3) rough         # orried & tense (4)   6 2 4 5 2 3 2 3 6 4   (4) relaxed       #      sensitive (5)   5 6 2 4 2 3 3 4 4 4   (5) insensitive   #   loves people (6)   1 4 1 2 3 2 3 2 1 2   (6) not interacti # (academically) (7)   1 1 1 1 4 2 2 3 4 2   (7) not so smart  # loves to argue (8)   1 3 3 4 4 2 2 1 3 3   (8) accept as it  #       fearless (9)   2 3 4 3 5 3 4 2 3 3   (9) fearful&timid x <- cluster(bell2010, dmethod = \"manh\", cmethod = \"single\", print = FALSE) x #  # RATINGS: # rson of the opposite sex t - 5 6 - A person you work well wi #  (or the person who fill - 4 | | 7 - A teacher you respected # friend of the same sex - 3 | | | | 8 - the unhappiest person # onfident person you  - 2 | | | | | | 9 - A person of the opp # ou did not respect - 1 | | | | | | | | 10 - self             #                      | | | | | | | | | |                     # (academically) (1)   7 7 7 4 5 4 7 6 6 6   (1) smart (academ # ot interactive (2)   4 7 7 5 6 7 6 5 6 6   (2) loves people  #  fearful&timid (3)   5 6 4 3 6 5 5 4 5 5   (3) fearless      # ccept as it is (4)   5 7 5 4 7 5 4 6 6 5   (4) loves to argu # ot transparent (5)   3 5 4 7 7 6 3 5 6 6   (5) transparent   #      sensitive (6)   6 5 2 2 4 4 4 3 3 4   (6) insensitive   #         gentle (7)   2 5 2 1 4 3 3 2 1 3   (7) rough         # orried & tense (8)   2 6 4 2 3 6 5 2 3 4   (8) relaxed       #   loves people (9)   4 1 1 3 2 1 2 3 2 2   (9) not interacti # cluster constructs using default methods x <- cluster(bell2010, along = 1, print = FALSE) # cluster elements using manhattan distance and single linkage clustering x <- cluster(x, along = 2, dm = \"manh\", cm = \"single\", print = FALSE) x #  # RATINGS: # rson of the opposite sex t - 5 6 - the unhappiest person you # t friend of the same sex - 4 | | 7 - A teacher you respected # er you did not respect - 3 | | | | 8 - A person of the oppos #  the person who fill - 2 | | | | | | 9 - A person you work w # fident person you  - 1 | | | | | | | | 10 - self             #                      | | | | | | | | | |                     #    insensitive (1)   3 6 2 6 5 5 4 4 4 4   (1) sensitive     #          rough (2)   3 7 6 6 7 6 5 4 5 5   (2) gentle        #        relaxed (3)   2 6 6 4 5 6 3 5 2 4   (3) worried & ten #   loves people (4)   1 3 4 1 2 3 2 2 1 2   (4) not interacti # (academically) (5)   1 4 1 1 2 2 1 3 4 2   (5) not so smart  # loves to argue (6)   1 4 3 3 2 2 4 1 3 3   (6) accept as it  #       fearless (7)   2 5 3 4 3 4 3 2 3 3   (7) fearful&timid #    transparent (8)   3 1 5 4 2 3 5 1 2 2   (8) not transpare #   loves sports (9)   5 4 5 5 6 1 4 2 2 2   (9) dislikes spor cluster(bell2010, main = \"My cluster analysis\") # new title cluster(bell2010, type = \"t\") # different drawing style cluster(bell2010, dmethod = \"manhattan\") # using manhattan metric cluster(bell2010, cmethod = \"single\") # do single linkage clustering cluster(bell2010, cex = 1, lab.cex = 1) # change appearance cluster(bell2010,   lab.cex = .7, # advanced appearance changes   edgePar = list(lty = 1:2, col = 2:1) )"},{"path":"https://docs.openrepgrid.org/articles/web/clustering.html","id":"bootsrapped-clustering","dir":"Articles > Web","previous_headings":"R-Code","what":"Bootsrapped clustering","title":"Clustering constructs and elements","text":"TODO","code":""},{"path":"https://docs.openrepgrid.org/articles/web/clustering.html","id":"clustered-bertin","dir":"Articles > Web","previous_headings":"R-Code","what":"Clustered Bertin","title":"Clustering constructs and elements","text":"following figure shows clustered Bertin matrix. full explanation found section Bertin display.","code":"bertinCluster(bell2010)"},{"path":"https://docs.openrepgrid.org/articles/web/clustering.html","id":"literature","dir":"Articles > Web","previous_headings":"","what":"Literature","title":"Clustering constructs and elements","text":"Shaw, M. L., & Thomas, L. F. (1978). FOCUS education - interactive computer system development analysis repertory grids. International Journal Man-Machine Studies, 10(2), 139-173.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/constructs-correlation.html","id":"correlation-measures","dir":"Articles > Web","previous_headings":"Description","what":"Correlation measures","title":"Construct correlations","text":"correlations constructs used lot occasions, indices etc, present standard statistic. Several types correlations can requested via function constructCor. Pearson Product-moment correlation (PMC) Kendall’s tau rank correlation Spearman’s rank correlation","code":""},{"path":"https://docs.openrepgrid.org/articles/web/constructs-correlation.html","id":"root-mean-square-correlation","dir":"Articles > Web","previous_headings":"Description","what":"Root mean square correlation","title":"Construct correlations","text":"Also, Root mean square (RMS) correlation, also known ‘quadratic mean’ inter-construct correlations, can calculated using function constructRmsCor. RMS serves simplification correlation table. reflects average relation one construct constructs. Note correlations squared calculation, RMS affected sign correlation (cf. Fransella, Bell & Bannister, 2003, p. 86).","code":""},{"path":"https://docs.openrepgrid.org/articles/web/constructs-correlation.html","id":"somers-d","dir":"Articles > Web","previous_headings":"Description","what":"Somers’ D","title":"Construct correlations","text":"suggested Hinkle (1965) relationships constructs may take several different forms (reciprocal, hierarchical etc.). Several authors suggested use asymmetric measures association indicator type relationship present (cf. Fransella et al., 2003). Currently software Gridstat (Bell, 2009) allows calculate asymmetric measure Somers’ D (Somers, 1962). calculation Somers’ D OpenRepGrid prompted via function constructD.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/constructs-correlation.html","id":"correlation-measures-1","dir":"Articles > Web","previous_headings":"R-Code","what":"Correlation measures","title":"Construct correlations","text":"can select different types correlation setting argument method \"pearson\", \"kendall\" \"spearman\". request Spearman rank correlation type format output several arguments available. See ?print.constructCor printing options.","code":"constructCor(mackay1992) #  # ############################## # Correlation between constructs # ############################## #  # Type of correlation:  pearson  #  #                         1    2    3    4    5    6 # Quick - *Slow       1     0.38 0.77 0.13 0.52 0.29 # *Satisfied - Bitter 2          0.18 0.82 0.56 0.29 # Talkative - *Quiet  3               0.14 0.72 0.58 # *Succesful - Loser  4                    0.64 0.47 # Emotional - *Calm   5                         0.92 # *Caring - Selfish   6 constructCor(mackay1992, method = \"spearman\") #  # ############################## # Correlation between constructs # ############################## #  # Type of correlation:  spearman  #  #                         1    2    3    4    5    6 # Quick - *Slow       1     0.50 0.83 0.00 0.56 0.19 # *Satisfied - Bitter 2          0.09 0.56 0.64 0.13 # Talkative - *Quiet  3               0.00 0.39 0.21 # *Succesful - Loser  4                    0.69 0.49 # Emotional - *Calm   5                         0.81 # *Caring - Selfish   6 r <- constructCor(mackay1992) print(r, digits = 5, col.index = F) #  # ############################## # Correlation between constructs # ############################## #  # Type of correlation:  pearson  #  #                          1       2       3       4       5       6 # Quick - *Slow              0.37709 0.77226 0.12913 0.51682 0.28911 # *Satisfied - Bitter                0.18383 0.81969 0.56239 0.28917 # Talkative - *Quiet                         0.13771 0.71984 0.57656 # *Succesful - Loser                                 0.63623 0.47133 # Emotional - *Calm                                          0.92394 # *Caring - Selfish"},{"path":"https://docs.openrepgrid.org/articles/web/constructs-correlation.html","id":"root-mean-square-correlation-1","dir":"Articles > Web","previous_headings":"R-Code","what":"Root mean square correlation","title":"Construct correlations","text":"calulate RMS correlation","code":"constructRmsCor(fbb2003) #  # ########################################## # Root-mean-square correlation of constructs # ########################################## #  #                                         RMS # (1) clever - not bright                0.66 # (2) disorganized - organized           0.58 # (3) listens - doesn't hear             0.61 # (4) no clear view - clear view of life 0.46 # (5) understands me - no understanding  0.53 # (6) ambitious - no ambition            0.30 # (7) respected - not respected          0.62 # (8) distant - warm                     0.25 # (9) rather aggressive - not aggressive 0.29 #  # Average of statistic 0.48  # Standard deviation of statistic 0.15"},{"path":"https://docs.openrepgrid.org/articles/web/constructs-correlation.html","id":"somers-d-1","dir":"Articles > Web","previous_headings":"R-Code","what":"Somers’ D","title":"Construct correlations","text":"Somers’ D asymmetric measure. default columns dependent rows independent variables. set rows dependent, type returned data cases matrix data.frame, can easily extract data need calculations.","code":"constructD(fbb2003) #  # ############################ # Somers' D between constructs # ############################ #  # Direction: columns are set as dependent #                                           1    2    3    4    5    6    7    8    9 # (1) clever - not bright              1  1.0 -0.6  0.9 -0.5  0.6  0.2  0.8  0.0 -0.1 # (2) disorganized - organized         2 -0.7  1.0 -0.6  0.4 -0.3 -0.2 -0.7 -0.1 -0.4 # (3) listens - doesn't hear           3  1.0 -0.5  1.0 -0.4  0.8  0.1  0.7  0.0 -0.2 # (4) no clear view - clear view of l  4 -0.6  0.4 -0.5  1.0 -0.2 -0.6 -0.5 -0.2 -0.2 # (5) understands me - no understandin 5  0.8 -0.3  0.9 -0.2  1.0  0.0  0.6  0.0 -0.2 # (6) ambitious - no ambition          6  0.2 -0.2  0.1 -0.5  0.0  1.0  0.3  0.2  0.1 # (7) respected - not respected        7  0.8 -0.7  0.7 -0.4  0.5  0.3  1.0 -0.1  0.0 # (8) distant - warm                   8  0.0 -0.1  0.0 -0.2  0.0  0.2 -0.1  1.0  0.5 # (9) rather aggressi - not aggressive 9 -0.1 -0.4 -0.2 -0.2 -0.2  0.1  0.0  0.5  1.0 constructD(fbb2003, dep = \"r\")"},{"path":"https://docs.openrepgrid.org/articles/web/constructs-correlation.html","id":"literature","dir":"Articles > Web","previous_headings":"","what":"Literature","title":"Construct correlations","text":"Bell, R. C. (2009). Gridstat version 5 - Program Analyzing Data Repertory Grid (manual). University Melbourne, Australia: Department Psychology. Fransella, F., Bell, R. C., & Bannister, D. (2003). Manual Repertory Grid Technique (2. ed.). Chichester: John Wiley & Sons. Hinkle, D. (1965). Change Personal Constructs Viewpoint Theory Construct Implications (Unpublished Ph.D. thesis). Ohio State University, Ohio. Somers, R. H. (1962). New Asymmetric Measure Association Ordinal Variables. American Sociological Review, 27(6), 799-811.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/constructs-distances.html","id":"description","dir":"Articles > Web","previous_headings":"","what":"Description","title":"Distances between constructs and elements","text":"Distances constructs used measure similarity. disadvantage invariant construct reflection. following distance measures available: euclidean: Squared distance two vectors (L2 norm) manhattan: Also called city-block-distance, absolute distance two vectors (L1 norm). minkowski: p norm, pth root sum pth powers differences components. maximum: Maximum distance two components x y (supremum norm) canberra: ∑(|xi−yi|/|xi+yi|)\\sum(|x_i - y_i| / |x_i + y_i|) Terms zero numerator denominator omitted sum treated values missing. intended non-negative values (e.g. counts). binary: vectors regarded binary bits, non-zero elements zero elements . distance proportion bits one amongst least one . grid purposes, first two options suffice.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/constructs-distances.html","id":"r-code","dir":"Articles > Web","previous_headings":"","what":"R-Code","title":"Distances between constructs and elements","text":"OpenRepGrid function distance calculates various types distances constructs elements (default euclidean). argument along determines distances 1) constructs 2) elements calculated. default calculate distances constructs: Distance elements: change distance measure supply unambigous string available distance methods argument dmethod. E.g. manhattan distance bewteen constructs: distance metrics: distances calculated processing, printing console can surpressed distance results can saved object (d). object matrix. can look distances first construct Lack invariance construct reflection Note inverse construct distance measure change. Reversing frist consstruct fbb2003 yield different values . Make sure aware fact using distance measures constructs.","code":"distance(fbb2003) #  # ############################ # Distances between constructs # ############################ #  # Distance method:  euclidean # Normalized: FALSE #                                   1     2     3     4     5     6     7     8     9 # (1) clever - not bright     1       10.39  2.45  9.54  3.74  6.78  2.83  8.19  7.68 # (2) disorganiz - organized  2              9.38  4.58  8.49  7.07  9.27  7.14  8.54 # (3) listens - doesn't he    3                    8.89  2.45  7.21  3.46  8.43  8.43 # (4) no clear v - clear view 4                          7.81  7.42  8.31  7.35  7.62 # (5) understand - no underst 5                                7.07  4.00  7.28  7.28 # (6) ambitious - no ambitio  6                                      6.32  5.57  6.56 # (7) respected - not respec  7                                            7.94  6.71 # (8) distant - warm          8                                                  5.10 # (9) rather agg - not aggres 9 distance(fbb2003, along = 2) #  # ########################## # Distances between elements # ########################## #  # Distance method:  euclidean # Normalized: FALSE #                                1     2     3     4     5     6     7     8 # (1) self                 1        4.47  8.19  3.87  7.75  9.80  6.78  8.89 # (2) my father            2             10.15  4.36  8.83 11.22  4.00  9.33 # (3) an old flame         3                    7.48  6.56  7.42 10.05  5.48 # (4) an ethical person    4                          6.24  9.11  6.24  6.93 # (5) my mother            5                                9.06  8.83  4.36 # (6) a rejected teacher   6                                     12.65  8.19 # (7) as I would love to b 7                                            8.77 # (8) a pitied person      8 distance(fbb2003, dmethod = \"manhattan\") #  # ############################ # Distances between constructs # ############################ #  # Distance method:  manhattan # Normalized: FALSE #                                   1     2     3     4     5     6     7     8     9 # (1) clever - not bright     1       28.00  4.00 23.00  8.00 16.00  6.00 15.00 17.00 # (2) disorganiz - organized  2             24.00 11.00 22.00 16.00 24.00 19.00 19.00 # (3) listens - doesn't he    3                   19.00  6.00 18.00  8.00 17.00 21.00 # (4) no clear v - clear view 4                         19.00 19.00 19.00 18.00 18.00 # (5) understand - no underst 5                               16.00  8.00 15.00 19.00 # (6) ambitious - no ambitio  6                                     16.00 13.00 15.00 # (7) respected - not respec  7                                           17.00 15.00 # (8) distant - warm          8                                                 10.00 # (9) rather agg - not aggres 9 distance(fbb2003, dm = \"canb\") # canberra distance for constructs distance(fbb2003, dm = \"mink\", p = 3) # minkowski metric to the power of 3  for constructs d <- distance(fbb2003) d[1, ] #     (1) clever - not bright  (2) disorganiz - organized    (3) listens - doesn't he (4) no clear v - clear view  #                    0.000000                   10.392305                    2.449490                    9.539392  # (5) understand - no underst  (6) ambitious - no ambitio  (7) respected - not respec          (8) distant - warm  #                    3.741657                    6.782330                    2.828427                    8.185353  # (9) rather agg - not aggres  #                    7.681146 x <- swapPoles(fbb2003, 1) d <- distance(x) d[1, ] #     (1) not bright - clever  (2) disorganiz - organized    (3) listens - doesn't he (4) no clear v - clear view  #                    0.000000                    3.464102                   11.747340                    4.795832  # (5) understand - no underst  (6) ambitious - no ambitio  (7) respected - not respec          (8) distant - warm  #                   10.677078                    8.124038                   10.954451                    7.937254  # (9) rather agg - not aggres  #                    8.426150"},{"path":"https://docs.openrepgrid.org/articles/web/constructs-pca.html","id":"description","dir":"Articles > Web","previous_headings":"","what":"Description","title":"PCA of constructs","text":"Principal component analysis (PCA) method identify structures data. well known method data reduction can also applied squared matrix. applied inter-construct correlations order explore structures relations constructs case grids. default type rotation used Varimax. methods can chosen (see ?constructPca). comparison Root-mean-square statistic, PCA accounts sign correlation thus allowing .","code":""},{"path":"https://docs.openrepgrid.org/articles/web/constructs-pca.html","id":"r-code","dir":"Articles > Web","previous_headings":"","what":"R-Code","title":"PCA of constructs","text":"following codes calculates PCA three factors (default) varimax rotation (default). can specify number components extract. following code yields examples Fransella et al. (2003, p.87). Two components extracted using varimax rotation. case results needed processing can save ouput. gain easier overview data, cutoff level can set surpress printing small loadings. Different methods rotation can chosen: none, varimax, promax, cluster. default, correlation matrix calculated using product-moment correlation. methods can selected pearson, kendall, spearman.","code":"constructPca(fbb2003) #  # ################# # PCA of constructs # ################# #  # Number of components extracted: 3 # Type of rotation: varimax  #  # Loadings: #                                    RC1   RC2   RC3   # clever - not bright                 0.96  0.02  0.25 # disorganized - organized           -0.82 -0.40 -0.17 # listens - doesn't hear              0.92 -0.26  0.12 # no clear view - clear view of life -0.45 -0.15 -0.76 # understands me - no understanding   0.87 -0.07 -0.08 # ambitious - no ambition             0.02  0.13  0.94 # respected - not respected           0.91 -0.01  0.22 # distant - warm                     -0.13  0.74  0.25 # rather aggressive - not aggressive  0.07  0.96  0.00 #  #                 RC1  RC2  RC3 # SS loadings    4.27 1.74 1.69 # Proportion Var 0.47 0.19 0.19 # Cumulative Var 0.47 0.67 0.86 constructPca(fbb2003, nf = 2) #  # ################# # PCA of constructs # ################# #  # Number of components extracted: 2 # Type of rotation: varimax  #  # Loadings: #                                    RC1   RC2   # clever - not bright                 0.98  0.13 # disorganized - organized           -0.79 -0.40 # listens - doesn't hear              0.95 -0.17 # no clear view - clear view of life -0.57 -0.54 # understands me - no understanding   0.84 -0.13 # ambitious - no ambition             0.20  0.64 # respected - not respected           0.93  0.09 # distant - warm                     -0.16  0.75 # rather aggressive - not aggressive -0.03  0.79 #  #                 RC1  RC2 # SS loadings    4.47 2.13 # Proportion Var 0.50 0.24 # Cumulative Var 0.50 0.73 r <- constructPca(fbb2003, nf = 2) print(r, cut = .3) #  # ################# # PCA of constructs # ################# #  # Number of components extracted: 2 # Type of rotation: varimax  #  # Loadings: #                                    RC1   RC2   # clever - not bright                 0.98       # disorganized - organized           -0.79 -0.40 # listens - doesn't hear              0.95       # no clear view - clear view of life -0.57 -0.54 # understands me - no understanding   0.84       # ambitious - no ambition                   0.64 # respected - not respected           0.93       # distant - warm                            0.75 # rather aggressive - not aggressive        0.79 #  #                 RC1  RC2 # SS loadings    4.47 2.13 # Proportion Var 0.50 0.24 # Cumulative Var 0.50 0.73 constructPca(fbb2003, rotate = \"none\") constructPca(fbb2003, rotate = \"varimax\") constructPca(fbb2003, rotate = \"promax\") constructPca(fbb2003, rotate = \"cluster\") constructPca(fbb2003, method = \"pearson\") # default setting constructPca(fbb2003, method = \"kendall\") constructPca(fbb2003, method = \"spearman\")"},{"path":"https://docs.openrepgrid.org/articles/web/constructs-pca.html","id":"literature","dir":"Articles > Web","previous_headings":"","what":"Literature","title":"PCA of constructs","text":"Fransella, F., Bell, R. C., & Bannister, D. (2003). Manual Repertory Grid Technique (2. ed.). Chichester: John Wiley & Sons.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/datasets.html","id":"r-code","dir":"Articles > Web","previous_headings":"","what":"R-Code","title":"Data Sets","text":"display one grid just type grid’s name R console.","code":"boeker #  # RATINGS: #                                          8 - martin                                    #                               george - 7 | 9 - elizabeth                               #                               karl - 6 | | | 10 - therapist                            #                             kurt - 5 | | | | | 11 - irene                              #                         father - 4 | | | | | | | 12 - childhood self                   #                       mother - 3 | | | | | | | | | 13 - self before illness            #                 ideal self - 2 | | | | | | | | | | | 14 - self with delusion           #                     self - 1 | | | | | | | | | | | | | 15 - self as dreamer            #                            | | | | | | | | | | | | | | |                               #             balanced (1)   1 4 2 2 3 5 2 5 4 2 6 2 2 3 3   (1) get along with conflict #             isolated (2)   3 6 3 5 5 4 5 4 5 4 4 4 2 2 3   (2) sociable                #   closely integrated (3)   2 2 2 3 5 3 2 3 2 3 3 4 4 5 3   (3) excluded                #           discursive (4)   4 1 3 1 2 4 2 3 3 2 3 3 3 5 4   (4) passive                 #          open minded (5)   2 1 2 1 2 4 4 2 4 2 6 3 2 2 3   (5) indifferent             #               dreamy (6)   4 5 3 5 4 5 4 5 4 4 6 3 3 3 2   (6) dispassionate           # practically oriented (7)   2 1 3 2 3 3 3 2 2 3 2 3 3 3 3   (7) depressed               #              playful (8)   4 5 4 3 4 3 2 3 4 4 5 3 2 4 3   (8) serious                 #      socially minded (9)   2 1 3 2 4 5 4 1 3 2 6 3 3 3 3   (9) selfish                 #         quarrelsome (10)   5 5 5 5 5 2 5 2 4 4 1 6 5 5 5   (10) peaceful               #            artistic (11)   5 1 2 4 3 5 3 2 4 3 3 4 4 4 4   (11) technical              #          scientific (12)   2 1 5 3 4 4 5 3 4 1 6 4 2 3 3   (12) emotional              #           introvert (13)   4 5 4 6 5 3 5 3 5 2 5 2 2 2 3   (13) extrovert              #          wanderlust (14)   1 1 4 2 4 5 2 5 5 3 6 1 1 2 1   (14) home oriented"},{"path":"https://docs.openrepgrid.org/articles/web/datasets.html","id":"making-data-available-to-public","dir":"Articles > Web","previous_headings":"","what":"Making data available to public","title":"Data Sets","text":"like make grid data available public can use ZENODO. ZENODO archive allowing researchers publish data receive digital object identifier (DOI), data citable like publication. help make grid research reproducible. can define terms use data licensing model.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/datasets.html","id":"literature","dir":"Articles > Web","previous_headings":"","what":"Literature","title":"Data Sets","text":"Bell, R. C. (1997). Using SPSS analyse repertory grid data (Unpublished report). University Melbourne, Australia: School Behavioural Science. Bell, R. C. (2010). note aligning constructs. Personal Construct Theory & Practice, (7), 42-48. Bell, R. C., & McGorry, P. (1992). analysis repertory grids used monitor perceptions recovering psychotic patients. . Thomson & P. Cummins (Eds.), European Perspectives Personal Construct Psychology (pp. 137–150). Lincoln, UK: European Personal Construct Association. Böker, H. (1996). reconstruction self psychotherapy chronic schizophrenia: case study repertory grid technique. J. W. Scheer & . Catina (Eds.), Empirical Constructivism Europe: Personal Construct Approach (pp. 160-167). Giessen: Psychosozial-Verlag. Feixas, G., & Saúl, L. . (2004). Multi-Center Dilemma Project: investigation role cognitive conflicts health. Spanish Journal Psychology, 7(1), 69-78. Fransella, F., Bell, R. C., & Bannister, D. (2003). Manual Repertory Grid Technique (2. ed.). Chichester: John Wiley & Sons. Haritos, ., Gindidis, ., Doan, C., & Bell, R. C. (2004). effect element role titles construct structure content. Journal constructivist psychology, 17(3), 221-236. Leach, C., Freshwater, K., Aldridge, J., & Sunderland, J. (2001). Analysis repertory grids clinical practice. British journal clinical psychology, 40, 225-48. Raeithel, . (1998). Kooperative Modellproduktion von Professionellen und Klienten – erläutert Beispiel des Repertory Grid. Selbstorganisation, Kooperation, Zeichenprozeß : Arbeiten zu einer kulturwissenschaftlichen, anwendungsbezogenen Psychologie (pp. 209-254). Opladen: Westdeutscher Verlag. Slater, P. (1977). measurement intrapersonal space Grid technique. London: Wiley. Watson, J. P. (1970). relationship self-mutilating patient doctor. Psychotherapy Psychosomatics, 18(1), 67-73.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/descriptives.html","id":"r-code","dir":"Articles > Web","previous_headings":"","what":"R-Code","title":"Descriptive stats for constructs and elements","text":"following examples identical statsElements. Just replace statsConstructs statsElements order analyze elements. returned object dataframe, may access usual. E.g. retrieve means constructs, type","code":"d <- statsConstructs(fbb2003) d #  # #################################### # Desriptive statistics for constructs # #################################### #  #                             vars n mean   sd median trimmed  mad min max range  skew kurtosis   se # (1) clever - not bright        1 8 3.75 2.31    4.0    3.75 2.97   1   7     6  0.02    -1.84 0.82 # (2) disorganiz - organized     2 8 4.00 1.77    4.5    4.00 2.22   2   6     4 -0.13    -1.96 0.63 # (3) listens - doesn't he       3 8 3.50 2.14    3.0    3.50 2.22   1   7     6  0.35    -1.40 0.76 # (4) no clear v - clear view    4 8 4.38 1.60    4.0    4.38 1.48   3   7     4  0.38    -1.68 0.56 # (5) understand - no underst    5 8 3.50 1.85    2.5    3.50 0.74   2   6     4  0.41    -1.90 0.65 # (6) ambitious - no ambitio     6 8 4.50 1.51    4.5    4.50 2.22   3   7     4  0.33    -1.58 0.53 # (7) respected - not respec     7 8 3.25 1.75    3.0    3.25 1.48   1   6     5  0.23    -1.67 0.62 # (8) distant - warm             8 8 4.12 1.96    4.0    4.12 1.48   1   7     6 -0.05    -1.46 0.69 # (9) rather agg - not aggres    9 8 3.62 1.92    3.0    3.62 2.22   1   7     6  0.36    -1.25 0.68 d$mean # [1] 3.750 4.000 3.500 4.375 3.500 4.500 3.250 4.125 3.625 statsConstructs(fbb2003, trim = 10) #  # #################################### # Desriptive statistics for constructs # #################################### #  #                   vars n mean   sd median trimmed  mad min max range  skew kurtosis   se # (1) cleve - not b    1 8 3.75 2.31    4.0    3.75 2.97   1   7     6  0.02    -1.84 0.82 # (2) disor - organ    2 8 4.00 1.77    4.5    4.00 2.22   2   6     4 -0.13    -1.96 0.63 # (3) liste - doesn    3 8 3.50 2.14    3.0    3.50 2.22   1   7     6  0.35    -1.40 0.76 # (4) no cl - clear    4 8 4.38 1.60    4.0    4.38 1.48   3   7     4  0.38    -1.68 0.56 # (5) under - no un    5 8 3.50 1.85    2.5    3.50 0.74   2   6     4  0.41    -1.90 0.65 # (6) ambit - no am    6 8 4.50 1.51    4.5    4.50 2.22   3   7     4  0.33    -1.58 0.53 # (7) respe - not r    7 8 3.25 1.75    3.0    3.25 1.48   1   6     5  0.23    -1.67 0.62 # (8) dista - warm     8 8 4.12 1.96    4.0    4.12 1.48   1   7     6 -0.05    -1.46 0.69 # (9) rathe - not a    9 8 3.62 1.92    3.0    3.62 2.22   1   7     6  0.36    -1.25 0.68 statsConstructs(fbb2003, index = F) #  # #################################### # Desriptive statistics for constructs # #################################### #  #                         vars n mean   sd median trimmed  mad min max range  skew kurtosis   se # clever - not bright        1 8 3.75 2.31    4.0    3.75 2.97   1   7     6  0.02    -1.84 0.82 # disorganiz - organized     2 8 4.00 1.77    4.5    4.00 2.22   2   6     4 -0.13    -1.96 0.63 # listens - doesn't he       3 8 3.50 2.14    3.0    3.50 2.22   1   7     6  0.35    -1.40 0.76 # no clear v - clear view    4 8 4.38 1.60    4.0    4.38 1.48   3   7     4  0.38    -1.68 0.56 # understand - no underst    5 8 3.50 1.85    2.5    3.50 0.74   2   6     4  0.41    -1.90 0.65 # ambitious - no ambitio     6 8 4.50 1.51    4.5    4.50 2.22   3   7     4  0.33    -1.58 0.53 # respected - not respec     7 8 3.25 1.75    3.0    3.25 1.48   1   6     5  0.23    -1.67 0.62 # distant - warm             8 8 4.12 1.96    4.0    4.12 1.48   1   7     6 -0.05    -1.46 0.69 # rather agg - not aggres    9 8 3.62 1.92    3.0    3.62 2.22   1   7     6  0.36    -1.25 0.68"},{"path":"https://docs.openrepgrid.org/articles/web/elements-correlation.html","id":"description","dir":"Articles > Web","previous_headings":"","what":"Description","title":"Elements correlations","text":"measure element similarity correlations elements frequently used. Note product moment correlations measure similarity flawed invariant construct reflection (Bell, 2010; Mackay, 1992). correlation index invariant construct reflection Cohen’s rc measure (1969), can calculated using argument rc=TRUE default option.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/elements-correlation.html","id":"r-code","dir":"Articles > Web","previous_headings":"","what":"R-Code","title":"Elements correlations","text":"default construct reflection invariant correlation Cohen’s rc calculated. Note values change simple product-moment correlation used instaed Cohen’s rc. Make sure know setting rc=FALSE. Although recommended different measures, invariant construct relfection, can prompoted, setting rc=FALSE. Pearson Product-moment correlation (PMC) Kendall’s tau rank correlation Spearman’s rank correlation request types correlations use method argument plus rc=FALSE. Several arguments format output available. correlations calculated processing, correlations can saved. object matrix, can eassily acces results. E.g. correlations element Self.","code":"elementCor(mackay1992, rc = F) #  # ############################ # Correlation between elements # ############################ #  # Type of correlation:  pearson  # Note: Standard correlations are not invariant to scale reflection. #  #                         1     2     3     4     5     6 # (1) Self            1     -0.37 -0.19  0.32 -0.75  0.96 # (2) Ideal self      2           -0.71 -0.56 -0.26 -0.30 # (3) Mother          3                  0.63  0.57 -0.12 # (4) Father          4                        0.05  0.38 # (5) Spouse          5                             -0.74 # (6) Disliked person 6 elementCor(mackay1992, rc = FALSE, meth = \"kendall\") # Kendalls tau correlation elementCor(mackay1992, rc = FALSE, meth = \"spearman\") # Spearman rank correlation elementCor(mackay1992, index = F, trim = 6) #  # ############################ # Correlation between elements # ############################ #  # Type of correlation:  Cohens's rc (invariant to scale reflection)  #  #            1     2     3     4     5     6 # Self   1      0.59  0.28  0.29 -0.61 -0.62 # Ideal  2           -0.04 -0.20 -0.38 -0.81 # Mother 3                  0.63  0.37 -0.43 # Father 4                        0.00  0.00 # Spouse 5                              0.00 # Dislik 6 r <- elementCor(mackay1992) r[1, ] #            (1) Self      (2) Ideal self          (3) Mother          (4) Father          (5) Spouse (6) Disliked person  #           1.0000000           0.5876060           0.2809003           0.2909572          -0.6123724          -0.6182840"},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/elements-distances-standardized.html","id":"introduction","dir":"Articles > Web","previous_headings":"","what":"Introduction","title":"Distances between elements (standardized)","text":"similarity measure grids different types Minkowski metrics, especially Euclidean city-block metric frequently used. Euclidean distance sum squared differences ratings two different elements. , however, standardized measure. distances strongly depend number constructs rating range. figure demonstrates fact. Note distance changes although rating pattern remains identical.  order able compare distances across grids different size rating range standardization desireable. Also, notion significance distance, .e. distance unusually big, easier standard reference measure. Different suggestions made literature standardize Euclidean interelement distances (Hartmann, 1992; Heckmann, 2012; Slater, 1977). three variants briefly discussed corresponing R-Code demonstrated.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/elements-distances-standardized.html","id":"description","dir":"Articles > Web","previous_headings":"Slater distances (1977)","what":"Description","title":"Distances between elements (standardized)","text":"first suggestion standardization made Slater (1977). essentially calculated expected average Euclidean distance UU case ratings randomly distributed. standardize grids suggested divide matrix Euclidean distances EE unit expected distance UU. Slater standardization thus division Euclidean distances distance expected average. Hence, distances bigger 1 greater expected, distances smaller 1 smaller expected.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/elements-distances-standardized.html","id":"r-code","dir":"Articles > Web","previous_headings":"Slater distances (1977)","what":"R-Code","title":"Distances between elements (standardized)","text":"function distanceSlater calculates Slater distances grid. can save results define way displayed using print method. example display distances within certain boundaries, using cutoff values .8 1.2 indicate big small distances suggested Norris Makhlouf-Norris (1976).","code":"distanceSlater(boeker) #  # ########################## # Distances between elements # ########################## #  # Distance method:  Slater (standardized Euclidean) # Normalized: #                                1    2    3    4    5    6    7    8    9   10   11   12   13   14   15 # (1) self                  1      1.03 0.75 0.69 0.87 1.19 0.80 1.03 0.99 0.59 1.79 0.58 0.55 0.64 0.54 # (2) ideal self            2           1.11 0.78 1.06 1.31 1.07 0.97 1.14 0.97 1.56 1.22 1.21 1.24 1.25 # (3) mother                3                0.73 0.53 0.95 0.55 0.81 0.64 0.67 1.58 0.69 0.83 0.77 0.69 # (4) father                4                     0.63 1.15 0.65 0.90 0.83 0.69 1.66 0.84 0.91 0.98 0.89 # (5) kurt                  5                          0.89 0.57 0.79 0.57 0.72 1.51 0.79 0.93 0.87 0.83 # (6) karl                  6                               0.94 0.74 0.66 1.09 0.97 1.17 1.22 1.08 1.15 # (7) george                7                                    0.92 0.65 0.81 1.51 0.73 0.91 0.92 0.78 # (8) martin                8                                         0.68 0.80 1.27 1.09 1.10 1.01 1.07 # (9) elizabeth             9                                              0.87 1.31 1.00 1.13 1.03 0.98 # (10) therapist           10                                                   1.74 0.65 0.63 0.69 0.65 # (11) irene               11                                                        1.83 1.86 1.72 1.84 # (12) childhood self      12                                                             0.43 0.50 0.34 # (13) self before illness 13                                                                  0.43 0.41 # (14) self with delusion  14                                                                       0.45 # (15) self as dreamer     15                                                                            #  # Note that Slater distances cannot be compared across grids with a different number of constructs (see Hartmann, 1992). d <- distanceSlater(boeker) print(d, cutoffs = c(.8, 1.2)) #  # ########################## # Distances between elements # ########################## #  # Distance method:  Slater (standardized Euclidean) # Normalized: #                                1    2    3    4    5    6    7    8    9   10   11   12   13   14   15 # (1) self                  1           0.75 0.69           0.80           0.59 1.79 0.58 0.55 0.64 0.54 # (2) ideal self            2                0.78      1.31                     1.56 1.22 1.21 1.24 1.25 # (3) mother                3                0.73 0.53      0.55      0.64 0.67 1.58 0.69      0.77 0.69 # (4) father                4                     0.63      0.65           0.69 1.66                     # (5) kurt                  5                               0.57 0.79 0.57 0.72 1.51 0.79                # (6) karl                  6                                    0.74 0.66                1.22           # (7) george                7                                         0.65      1.51 0.73           0.78 # (8) martin                8                                         0.68 0.80 1.27                     # (9) elizabeth             9                                                   1.31                     # (10) therapist           10                                                   1.74 0.65 0.63 0.69 0.65 # (11) irene               11                                                        1.83 1.86 1.72 1.84 # (12) childhood self      12                                                             0.43 0.50 0.34 # (13) self before illness 13                                                                  0.43 0.41 # (14) self with delusion  14                                                                       0.45 # (15) self as dreamer     15                                                                            #  # Note that Slater distances cannot be compared across grids with a different number of constructs (see Hartmann, 1992)."},{"path":"https://docs.openrepgrid.org/articles/web/elements-distances-standardized.html","id":"calculation","dir":"Articles > Web","previous_headings":"Slater distances (1977)","what":"Calculation","title":"Distances between elements (standardized)","text":"Let GG raw grid matrix DD grid matrix centered around construct means, dij=g..−gijd_{ij} =g_{..} - g_{ij}, g..g_{..} mean construct. , let P=DTDandS=trPP=D^TD \\qquad \\text{} \\qquad S=tr\\;P Euclidean distances results : (∑(dij−dik)2)1/2(\\sum{ (d_{ij} - d_{ik} )^2})^{1/2} ⇔(∑(dij2+dik2−2dijdik))1/2\\Leftrightarrow (\\sum{ (d_{ij}^2 + d_{ik}^2 - 2d_{ij}d_{ik})})^{1/2} ⇔(∑dij2+∑dik2−2∑dijdik)1/2\\Leftrightarrow (\\sum{ d_{ij}^2 } + \\sum{d_{ik}^2} - 2\\sum{d_{ij}d_{ik} })^{1/2} ⇔(Sj+Sk−2Pjk)1/2\\Leftrightarrow (S_j + S_k - 2P_{jk})^{1/2} standardization, Slater proposes use expected Euclidean distance random pair elements taken grid. average SjS_j SkS_k Savg=S/mS_{avg} = S/m mm number elements grid. average -line diagonals PP S/m(m−1)S/m(m-1)(see Slater, 1951, proof). Inserted formula gives following expected average euclidean distance UU outputted unit expected distance Slater’s INGRID program. U=(2S/(m−1))1/2U = (2S/(m-1))^{1/2} calculated euclidean distances divided UU, unit expected distance form matrix standardized element distances EstdE_{std}, Estd=E/UE_{std} = E/U","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/elements-distances-standardized.html","id":"description-1","dir":"Articles > Web","previous_headings":"Hartmann distances (1992)","what":"Description","title":"Distances between elements (standardized)","text":"Hartmann (1992) showed Monte Carlo study Slater distances (see ) based random grids, Slater coined expression quasis, skewed distribution, mean standard deviation depending number constructs elicited. Hence, distances compared across grids different number constructs. remedy suggested linear transformation (z-transformation) Slater distance values take account estimated (alternatively expected) mean standard deviation standardize . Hartmann distances represent accurate version Slater distances. Note Hartmann distances multiplied -1 allow interpretation similar correlation coefficients: negative Hartmann values represent average dissimilarity (.e. big Slater distance) positive values represent average similarity (.e. small Slater distance). Hartmann distance calculated follows (Hartmann, 1992, p. 49). D=−1Dslater−McsdcD = -1 \\frac{D_{slater} - M_c}{sd_c} DslaterD_{slater} denotes Slater distances grid, McM_c sample distribution’s mean value sdcsd_c sample distributions’s standard deviation.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/elements-distances-standardized.html","id":"r-code-1","dir":"Articles > Web","previous_headings":"Hartmann distances (1992)","what":"R-Code","title":"Distances between elements (standardized)","text":"function distanceHartmann calculates Hartmann distances. function can operated two ways. default option (method=\"paper\") uses precalculated mean standard deviations (e.g. given Hartmann (1992)) standardization. second option (method=\"simulate\") simulate distribution distances based size scale range grid investigation. distribution Slater distances derived using quasis used Hartmann standardization instead precalculated values. following simulation based reps=1000 quasis. results saved, couple options printing object (see ?print.hdistance).","code":"distanceHartmann(boeker) #  # ########################## # Distances between elements # ########################## #  # Distance method:  Hartmann (standardized Slater distances) # Normalized: #                                 1     2     3     4     5     6     7     8     9    10    11    12    13    14    15 # (1) self                  1       -0.28  1.58  1.92  0.80 -1.33  1.20 -0.29 -0.04  2.62 -5.24  2.66  2.87  2.28  2.89 # (2) ideal self            2             -0.78  1.36 -0.47 -2.09 -0.56  0.12 -1.02  0.12 -3.69 -1.50 -1.45 -1.63 -1.71 # (3) mother                3                    1.70  2.99  0.22  2.82  1.15  2.27  2.09 -3.84  1.91  1.06  1.44  1.92 # (4) father                4                          2.31 -1.04  2.23  0.55  1.00  1.92 -4.39  0.96  0.50  0.08  0.63 # (5) kurt                  5                                0.63  2.72  1.27  2.69  1.74 -3.37  1.30  0.35  0.79  1.01 # (6) karl                  6                                      0.29  1.63  2.14 -0.66  0.10 -1.21 -1.53 -0.60 -1.04 # (7) george                7                                            0.45  2.19  1.17 -3.39  1.70  0.54  0.42  1.35 # (8) martin                8                                                  2.03  1.22 -1.85 -0.67 -0.73 -0.13 -0.53 # (9) elizabeth             9                                                        0.76 -2.07 -0.08 -0.91 -0.29  0.05 # (10) therapist           10                                                             -4.91  2.20  2.35  1.97  2.22 # (11) irene               11                                                                   -5.47 -5.65 -4.79 -5.52 # (12) childhood self      12                                                                          3.66  3.16  4.22 # (13) self before illness 13                                                                                3.60  3.79 # (14) self with delusion  14                                                                                      3.52 # (15) self as dreamer     15                                                                                           #  # For calculation the parameters from Hartmann (1992) were used. Use 'method=new' or method='simulate' for a more accurate version. h <- distanceHartmann(boeker, method = \"simulate\", reps = 1000) h #  # ########################## # Distances between elements # ########################## #  # Distance method:  Hartmann (standardized Slater distances) # Normalized: #                                 1     2     3     4     5     6     7     8     9    10    11    12    13    14    15 # (1) self                  1       -0.28  1.56  1.90  0.79 -1.32  1.19 -0.29 -0.04  2.59 -5.19  2.63  2.84  2.25  2.86 # (2) ideal self            2             -0.77  1.35 -0.47 -2.07 -0.56  0.12 -1.01  0.12 -3.65 -1.48 -1.43 -1.62 -1.70 # (3) mother                3                    1.68  2.96  0.21  2.79  1.14  2.25  2.07 -3.80  1.89  1.04  1.42  1.90 # (4) father                4                          2.28 -1.04  2.20  0.54  0.99  1.90 -4.35  0.95  0.49  0.08  0.62 # (5) kurt                  5                                0.62  2.69  1.25  2.66  1.72 -3.34  1.28  0.34  0.78  0.99 # (6) karl                  6                                      0.28  1.61  2.11 -0.65  0.09 -1.20 -1.51 -0.59 -1.03 # (7) george                7                                            0.44  2.17  1.15 -3.36  1.68  0.53  0.41  1.33 # (8) martin                8                                                  2.01  1.20 -1.83 -0.67 -0.73 -0.13 -0.52 # (9) elizabeth             9                                                        0.75 -2.05 -0.08 -0.90 -0.28  0.05 # (10) therapist           10                                                             -4.86  2.18  2.32  1.95  2.19 # (11) irene               11                                                                   -5.41 -5.59 -4.74 -5.46 # (12) childhood self      12                                                                          3.62  3.12  4.18 # (13) self before illness 13                                                                                3.56  3.75 # (14) self with delusion  14                                                                                      3.48 # (15) self as dreamer     15 print(d, p = c(.05, .95)) #  # ########################## # Distances between elements # ########################## #  # Distance method:  Slater (standardized Euclidean) # Normalized: #                                1    2    3    4    5    6    7    8    9   10   11   12   13   14   15 # (1) self                  1      1.03 0.75 0.69 0.87 1.19 0.80 1.03 0.99 0.59 1.79 0.58 0.55 0.64 0.54 # (2) ideal self            2           1.11 0.78 1.06 1.31 1.07 0.97 1.14 0.97 1.56 1.22 1.21 1.24 1.25 # (3) mother                3                0.73 0.53 0.95 0.55 0.81 0.64 0.67 1.58 0.69 0.83 0.77 0.69 # (4) father                4                     0.63 1.15 0.65 0.90 0.83 0.69 1.66 0.84 0.91 0.98 0.89 # (5) kurt                  5                          0.89 0.57 0.79 0.57 0.72 1.51 0.79 0.93 0.87 0.83 # (6) karl                  6                               0.94 0.74 0.66 1.09 0.97 1.17 1.22 1.08 1.15 # (7) george                7                                    0.92 0.65 0.81 1.51 0.73 0.91 0.92 0.78 # (8) martin                8                                         0.68 0.80 1.27 1.09 1.10 1.01 1.07 # (9) elizabeth             9                                              0.87 1.31 1.00 1.13 1.03 0.98 # (10) therapist           10                                                   1.74 0.65 0.63 0.69 0.65 # (11) irene               11                                                        1.83 1.86 1.72 1.84 # (12) childhood self      12                                                             0.43 0.50 0.34 # (13) self before illness 13                                                                  0.43 0.41 # (14) self with delusion  14                                                                       0.45 # (15) self as dreamer     15                                                                            #  # Note that Slater distances cannot be compared across grids with a different number of constructs (see Hartmann, 1992)."},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/elements-distances-standardized.html","id":"description-2","dir":"Articles > Web","previous_headings":"Heckmann’s approach (2012)","what":"Description","title":"Distances between elements (standardized)","text":"Hartmann (1992) suggested transformation Slater (1977) distances make independent size grid. Hartmann distances supposed yield stable cutoff values used determine ‘significance’ inter-element distances. can shown Hartmann distances still affected grid parameters like size range rating scale used (Heckmann, 2012). function distanceNormalize applies Box-Cox (1964) transformation Hartmann distances order remove skew Hartmann distance distribution. normalized values show stable nearly symmetric cutoffs (quantiles) better properties comparison across grids different size scale range.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/elements-distances-standardized.html","id":"r-code-2","dir":"Articles > Web","previous_headings":"Heckmann’s approach (2012)","what":"R-Code","title":"Distances between elements (standardized)","text":"function distanceNormalize return Slater, Hartmann power transformed Hartmann distances (Heckmann, 2012) prompted. also possible return quantiles sample distribution element distances consideres ‘significant’ according quantiles defined.","code":"n <- distanceNormalized(boeker) n #  # ########################## # Distances between elements # ########################## #  # Distance method:  Power transformed Hartmann distances # Normalized: #                                 1     2     3     4     5     6     7     8     9    10    11    12    13    14    15 # (1) self                  1       -0.28  1.56  1.90  0.79 -1.32  1.19 -0.29 -0.04  2.59 -5.18  2.63  2.84  2.25  2.86 # (2) ideal self            2             -0.77  1.35 -0.47 -2.07 -0.56  0.12 -1.01  0.12 -3.65 -1.48 -1.43 -1.62 -1.70 # (3) mother                3                    1.68  2.96  0.21  2.79  1.14  2.25  2.07 -3.80  1.89  1.04  1.42  1.90 # (4) father                4                          2.28 -1.04  2.20  0.54  0.99  1.90 -4.34  0.94  0.49  0.08  0.62 # (5) kurt                  5                                0.62  2.69  1.25  2.66  1.72 -3.34  1.28  0.34  0.78  0.99 # (6) karl                  6                                      0.28  1.61  2.11 -0.65  0.09 -1.19 -1.51 -0.59 -1.03 # (7) george                7                                            0.44  2.17  1.15 -3.36  1.68  0.53  0.41  1.33 # (8) martin                8                                                  2.01  1.20 -1.83 -0.67 -0.73 -0.13 -0.52 # (9) elizabeth             9                                                        0.75 -2.05 -0.08 -0.90 -0.28  0.05 # (10) therapist           10                                                             -4.86  2.18  2.32  1.95  2.19 # (11) irene               11                                                                   -5.41 -5.59 -4.74 -5.46 # (12) childhood self      12                                                                          3.62  3.12  4.17 # (13) self before illness 13                                                                                3.56  3.75 # (14) self with delusion  14                                                                                      3.48 # (15) self as dreamer     15"},{"path":"https://docs.openrepgrid.org/articles/web/elements-distances-standardized.html","id":"calculation-1","dir":"Articles > Web","previous_headings":"Heckmann’s approach (2012)","what":"Calculation","title":"Distances between elements (standardized)","text":"form normalization applied Hartmann (1992) account skewness kurtosis. , form normalization - power transformation - explored takes account higher moments distribution. purpose Hartmann values transformed using ‘’Box-Cox’’ family transformations (Box & Cox, 1964). transformation defined Yiλ={(Yi+c)λ−1λfor λ≠0ln(Yi+c)λ=0   Y_i^{\\lambda}= \\left\\{    \\begin{matrix}      \\frac{(Y_i + c)^\\lambda - 1}{\\lambda} & \\mbox{}\\lambda \\neq 0 \\\\      ln(Y_i + c) & \\mbox{}\\lambda = 0   \\end{matrix} \\right. transformation requires values ≥0\\ge 0 constant cc added derive positive values . present transformation cc defined minimum Hartmann distances quasis distribution. order derive transformation resembles normal distribution close possible, optimal λ\\lambda searched selecting λ\\lambda maximizes correlation quantiles transformed values YiλY_i^\\lambda standard normal distribution. last step, power transformed values YiλY_i^\\lambda z-transformed remove arbitrary scaling resulting Box-Cox transformation yielding YiPY_i^P. YiP=Yiλ−Y¯λσYλY_{}^P = \\frac{Y^{\\lambda}_i - \\overline Y^{\\lambda}}{\\sigma_{Y^{\\lambda}}}","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/elements-distances.html","id":"description","dir":"Articles > Web","previous_headings":"","what":"Description","title":"Distances between elements","text":"Distances elements used measure similarity. elements, distance measure advantage affected construct reflection case correlations elements (see elementCor). following distance measures available: euclidean: Squared distance two vectors (L2 norm) manhattan: Also called city-block-distance, absolute distance two vectors (L1 norm). minkowski: p norm, pth root sum pth powers differences components. maximum: Maximum distance two components x y (supremum norm) canberra: ∑(|xi−yi|/|xi+yi|)\\sum(|x_i - y_i| / |x_i + y_i|) Terms zero numerator denominator omitted sum treated values missing. intended non-negative values (e.g. counts). binary: vectors regarded binary bits, non-zero elements zero elements . distance proportion bits one amongst least one . grid purposes, first two options suffice.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/elements-distances.html","id":"r-code","dir":"Articles > Web","previous_headings":"","what":"R-Code","title":"Distances between elements","text":"OpenRepGrid function distance calculates various types distances constructs elements (default euclidean). argument along determines distances 1) constructs 2) elements calculated. default calculate distances constructs, always need set along=2 prompt element distances. change distance measure supply unambigous string available distance methods argument dmethod. E.g. manhattan distance bewteen constructs: distance metrics: distances calculated processing, printing console can surpressed distance results can saved object (d). object matrix. can look distances first element ","code":"distance(fbb2003, along = 2) # along = 2 for elements #  # ########################## # Distances between elements # ########################## #  # Distance method:  euclidean # Normalized: FALSE #                                1     2     3     4     5     6     7     8 # (1) self                 1        4.47  8.19  3.87  7.75  9.80  6.78  8.89 # (2) my father            2             10.15  4.36  8.83 11.22  4.00  9.33 # (3) an old flame         3                    7.48  6.56  7.42 10.05  5.48 # (4) an ethical person    4                          6.24  9.11  6.24  6.93 # (5) my mother            5                                9.06  8.83  4.36 # (6) a rejected teacher   6                                     12.65  8.19 # (7) as I would love to b 7                                            8.77 # (8) a pitied person      8 distance(fbb2003, along = 2, dmethod = \"man\") #  # ########################## # Distances between elements # ########################## #  # Distance method:  manhattan # Normalized: FALSE #                                1     2     3     4     5     6     7     8 # (1) self                 1       10.00 23.00  9.00 20.00 26.00 18.00 23.00 # (2) my father            2             27.00  9.00 24.00 28.00  8.00 27.00 # (3) an old flame         3                   18.00 17.00 17.00 27.00 12.00 # (4) an ethical person    4                         15.00 25.00 15.00 18.00 # (5) my mother            5                               24.00 22.00  9.00 # (6) a rejected teacher   6                                     34.00 21.00 # (7) as I would love to b 7                                           25.00 # (8) a pitied person      8 distance(fbb2003, along = 2, dm = \"canb\") # canberra distance for constructs distance(fbb2003, along = 2, dm = \"mink\", p = 3) # minkowski metric to the power of 3  for constructs d <- distance(fbb2003) d[1, ] #     (1) clever - not bright  (2) disorganiz - organized    (3) listens - doesn't he (4) no clear v - clear view  #                    0.000000                   10.392305                    2.449490                    9.539392  # (5) understand - no underst  (6) ambitious - no ambitio  (7) respected - not respec          (8) distant - warm  #                    3.741657                    6.782330                    2.828427                    8.185353  # (9) rather agg - not aggres  #                    7.681146"},{"path":"https://docs.openrepgrid.org/articles/web/features.html","id":"basics","dir":"Articles > Web","previous_headings":"","what":"Basics","title":"Features","text":"Installation Basic package handling Settings Loading saving grids Data sets","code":""},{"path":"https://docs.openrepgrid.org/articles/web/features.html","id":"analyzing-constructs","dir":"Articles > Web","previous_headings":"","what":"Analyzing constructs","title":"Features","text":"Descriptive statistics Construct correlations Distances constructs PCA construct correlations Cluster analysis constructs","code":""},{"path":"https://docs.openrepgrid.org/articles/web/features.html","id":"analyzing-elements","dir":"Articles > Web","previous_headings":"","what":"Analyzing elements","title":"Features","text":"Descriptive statistics elements Element correlations Distances elements Standardized elements distances Cluster analysis elements","code":""},{"path":"https://docs.openrepgrid.org/articles/web/features.html","id":"visualization","dir":"Articles > Web","previous_headings":"","what":"Visualization","title":"Features","text":"Bertin plots Biplots","code":""},{"path":"https://docs.openrepgrid.org/articles/web/features.html","id":"index-measures","dir":"Articles > Web","previous_headings":"","what":"Index measures","title":"Features","text":"Intensity index PVAFF Conflicts: based correlations distances Implicative dilemmas Dispersion dependency","code":""},{"path":"https://docs.openrepgrid.org/articles/web/features.html","id":"reordering","dir":"Articles > Web","previous_headings":"","what":"Reordering","title":"Features","text":"Reorder align constructs","code":""},{"path":"https://docs.openrepgrid.org/articles/web/installation.html","id":"installing-r-and-rstudio","dir":"Articles > Web","previous_headings":"","what":"Installing R and RStudio","title":"Installation","text":"prerequisite installing OpenRepGrid package R installed computer. R can downloaded Windows, MacOS Linux. RStudio program makes easier handle R. can download . programs please follow installation instructions websites.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/installation.html","id":"installing-the-openrepgrid-package","dir":"Articles > Web","previous_headings":"","what":"Installing the OpenRepGrid package","title":"Installation","text":"easiest way install OpenRepGrid package within RStudio. Select tab Packages -> Install type OpenRepGrid.  Alternatively may also use R command line install package. Just type following code:","code":"install.packages(\"OpenRepGrid\")"},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/installation.html","id":"development-version","dir":"Articles > Web","previous_headings":"","what":"Development version","title":"Installation","text":"version package hosted CRAN checked release. latest development version hosted github. install latest version features currently development need follow three steps: Make sure latest version R installed. Make sure following packages installed. install typing download install OpenRepGrid development version github can use function devtools package.","code":"install.packages(c(\"colorspace\", \"plyr\", \"abind\", \"rgl\", \"psych\", \"XML\")) library(devtools) install_github(\"OpenRepGrid\", \"markheckmann\")"},{"path":"https://docs.openrepgrid.org/articles/web/intro.html","id":"repertory-grid-technique","dir":"Articles > Web","previous_headings":"","what":"Repertory Grid Technique","title":"OpenRepGrid: An R Package for the Analysis of Repertory Grid Data","text":"repertory grid technique (RGT) data collection method originated Personal Construct Theory (PCT) (Kelly, 1955). originally designed instrument psychotherapy shed light client’s construction world. subsequent decades, technique adopted many fields, including market, organizational, political, educational sensory research (Fransella, Bell, & Bannister, 2004). data RGT generates qualitative quantitative. qualitative side, technique elicits repertory bipolar attributes (e.g. smart vs. dull, called constructs PCT terminology) individual uses make distinctions entities world (e.g. different people, called elements PCT terminolgy). quatitative side, requires rating element elicited personal construct (e.g. Martin gets score 2 quarrelsome = 1 vs. peaceful = 6 construct, indicating Martin quite quarrelsome). result data collection procedure data matrix. constructs usually presented matrix rows, elements columns cell contains corresponding rating score. Figure 1 depicts repertory grid data set, rows (constructs) columns (elements) clustered similarity (see details). thorough introduction repertory grid technique given Fransella et al. (2004).","code":""},{"path":"https://docs.openrepgrid.org/articles/web/intro.html","id":"available-software","dir":"Articles > Web","previous_headings":"","what":"Available Software","title":"OpenRepGrid: An R Package for the Analysis of Repertory Grid Data","text":"possible work repertory grids directly without processing, common submit grid data statistical mathematical analysis (e.g. Fransella et al., 2004). purpose, software packages developed since 1960s (Sewell, Adams-webber, Mitterer, & Cromwell, 1992). Today, several softwares available market, e.g. Enquire Within (Mayes, 2008), GridStat (Bell, 2009), GridCor (Feixas & Cornejo, 2002), Idiogrid (Grice, 2002), Rep 5 (Gaines & Shaw, 2009), GridSuite (Fromm & Bacher, 2006), rep:grid (Rosenberger, 2015). Despite numerous software packages available, several issues common among : grid software offers methods grid analysis devised literature. None available grid programs can extended user, .e., user add modify features. listed softwares closed source least available public repository. computational framework integrated available grid programs support experimental types analysis. output grid analysis programs easily lend subsequent computation. joint community effort improve grid program: development documentation delegated software providers, users researcher usually participate process. lack community participation software development closed source nature leads problem discontinued development initiators moved retired.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/intro.html","id":"rationale","dir":"Articles > Web","previous_headings":"","what":"Rationale","title":"OpenRepGrid: An R Package for the Analysis of Repertory Grid Data","text":"OpenRepGrid project started idea overcoming mentioned issues. designed open source project allowing researchers contribute, example, implementing new features. R chosen programming language runs major operating systems, gets increasingly popular among academics nowadays already taught undergrads many universities. open source nature R makes transparent functions (.e. methods grid analysis) implemented. Also, R contributed packages distributed copyleft license. allows reseachers use modify existing code needs redistribute code license. total, obstancles experimenting contributing significantly lowered compared softwares market. open source collaborative stance project may bear another important benefit terms scientific progress. Currently, appears exist substantial latency publication new grid analysis methods made available researchers software features. example, structural quadrant method (SQM), method assess construct system complexity, devised 20 years ago Gallifa & Botella (2000), may serve example. SQM implemented grid program, hindering research discussion method. OpenRepGrid project may help improve situation. researchers decide build new method R beginning , adding method OpenRepGrid package small additional step. facilitate dissemination new methods research community, leading reduction time--market new methodological ideas. method’s code tested documented, can immediately become part OpenRepGrid package instantly used researchers using grids. Another reason choice R growing ability easily build graphical user interfaces (GUI) using, example, shiny (Chang, Cheng, Allaire, Xie, & McPherson, 2019) related R packages. PCP community average well-versed programming. translates need easy operate, GUI-based software. shiny require knowledge web languages (.e. CSS, HTML, JavaScript) build fully operational web application, R also suitable choice fullfill community need.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/intro.html","id":"features","dir":"Articles > Web","previous_headings":"","what":"Features","title":"OpenRepGrid: An R Package for the Analysis of Repertory Grid Data","text":"--date overview features implemented OpenRepGrid package can found project’s documentation site (http://docs.openrepgrid.org.) R package’s documentation files, accessible via R Help. implemented features include following: Data handling: Importing exporting grid data different formats, sorting grids, several included datasets (e.g. boeker dataset, see ) Analyzing constructs: Descriptive statistics, correlations, distances, PCA construct correlations, cluster analysis, aligning constructs Analyzing elements: Descriptive statistics, correlations, distances, standardized element distances, cluster analysis Visualization: (Clustered) Bertin plots (.e. heatmaps), biplots, clustering dendrograms Indexes: Intensity, complexity, PVAFF, measures cognitive conflict, implicative dilemmas, etc. remainder, three repgrid visualizations frequently used publications two types statistical grid analyses briefly outlined feature examples. Figure 1 shows Bertin diagram (.e. heatmap) grid administered schizophrenic patient undergoing psychoanalytically oriented psychotherapy (Böker, 1996). data taken last stage therapy. data example already included package. ratings grid color-coded allowing spot similar rating patterns. Also, grid submitted hierarchical cluster analysis, thereby reordering constructs elements similarity indicated dendrograms printed alongside diagram. following code creates diagram shown Figure 1. Figure 2 shows biplot grid data Figure 1. biplot generalization scatterplot two many axes, displayed single plot. allows reading approximate score element construct projecting element’s position plot construct axes (Greenacre, 2010; Slater, 1977). biplot, can, example, seen “father” element construed closely “ideal self”. Biplots grid data generally useful generate transparency individual’s overall construction elements similarity. Figure 2 created following code. Figure 3 shows dendrogram elements, result hierarchical cluster analysis using Ward’s method Euclidean distances measure. Using approach suggested Heckmann & Bell (2016), dendrogram structures also tested stability. Stable significant structures framed rectangle, indicating “childhood self”, “self illness”, “self delusion”, “self dreamer” forms stable group elements. Figure 3 created following code. Inter-element distances commonly applied measure statistical analysis grid data (Fransella et al., 2004). already shown biplot example , distances elements indicate elements (.e. persons) construed similar. One distance particular intererest psychotherapy research self-ideal distance may provide useful clinical indications (e.g. Taylor, Usher, Jomar, & Forrester, 2020). also areas, example, market research element distances frequently used analysis (e.g. Hauser, Jonas, & Riemann, 2011). cases, Euclidean distance selected distance measure. maximal Euclidean distances two elements depends rating scale number constructs grid, several approaches standardizing inter-element distances suggested. One well known approach come known Slater distances, divides inter-element distance expected value (Slater, 1977). However, Hartmann (1992) showed simulation study Slater distances skewed distribution, well mean standard deviation depending number elicited constructs. Hartmann suggested improvement measure applying transformation standardize Slater distances across different grid sizes. development serves another example mentioned situation, best knowledge, Hartmann distances currently implemented OpenRepGrid grid software. Hartmann distances can calculated using following code. last feature example concers detection implicative dilemmas. Implicative dilemmas represent form cognitive conflict. implicative dilemma arises desired change one construct associated undesired change another construct. example, timid person may wish become socially skilled associates socially skilled several negative characteristics (selfish, insensitive etc.). person might, example, construe implication becoming less timid (desired) becoming selfish (undesired) time (Winter, 1982). consequence, person may resist desired change presumed implications threaten person’s identity predictive power construct system. investigation role implicative dilemmas different mental disorders active field research Personal Construct Psychology (Dorough, Grice, & Parker, 2007; e.g. Feixas & Saúl, 2004; Rouco, Paz, Winter, & Feixas, 2019). Implicative dilemma can detected using indexDilemma function. dataset , results show desired change discrepant contruct balanced - get along conflicts towards get along conflicts pole implies four undesired changes, example, become indifferent less peaceful. implied dilemmas can also visualized network graph.","code":"distanceHartmann(boeker) #  # ########################## # Distances between elements # ########################## #  # Distance method:  Hartmann (standardized Slater distances) # Normalized: #                                 1     2     3     4     5     6     7     8     9    10    11    12    13    14    15 # (1) self                  1       -0.28  1.58  1.92  0.80 -1.33  1.20 -0.29 -0.04  2.62 -5.24  2.66  2.87  2.28  2.89 # (2) ideal self            2             -0.78  1.36 -0.47 -2.09 -0.56  0.12 -1.02  0.12 -3.69 -1.50 -1.45 -1.63 -1.71 # (3) mother                3                    1.70  2.99  0.22  2.82  1.15  2.27  2.09 -3.84  1.91  1.06  1.44  1.92 # (4) father                4                          2.31 -1.04  2.23  0.55  1.00  1.92 -4.39  0.96  0.50  0.08  0.63 # (5) kurt                  5                                0.63  2.72  1.27  2.69  1.74 -3.37  1.30  0.35  0.79  1.01 # (6) karl                  6                                      0.29  1.63  2.14 -0.66  0.10 -1.21 -1.53 -0.60 -1.04 # (7) george                7                                            0.45  2.19  1.17 -3.39  1.70  0.54  0.42  1.35 # (8) martin                8                                                  2.03  1.22 -1.85 -0.67 -0.73 -0.13 -0.53 # (9) elizabeth             9                                                        0.76 -2.07 -0.08 -0.91 -0.29  0.05 # (10) therapist           10                                                             -4.91  2.20  2.35  1.97  2.22 # (11) irene               11                                                                   -5.47 -5.65 -4.79 -5.52 # (12) childhood self      12                                                                          3.66  3.16  4.22 # (13) self before illness 13                                                                                3.60  3.79 # (14) self with delusion  14                                                                                      3.52 # (15) self as dreamer     15                                                                                           #  # For calculation the parameters from Hartmann (1992) were used. Use 'method=new' or method='simulate' for a more accurate version. id <- indexDilemma(boeker, self = 1, ideal = 2) id #  # #################### # Implicative Dilemmas # #################### #  # ------------------------------------------------------------------------------- #  # SUMMARY: #  # No. of Implicative Dilemmas (IDs): 4 # No. of possible construct pairs: 91 # Percentage of IDs (PID): 4.4% (4/91) # Intensity of IDs (IID): 61.3 # Proportion of the intensity of constructs of IDs (PICID): 2.7 #  # ------------------------------------------------------------------------------- #  # PARAMETERS: #  # Self: Element No. 1 = self # Ideal: Element No. 2 = ideal self #  # Correlation Criterion: >= 0.35 # Note: Correlation calculated including elements Self & Ideal #  # Criteria (for construct classification): # Discrepant if Self-Ideal difference: >= 3 # Congruent if Self-Ideal difference: <= 1 #  # ------------------------------------------------------------------------------- #  # CLASSIFICATION OF CONSTRUCTS: #  #    Note: Constructs aligned so 'Self' corresponds to left pole #  #                              Construct Self Ideal Difference Classification # 1  balanced - get along with conflicts    1     4          3     discrepant # 2                  isolated - sociable    3     6          3     discrepant # 3        closely integrated - excluded    2     2          0      congruent # 4                 passive - discursive    3     6          3     discrepant # 5            open minded - indifferent    2     1          1      congruent # 6               dispassionate - dreamy    3     2          1      congruent # 7     practically oriented - depressed    2     1          1      congruent # 8                    serious - playful    3     2          1      congruent # 9            socially minded - selfish    2     1          1      congruent # 10              peaceful - quarrelsome    2     2          0      congruent # 11                technical - artistic    2     6          4     discrepant # 12              scientific - emotional    2     1          1      congruent # 13               extrovert - introvert    3     2          1      congruent # 14          wanderlust - home oriented    1     1          0      congruent #  # ------------------------------------------------------------------------------- #  # IMPLICATIVE DILEMMAS: #  #    Note: Congruent constructs on the left - Discrepant constructs on the right #  #                        Congruent                             Discrepant    R            RexSI # 1   5. open minded - indifferent 1. balanced - get along with conflicts 0.53             0.63 # 2   9. socially minded - selfish 1. balanced - get along with conflicts 0.36             0.43 # 3     10. peaceful - quarrelsome 1. balanced - get along with conflicts 0.84 *Not implemented # 4 14. wanderlust - home oriented 1. balanced - get along with conflicts 0.72             0.79 #  #   R = Correlation including Self & Ideal #   RexSI = Correlation excluding Self & Ideal #   R was used as criterion"},{"path":"https://docs.openrepgrid.org/articles/web/intro.html","id":"contributing","dir":"Articles > Web","previous_headings":"","what":"Contributing","title":"OpenRepGrid: An R Package for the Analysis of Repertory Grid Data","text":"order maximize package’s usefulness grid research community, welcome participation package’s development. Experienced R programmers asked make pull requests OpenRepGrid github repository, report issues, commit code snippets email. Non-technical oriented researchers without programming knowledge invited send us feature requests suggestions collaboration, example, jointly develop implement new repgrid analysis method. goal make OpenRepGrid useful majority repgrid community possible via research community participation.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/loading.html","id":"microsoft-excel-files","dir":"Articles > Web","previous_headings":"Loading OpenRepGrid files","what":"Microsoft Excel files","title":"Loading","text":"can define grid file using Microsoft Excel. .xlsx file fixed format. See example correct file . first row contains minimum rating scale (red), names elements (green) maximum rating scale (red). , every row contains left construct pole (blue), ratings (black) right construct pole (blue).  load .xlsx file save object x type following code R console (assuming file called sample.xlsx exists). OpenRepGrid package comes example Excel file. Excel installed, able open typing","code":"x <- importExcel(\"sample.xlsx\") file <- system.file(\"extdata\", \"grid_01.xlsx\", package = \"OpenRepGrid\") file.show(file) # may not work on all systems"},{"path":"https://docs.openrepgrid.org/articles/web/loading.html","id":"txt-files","dir":"Articles > Web","previous_headings":"Loading OpenRepGrid files","what":".txt files","title":"Loading","text":"grid program hand can define grid using standard text editor saving .txt file. .txt file fixed format. three mandatory blocks starting ending predefined tag uppercase letters. first block starts ELEMENTS ends END ELEMENTS contains one element line. mandatory blocks contain constructs ratings (see ). block containing constructs left right pole separated colon (:). order blocks arbitrary. text contained within blocks discarded can thus used comments. load .txt file save object x type following code R console. make sure, file exists current working directory. either specify whole path file must change R working directory. OpenRepGrid package comes sample .txt file. can load follows. open sample .txt file try:","code":"------------ example.txt file ---------------  anything not contained within the tags will be discarded  ELEMENTS element 1 element 2 element 3 END ELEMENTS  CONSTRUCTS left pole 1 : right pole 1 left pole 2 : right pole 2 left pole 3 : right pole 3 left pole 4 : right pole 4 END CONSTRUCTS  RATINGS 1 3 2 4 1 1 1 4 4 3 1 1 END RATINGS  RANGE 1 4 END RANGE ---------------- end of file ---------------- x <- importTxt(\"example.txt\") x <- importTxt(\"my_folder/example.txt\") # whole path to file or getwd() # show current working directory setwd(\"my_folder\") # change working directory to the folder markheckmann/data x <- importTxt(\"example.txt\") # load file that is in the current working directory file <- system.file(\"extdata\", \"grid_01.txt\", package = \"OpenRepGrid\") x <- importTxt(file) file.show(file) # may not work on all systems"},{"path":"https://docs.openrepgrid.org/articles/web/loading.html","id":"import-files-from-other-grid-programs","dir":"Articles > Web","previous_headings":"","what":"Import files from other grid programs","title":"Loading","text":"import grid programs works importing .txt file. Either specify file name resides current R working directory, supply whole file path current directory supply argumnets interactive file selection dialog window open.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/loading.html","id":"gridcor","dir":"Articles > Web","previous_headings":"Import files from other grid programs","what":"Gridcor","title":"Loading","text":"","code":"x <- importGridcor(\"gridcor.dat\") # file in current R working directory or x <- importGridcor(\"markheckmann/data/gridcor.dat\") # whole file path or x <- importGridcor() # open file selection dialog"},{"path":"https://docs.openrepgrid.org/articles/web/loading.html","id":"gridstat","dir":"Articles > Web","previous_headings":"Import files from other grid programs","what":"Gridstat","title":"Loading","text":"","code":"x <- importGridstat(\"gridstat.dat\") # file in current R working directory or x <- importGridstat(\"markheckmann/data/gridstat.dat\") # whole file path or x <- importGridstat() # open file selection dialog"},{"path":"https://docs.openrepgrid.org/articles/web/loading.html","id":"gridsuite","dir":"Articles > Web","previous_headings":"Import files from other grid programs","what":"GridSuite","title":"Loading","text":"","code":"x <- importGridsuite(\"gridsuite.xml\") # file in current R working directory or x <- importGridsuite(\"markheckmann/data/gridsuite.xml\") # whole file path or x <- importGridsuite() # open file selection dialog"},{"path":"https://docs.openrepgrid.org/articles/web/loading.html","id":"scivesco","dir":"Articles > Web","previous_headings":"Import files from other grid programs","what":"sci:vesco","title":"Loading","text":"","code":"x <- importScivesco(\"scivesco.scires\") # file in current R working directory or x <- importScivesco(\"markheckmann/data/scivesco.scires\") # whole file path or x <- importScivesco() # open file selection dialog"},{"path":"https://docs.openrepgrid.org/articles/web/loading.html","id":"saving-grids","dir":"Articles > Web","previous_headings":"","what":"Saving grids","title":"Loading","text":"OpenRepGrid can currently save grids two formats. Either .txt file R data object.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/loading.html","id":"txt-file","dir":"Articles > Web","previous_headings":"Saving grids","what":".txt file","title":"Loading","text":"save grid .txt file use function saveAsTxt. save grid .txt file format used OpenRepGrid. file format can also easily edited hand (see importTxt description). function open interactive dialog box let user enter filename file argument supplied function call. Let’s suppose want strore boeker grid.","code":"saveAsTxt(boeker, \"boeker.txt\") # save it to the file \"boeker.txt\" saveAsTxt(boeker) # open a dialog box to enter the file name interactively"},{"path":"https://docs.openrepgrid.org/articles/web/loading.html","id":"r-data-object","dir":"Articles > Web","previous_headings":"Saving grids","what":"R data object","title":"Loading","text":"Another option save grid RData object. done using function save. future versions OpenRepGrid also support .xml format community standard agreed upon.","code":"save(boeker, file = \"boeker.RData\") # save it to the file \"boeker.RData\""},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/measures-conflict.html","id":"description","dir":"Articles > Web","previous_headings":"Conflict measures bases on correlations","what":"Description","title":"Conflict measures","text":"first approach mathematically derive conflict measure based grid data presented (1979). based operationalization approach Lauterbach (1975) applied Heider’s (1946) balance theory quantitative assessment psychological conflict. measure uses inter-construct correlation basis. assess via sign correlations triad constructs constructs triad balanced imbalanced. triad imbalanced one three correlations negative, . e. leading contrary implications (Slade & Sheehan, 1979). function indexConflict1 OpenRepGrid calculates proportion conflictive triads grid devised Slade Sheehan. Slade Sheehan’s approach several drawbacks, take account magnitude inter-construct correlations. consequence significant insignificant correlations differentiated. Also, correlations small magnitude, .e. near zero, may positive negative signe due chance alone distort measure (Bassler, Krauthauser, & Hoffmann, 1992; Winter, 1982). improved version index overcomes shortcomings proposed (1992) incorporated program CT (correlation test). index enhances identification imbalanced triads using criterion incorporates magnitudes correlations. psychological viewpoint, remains unclear though measured. Connections concept cognitive differentiation presumed (Krauthauser, Bassler, & Potratz, 1994). function indexConflict2 OpenRepGrid calculates proportion conflictive triads grid devised (1992).","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/measures-conflict.html","id":"slade_measurement_1979-approach","dir":"Articles > Web","previous_headings":"Conflict measures bases on correlations > Calculation","what":"Slade & Sheehan (1979) approach","title":"Conflict measures","text":"Multiply correlations triad (formed constructs , B C) rABrACrBCr_{AB} r_{AC} r_{BC}. sign result negative, triad imbalanced. table shows triad made constructs , B, C balanced imbalanced.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/measures-conflict.html","id":"bassler_new_1992-approach","dir":"Articles > Web","previous_headings":"Conflict measures bases on correlations > Calculation","what":"Bassler et al. (1992) approach","title":"Conflict measures","text":"Order correlations triad absolute magnitude, rmax>rmdn>rminr_{max} > r_{mdn} > r_{min}. Apply Fisher’s Z-transformation devision 3 yield values 1 -1 Check whether triad balanced assessing following relation holds: ZmaxZmdn>0Z_{max} Z_{mdn} > 0, triad balanced ZmaxZmdn−Zmin<=critZ_{max} Z_{mdn} - Z_{min} <= crit ZmaxZmdn<0Z_{max} Z_{mdn} < 0, triad balanced Zmin−ZmaxZmdn<=critZ_{min} - Z_{max} Z_{mdn} <= crit","code":""},{"path":"https://docs.openrepgrid.org/articles/web/measures-conflict.html","id":"r-code","dir":"Articles > Web","previous_headings":"Conflict measures bases on correlations","what":"R-Code","title":"Conflict measures","text":"use Slade Sheehan approach use Bassler et al. approach use","code":"indexConflict1(boeker) #  # ################################ # Conflicts based on correlations # ################################ #  # As devised by Slade & Sheehan (1979) #  # Total number of triads: 364 # Number of imbalanced triads: 106 #  # Proportion of balanced triads: 70.9 % # Proportion of imbalanced triads: 29.1 % indexConflict2(boeker) #  # ############################### # Conflicts based on correlations # ############################### #  # As devised by Bassler et al. (1992) #  # Total number of triads: 364 # Number of imbalanced triads: 240 #  # Proportion of balanced triads: 34.1 % # Proportion of imbalanced triads: 65.9 % indexConflict2(boeker, crit = .05) # change critical value #  # ############################### # Conflicts based on correlations # ############################### #  # As devised by Bassler et al. (1992) #  # Total number of triads: 364 # Number of imbalanced triads: 219 #  # Proportion of balanced triads: 39.8 % # Proportion of imbalanced triads: 60.2 %"},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/measures-conflict.html","id":"description-1","dir":"Articles > Web","previous_headings":"Conflict measures based on distances","what":"Description","title":"Conflict measures","text":"Measure conflict inconsistency proposed Bell (2004). identification conflict based distances rather correlations measures conflict indexConflict1 indexConflict2. assesses distances components triad, made one element two constructs, satisfies “triangle inequality” (cf. Bell, 2004). , triad regarded conflictive. advantage measure can interpreted global measure grid also element, construct, element construct level making valuable detailed feedback. Also, differences conflict can submitted statistical testing procedures.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/measures-conflict.html","id":"r-code-1","dir":"Articles > Web","previous_headings":"Conflict measures based on distances","what":"R-Code","title":"Conflict measures","text":"","code":"indexConflict3(leach2001a) #  # ########################################################## # CONFLICT OR INCONSISTENCIES BASED ON TRIANGLE INEQUALITIES # ########################################################## #  # Potential conflicts in grid:  819 # Actual conflicts in grid:  340 # Overall percentage of conflict in grid:  41.51 % #  # ELEMENTS # ######## #  # Percent of conflict attributable to element: #  #                       percentage # 1 Child self             1088.24 # 2 Self now                794.12 # 3 Women in general        176.47 # 4 Men in general          823.53 # 5 Father                 1647.06 # 6 Partner                1029.41 # 7 Ideal self             1470.59 # 8 Mother                 1058.82 # 9 Abuser in childhood    1911.76 #  # Chi-square test of equal count of conflicts for elements. #  #   Chi-squared test for given probabilities #  # data:  x$e.count # X-squared = 65, df = 8, p-value = 4.826e-11 #  #  # CONSTRUCTS # ########## #  # Percent of conflict attributable to construct: #  #                            percentage # 1 assertive - not assert         8.09 # 2 confident - unconfiden         7.65 # 3 does not f - feels guil        9.12 # 4 abusive - not abusiv           7.35 # 5 frightenin - not fright        6.47 # 6 untrustwor - trustworth        6.76 # 7 powerful - powerless           6.18 # 8 big headed - not big he        6.18 # 9 independen - dependent         6.03 # 10 confusing - not confus        6.91 # 11 guilty - not guilty           6.18 # 12 cold - shows feel             6.03 # 13 masculine - feminine          7.50 # 14 interested - not intere       9.56 #  # Chi-square test of equal count of conflicts for constructs. #  #   Chi-squared test for given probabilities #  # data:  x$c.count # X-squared = 16.171, df = 13, p-value = 0.24"},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/measures-dispersion.html","id":"background","dir":"Articles > Web","previous_headings":"","what":"Background","title":"Dispersion of Dependency","text":"Personal Construct Psychology’s (PCP) founder, George Kelly, proposed problematic view people either independent dependent everyone , greater lesser degrees, dependent upon others life (Kelly, 1969). Kelly felt important well people disperse dependencies across different people. Whereas young children tend dependencies concentrated small number people (typically parents), adults likely spread dependencies across variety others. Dispersing one’s dependencies generally considered psychologically adjusted adults (Walker et al., 1988).","code":""},{"path":"https://docs.openrepgrid.org/articles/web/measures-dispersion.html","id":"being-helped-grid","dir":"Articles > Web","previous_headings":"Background","what":"Being Helped Grid","title":"Dispersion of Dependency","text":"Walker et al. (1988) developed Helped Grid measure dispersion dependency. completing grid, research participants encouraged choose least 10 people role titles: Suggested Role Titles Helped Grid: Mother Father Grandmother Grandfather Sister Brother Daughter Son Spouse Friend sex Friend opposite sex Boss Minister/priest/rabbi Neighbor Doctor Advisor/counselor Teacher Relative writing names selected people Helped Grid, research participants asked “think time problem X. people around time, gone help.” Participants place tick next person seek help problems grid. problem situations used grid listed . Problem Situations Included Helped Grids: time perplexed kind job vocation go . time greatest difficulty understanding get along opposite sex. time things seemed going , luck particularly bad. time hard financially. time poorest health long period illness. time someone took advantage know . time made one serious mistakes life. time failed accomplish something tried hard . time lonely. time felt discouraged future. time wondered feel better dead came nearest feeling way. time felt misunderstood others. time got angry. time hurt someone’s feelings. time felt ashamed. time felt frightened. time acted childishly. time felt jealous. time felt mixed confused things general. time serious trouble parents, came nearest trouble . time trouble brother, sister, close relative, time came nearest trouble one . time trouble wife/husband girl/boyfriend, time came nearest trouble one . time trouble children, time came nearest trouble one .","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/measures-dispersion.html","id":"dispersion-of-dependency-ddi","dir":"Articles > Web","previous_headings":"Measures","what":"Dispersion of Dependency (DDI)","title":"Dispersion of Dependency","text":"Walker et al. (1988, p. 66) developed Dispersion Dependency Index (DDI) measure degree dispersion dependency situation-resource grid (dependency grid), .e. degree person dispersed critical situations resource persons. index renamed adoption diversity index field ecology used measure diversity species sample. computationally identical. index applicable dependency grids (e.g., situation-resource) , .e., grid ratings must 00 11. index calculated follows (Walker et al., 1988, p. 66): DI=∑=1k[1.0−C(N−ni,DS)C(N,DS)]\\mathrm{DI}=\\sum_{=1}^k\\left[1.0-\\frac{C\\left(N-n_i, \\mathrm{DS}\\right)}{C(N, \\mathrm{DS})}\\right] : DSDS: predetermined size sample dependencies kk: number people (columns) grid NN: total number dependencies grid nin_i: number dependencies involving person ii (= number ticks column) C(p,q)C(p,q): number ways choosing q objects set pp objects, .e., p!/(q!(p−q)!)p!/(q!(p- q)!)","code":"# sample grid from Walker et al. (1988), p. 67 file <- system.file(\"extdata\", \"dep_grid_walker_1988_2.xlsx\", package = \"OpenRepGrid\") x <- importExcel(file) x #  # RATINGS: #              3 - P3         #       P2 - 2 | 4 - P4       #     P1 - 1 | | | 5 - P5     #          | | | | |          # S1 (1)   1 0 0 1 0   (1) NA # S2 (2)   0 1 0 0 1   (2) NA # S3 (3)   1 0 1 0 0   (3) NA # S4 (4)   0 0 0 1 1   (4) NA # S5 (5)   0 1 1 0 0   (5) NA indexDDI(x, ds = 2:5) # [1] 1.888889 2.666667 3.333333 3.888889"},{"path":"https://docs.openrepgrid.org/articles/web/measures-dispersion.html","id":"uncertainty-index-ui","dir":"Articles > Web","previous_headings":"Measures","what":"Uncertainty Index (UI)","title":"Dispersion of Dependency","text":"Bell (2001) proposed another information-theory based measure calculating dispersion dependency, called Uncertainty Index (UI). Different DDI, normalized measure value range 00 11. UI=logDtot–(∑ikDi×logDi)/DtotlogDtot–log(Dtot/k) UI = \\frac{\\log D_{tot} – (\\sum_i^k D_{} × \\log D_{} ) / D_{tot}}{\\log D_{tot} – \\log (D_{tot}/k)} : kk: number ressources DtotD_{tot}: number total dependencies grid DiD_{}: number dependencies resource ii","code":"# sample grid from Bell (2001, p.231) file <- system.file(\"extdata\", \"dep_grid_bell_2001.xlsx\", package = \"OpenRepGrid\") x <- importExcel(file) x #  # RATINGS: #                    G - 7 8 - H                   #                  F - 6 | | 9 - I                 #                E - 5 | | | | 10 - J              #              D - 4 | | | | | | 11 - K            #            C - 3 | | | | | | | | 12 - L          #          B - 2 | | | | | | | | | | 13 - M        #        A - 1 | | | | | | | | | | | | 14 - N      #            | | | | | | | | | | | | | |           #   S1 (1)   1 0 0 0 0 0 0 0 0 0 1 0 0 1   (1) NA  #   S2 (2)   0 0 1 0 0 1 0 0 1 0 0 0 1 0   (2) NA  #   S3 (3)   0 1 0 1 1 0 1 1 0 1 0 1 0 0   (3) NA  #   S4 (4)   0 0 0 0 0 1 0 0 1 0 0 0 1 0   (4) NA  #   S5 (5)   1 0 0 1 0 0 0 0 0 0 0 0 0 1   (5) NA  #   S6 (6)   0 0 0 0 1 0 0 1 0 1 0 0 0 0   (6) NA  #   S7 (7)   0 1 0 0 0 0 1 0 0 0 0 1 0 0   (7) NA  #   S8 (8)   1 0 0 1 1 0 1 0 0 1 1 0 0 1   (8) NA  #   S9 (9)   0 1 0 0 0 0 0 1 0 0 0 1 1 0   (9) NA  # S10 (10)   0 0 1 0 0 1 0 0 1 0 0 0 1 0   (10) NA # S11 (11)   0 0 0 1 1 0 1 0 0 1 0 0 0 1   (11) NA indexUncertainty(x) # Uncertainty Index  #         0.9909569"},{"path":"https://docs.openrepgrid.org/articles/web/measures-dispersion.html","id":"literature","dir":"Articles > Web","previous_headings":"","what":"Literature","title":"Dispersion of Dependency","text":"Bell, R. C. (2001). new measures dispersion dependency situation—Resource grid. Journal Constructivist Psychology, 14(3), 227–234. https://doi.org/10.1080/10720530151143566 Kelly, G. . (1962). confide: depend . Maher, B. (Ed.), Clinical psychology personality: selected papers George Kelly, p. 189-206. New York Krieger. Walker, B. M., Ramsey, F. L., & Bell, R. C. (1988). Dispersed undispersed dependency. International Journal Personal Construct Psychology, 1(1), 63–80. https://doi.org/10.1080/10720538808412765","code":""},{"path":"https://docs.openrepgrid.org/articles/web/measures-implicative.html","id":"description","dir":"Articles > Web","previous_headings":"","what":"Description","title":"Implicative dilemma","text":"Implicative dilemmas closely related notion conflict. implicative dilemma arises desired change one construct associated undesired implication another construct. E. g. timid subject may want become socially skilled associates socially skilled different negative characteristics (selfish, insensitive etc.). Hence, may anticipate becoming less timid also make selfish (cf. Winter, 1982). consequence subject resist change negative presumed implications threaten patients identity predictive power construct system. stance resistance change logical consequence coherent subjects construct system (Feixas, Saúl, & Sanchez, 2000). investigation role cognitive dilemma different disorders context PCP current field research (Dorough, Grice, & Parker, 2007; e.g. Feixas & Saúl, 2004).","code":""},{"path":"https://docs.openrepgrid.org/articles/web/measures-implicative.html","id":"process-of-detection","dir":"Articles > Web","previous_headings":"","what":"Process of detection","title":"Implicative dilemma","text":"detection implicative dilemmas happens two steps. First constructs classified ‘congruent’ ‘discrepant’. Second correlation congruent discrepant construct pair assessed big enough indicate implication.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/measures-implicative.html","id":"classifying-the-construct","dir":"Articles > Web","previous_headings":"Process of detection","what":"Classifying the construct","title":"Implicative dilemma","text":"detect implicit dilemmas construct pairs first identified ‘congruent’ ‘discrepant’. assessment based rating differences elements ‘self’ ‘ideal self’. construct ‘congruent’ construction ‘self’ preferred state (.e. ideal self) similar. construct discrepant construction ‘self’ ‘ideal’ dissimilar. Suppose element ‘self’ rated 2 ‘ideal self’ 5 scale 1 6. ratings differences 5-2 = 3. difference smaller e.g. 1 construct ‘congruent’, bigger 3 ‘discrepant’. values used classify constructs ‘congruent’ ‘discrepant’ can determined several ways (cf. Bell, 2009): set ‘priori’. implicitly derived taking account rating differences constructs. yet implemented. value mode determined via argument diff.mode. ‘priori’ criteria determine construct congruent discrepant supplied argument, values chosen acording range rating scale used. following scales defaults chosen :","code":""},{"path":"https://docs.openrepgrid.org/articles/web/measures-implicative.html","id":"defining-the-correlations","dir":"Articles > Web","previous_headings":"Process of detection","what":"Defining the correlations","title":"Implicative dilemma","text":"implications constructs derived rating grid directly, correlation two constructs used indicator implication. large correlation means one construct pole implies . small correlation indicates lack implication. minimum criterion correlation indicate implication set .35 (cf. Feixas & Saúl, 2004). user may also chose another value. get impression distribution correlations grid, visualization can prompted via argument show. calculating correlation used assess implication given , elements consideration (. e. self ideal self) can included (default) excluded. options cause different correlations (see argument exclude).","code":""},{"path":"https://docs.openrepgrid.org/articles/web/measures-implicative.html","id":"example-of-an-implicative-dilemma","dir":"Articles > Web","previous_headings":"Process of detection","what":"Example of an implicative dilemma","title":"Implicative dilemma","text":"depressive person considers timid wished change opposite pole defines extraverted. construct called discrepant construction self desired state (e.g. described ideal self) construct differ. person also considers sensitive (preferred pole) opposite pole selfish. construct congruent, person construes like . person now changed discrepant construct undesired desired pole, .e. timid extraverted, question can asked consequences change . person construes timid sensitive related someone extraverted timid, change first construct imply change congruent construct well. Hence, positive shift timid extraverted presumed undesired effect moving sensitive towards selflish. relation called implicative dilemma. implications change construct derived rating grid directly, correlation two constructs used indicator implication.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/measures-implicative.html","id":"r-code","dir":"Articles > Web","previous_headings":"","what":"R-Code","title":"Implicative dilemma","text":"detect implicative dilemma use function indexDilemma. output overview arguments used detection, table classifications construct implicative dilemmas detected. change values classification constructs congruent discrepant use argument diff.congruent. following output identical Gridstat default. Several argumnets can modified. Type following code R console see results. Called console output. Invisibly returns list containing result dataframes results calculations.","code":"indexDilemma(boeker, self = 1, ideal = 2) #  # #################### # Implicative Dilemmas # #################### #  # ------------------------------------------------------------------------------- #  # SUMMARY: #  # No. of Implicative Dilemmas (IDs): 4 # No. of possible construct pairs: 91 # Percentage of IDs (PID): 4.4% (4/91) # Intensity of IDs (IID): 61.3 # Proportion of the intensity of constructs of IDs (PICID): 2.7 #  # ------------------------------------------------------------------------------- #  # PARAMETERS: #  # Self: Element No. 1 = self # Ideal: Element No. 2 = ideal self #  # Correlation Criterion: >= 0.35 # Note: Correlation calculated including elements Self & Ideal #  # Criteria (for construct classification): # Discrepant if Self-Ideal difference: >= 3 # Congruent if Self-Ideal difference: <= 1 #  # ------------------------------------------------------------------------------- #  # CLASSIFICATION OF CONSTRUCTS: #  #    Note: Constructs aligned so 'Self' corresponds to left pole #  #                              Construct Self Ideal Difference Classification # 1  balanced - get along with conflicts    1     4          3     discrepant # 2                  isolated - sociable    3     6          3     discrepant # 3        closely integrated - excluded    2     2          0      congruent # 4                 passive - discursive    3     6          3     discrepant # 5            open minded - indifferent    2     1          1      congruent # 6               dispassionate - dreamy    3     2          1      congruent # 7     practically oriented - depressed    2     1          1      congruent # 8                    serious - playful    3     2          1      congruent # 9            socially minded - selfish    2     1          1      congruent # 10              peaceful - quarrelsome    2     2          0      congruent # 11                technical - artistic    2     6          4     discrepant # 12              scientific - emotional    2     1          1      congruent # 13               extrovert - introvert    3     2          1      congruent # 14          wanderlust - home oriented    1     1          0      congruent #  # ------------------------------------------------------------------------------- #  # IMPLICATIVE DILEMMAS: #  #    Note: Congruent constructs on the left - Discrepant constructs on the right #  #                        Congruent                             Discrepant    R            RexSI # 1   5. open minded - indifferent 1. balanced - get along with conflicts 0.53             0.63 # 2   9. socially minded - selfish 1. balanced - get along with conflicts 0.36             0.43 # 3     10. peaceful - quarrelsome 1. balanced - get along with conflicts 0.84 *Not implemented # 4 14. wanderlust - home oriented 1. balanced - get along with conflicts 0.72             0.79 #  #   R = Correlation including Self & Ideal #   RexSI = Correlation excluding Self & Ideal #   R was used as criterion indexDilemma(boeker, self = 1, ideal = 2, diff.congruent = 0) #  # #################### # Implicative Dilemmas # #################### #  # ------------------------------------------------------------------------------- #  # SUMMARY: #  # No. of Implicative Dilemmas (IDs): 2 # No. of possible construct pairs: 91 # Percentage of IDs (PID): 2.2% (2/91) # Intensity of IDs (IID): 77.9 # Proportion of the intensity of constructs of IDs (PICID): 1.7 #  # ------------------------------------------------------------------------------- #  # PARAMETERS: #  # Self: Element No. 1 = self # Ideal: Element No. 2 = ideal self #  # Correlation Criterion: >= 0.35 # Note: Correlation calculated including elements Self & Ideal #  # Criteria (for construct classification): # Discrepant if Self-Ideal difference: >= 3 # Congruent if Self-Ideal difference: <= 0 #  # ------------------------------------------------------------------------------- #  # CLASSIFICATION OF CONSTRUCTS: #  #    Note: Constructs aligned so 'Self' corresponds to left pole #  #                              Construct Self Ideal Difference Classification # 1  balanced - get along with conflicts    1     4          3     discrepant # 2                  isolated - sociable    3     6          3     discrepant # 3        closely integrated - excluded    2     2          0      congruent # 4                 passive - discursive    3     6          3     discrepant # 5            open minded - indifferent    2     1          1        neither # 6               dispassionate - dreamy    3     2          1        neither # 7     practically oriented - depressed    2     1          1        neither # 8                    serious - playful    3     2          1        neither # 9            socially minded - selfish    2     1          1        neither # 10              peaceful - quarrelsome    2     2          0      congruent # 11                technical - artistic    2     6          4     discrepant # 12              scientific - emotional    2     1          1        neither # 13               extrovert - introvert    3     2          1        neither # 14          wanderlust - home oriented    1     1          0      congruent #  # ------------------------------------------------------------------------------- #  # IMPLICATIVE DILEMMAS: #  #    Note: Congruent constructs on the left - Discrepant constructs on the right #  #                        Congruent                             Discrepant    R            RexSI # 1     10. peaceful - quarrelsome 1. balanced - get along with conflicts 0.84 *Not implemented # 2 14. wanderlust - home oriented 1. balanced - get along with conflicts 0.72             0.79 #  #   R = Correlation including Self & Ideal #   RexSI = Correlation excluding Self & Ideal #   R was used as criterion indexDilemma(boeker, self = 1, ideal = 2, output = 2) # show identified dillemas only indexDilemma(boeker, 1, 2, diff.disc = 0, diff.con = 4) # set classification parameters  indexDilemma(boeker, 1, 2, index = F) # no index numbers indexDilemma(boeker, 1, 2, trim = 20) # trim construct labels r <- indexDilemma(boeker, self = 1, ideal = 2) r$res1 r$res2 r$res3 r$res4"},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/measures-intensity.html","id":"description","dir":"Articles > Web","previous_headings":"","what":"Description","title":"Intensity","text":"Intensity index suggested Bannister (1960) measure amount construct linkage. Bannister suggested score reflects degree organization construct system investigation (Bannister & Mair, 1968). index resulted colleagues work construction systems patient suffering schizophrenic thought disorder. concept intensity theoretical connection notion “tight” “loose” construing proposed Kelly (1991). tight constructs lead unvarying prediction, loose constructs allow varying predictions. Bannister hypothesized schizophrenic thought disorder liked process extremely loose construing leading loss predictive power subject’s construct system. Intensity score structural measure thought reflect type system disintegration (Bannister, 1960).","code":""},{"path":"https://docs.openrepgrid.org/articles/web/measures-intensity.html","id":"r-code","dir":"Articles > Web","previous_headings":"","what":"R-Code","title":"Intensity","text":"index can prompted OpenRepGrid follows. calculates intensity score construct element, average score types overall intensity value (cf. Feixas & Cornejo, 2002).","code":"indexIntensity(bell2010) #  # ################ # Intensity index # ################ #  # Total intensity: 0.19  #  #  # Average intensity of constructs: 0.16  #  # Itensity by construct: #                                     intensity # 1 relaxed - worried & tense              0.18 # 2 not so smart (a - smart (academic      0.14 # 3 dislikes sports - loves sports         0.05 # 4 not interactive - loves people         0.15 # 5 not transparent - transparent          0.13 # 6 insensitive - sensitive                0.16 # 7 fearful&timid - fearless               0.25 # 8 rough - gentle                         0.25 # 9 accept as it is - loves to argue       0.12 #  #  # Average intensity of elements: 0.14  #  # Itensity by element: #                                       intensity # 1 (1) self                                 0.16 # 2 (2) closest friend of the same sex       0.16 # 3 (3) the unhappiest person you know       0.04 # 4 (4) A person of the opposite sex t       0.14 # 5 (5) A teacher you respected              0.19 # 6 (6) Mother (or the person who fill       0.10 # 7 (7) A person of the opposite sex t       0.13 # 8 (8) The most confident person you        0.22 # 9 (9) A person you work well with (a       0.14 # 10 (10) A teacher you did not respect      0.09"},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/measures-pvaff.html","id":"description","dir":"Articles > Web","previous_headings":"","what":"Description","title":"PVAFF","text":"Percentage Variance Accounted First Factor (PVAFF) used measure cognitive complexity. idea introduced unpublished PhD thesis Jones Bonarius (1965). calculate , first factor extracted construct correlation matrix principal component analysis. PVAFF reflects amount variation accounted single latent linear component. single component able explain lot variation grid, cognitive complexity said low construct system attributed term simple (Bell, 2003). argued, consequence simple constructs system, less differentiation anticipated events can generated (cf. Adams-Webber, 1970).","code":""},{"path":"https://docs.openrepgrid.org/articles/web/measures-pvaff.html","id":"r-code","dir":"Articles > Web","previous_headings":"","what":"R-Code","title":"PVAFF","text":"Note value returned proportion percentage.","code":"indexPvaff(bell2010) # Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). # [1] 0.3402002"},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/reordering.html","id":"description","dir":"Articles > Web","previous_headings":"","what":"Description","title":"Automatic reordering","text":"direction constructs grid arbitrary reflection scale affect information contained grid. Nonetheless, direction scale effect inter-element correlations (Mackay, 1992) spatial representation clustering grid (Bell, 2010). Hence, desirable follow protocol align constructs render unique results. common approach align constructs pole preference, .e. aligning positive negative poles. can e. g. achieved using function swapPoles. ideal element present function alignByIdeal align constructs accordingly. Note approach always yield definite results sometimes ratings show clear preference one pole (Winter, Bell, & Watson, 2010). preference determined definitely, construct direction remains unchanged (warning issued case). Bell (2010) proposed another solution problem construct alignment. unique protocol suggests align constructs way positive loadings first component grid PCA.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/reordering.html","id":"align-by-idealpreference","dir":"Articles > Web","previous_headings":"R-Code","what":"Align by ideal/preference","title":"Automatic reordering","text":"align construct preference, ideal element defined. following example element 13 (ideal self). Note midpoint ratings present preferred pole can identified, case one construct example . default preferred poles assigned right side. can use argument high=FALSE indicate high ratings correspond negative pole. Hence, preferred pole left side grid. save assigned grid new object:","code":"alignByIdeal(feixas2004, 13) # Warning in alignByIdeal(feixas2004, 13): The following constructs do not show a preference for either poleand have thus # not been aligned: 2 #  # RATINGS: #                                            7 - Friend 2                                #                               Friend 1 - 6 | 8 - Non-grata                             #                            Boyfriend - 5 | | | 9 - Friend 3                            #                            Brother - 4 | | | | | 10 - Cousin                           #                           Father - 3 | | | | | | | 11 - Godmother                      #                         Mother - 2 | | | | | | | | | 12 - Friend 4                     #                     Self now - 1 | | | | | | | | | | | 13 - Ideal Self                 #                                | | | | | | | | | | | | |                               #              Pessimistic (1)   1 1 5 2 7 3 6 2 6 4 3 2 7   (1) Optimistic              #           Self-demanding (2)   1 6 6 2 2 5 6 3 5 6 4 5 4   (2) Takes it easy           #                  Fearful (3)   2 2 6 2 4 5 6 5 2 3 4 5 5   (3) Enterprising            #            Lives to work (4)   5 1 2 2 6 6 6 1 6 7 6 6 7   (4) Works to live           #   Imposes his/her wishes (5)   6 2 1 1 4 3 6 1 7 3 4 2 7   (5) Tolerant with others    #                   Touchy (6)   6 1 7 2 4 5 4 2 5 5 3 2 5   (6) Teasing                 # es not appreciate others (7)   6 2 2 2 7 3 4 1 4 6 6 3 7   (7) Appreciates others      #               Aggressive (8)   6 4 2 2 7 4 6 2 6 6 6 3 7   (8) Calm                    #                  Selfish (9)   6 6 2 1 6 5 3 1 5 5 6 6 6   (9) Concerned about others  #              Avaricious (10)   6 1 1 1 7 5 5 1 6 3 3 6 7   (10) Generous               # erialistic, superficial (11)   7 3 1 1 7 4 3 1 7 4 5 4 7   (11) Sensitive              #                  Cheeky (12)   6 6 5 4 6 6 6 1 6 5 6 5 7   (12) Respectful             #            Hypocritical (13)   5 4 4 2 6 5 5 1 6 6 5 4 7   (13) Sincere                #             Blackmailer (14)   3 2 2 1 5 6 6 1 6 6 6 3 7   (14) Non blackmailer        # ppears stronger than is (15)   6 3 1 2 5 2 4 2 7 6 6 5 6   (15) Natural                # t look after the friend (16)   6 3 3 3 6 2 1 2 4 4 6 4 7   (16) Looks after the friend #          Non Accessible (17)   5 2 2 1 4 2 4 1 6 3 5 2 7   (17) Accessible             #             Introverted (18)   1 2 6 2 4 5 7 5 2 6 6 5 5   (18) Extroverted            #   Gets depressed easily (19)   1 2 6 3 6 3 7 6 1 3 3 3 6   (19) Does not get depressed #  Sees only the negative (20)   2 2 4 2 7 3 6 1 2 5 5 3 7   (20) Tries to find the good alignByIdeal(feixas2004, 13, high = F) # Warning in alignByIdeal(feixas2004, 13, high = F): The following constructs do not show a preference for either poleand # have thus not been aligned: 2 #  # RATINGS: #                                            7 - Friend 2                                #                               Friend 1 - 6 | 8 - Non-grata                             #                            Boyfriend - 5 | | | 9 - Friend 3                            #                            Brother - 4 | | | | | 10 - Cousin                           #                           Father - 3 | | | | | | | 11 - Godmother                      #                         Mother - 2 | | | | | | | | | 12 - Friend 4                     #                     Self now - 1 | | | | | | | | | | | 13 - Ideal Self                 #                                | | | | | | | | | | | | |                               #               Optimistic (1)   7 7 3 6 1 5 2 6 2 4 5 6 1   (1) Pessimistic             #           Self-demanding (2)   1 6 6 2 2 5 6 3 5 6 4 5 4   (2) Takes it easy           #             Enterprising (3)   6 6 2 6 4 3 2 3 6 5 4 3 3   (3) Fearful                 #            Works to live (4)   3 7 6 6 2 2 2 7 2 1 2 2 1   (4) Lives to work           #     Tolerant with others (5)   2 6 7 7 4 5 2 7 1 5 4 6 1   (5) Imposes his/her wishes  #                  Teasing (6)   2 7 1 6 4 3 4 6 3 3 5 6 3   (6) Touchy                  #       Appreciates others (7)   2 6 6 6 1 5 4 7 4 2 2 5 1   (7) Does not appreciate oth #                     Calm (8)   2 4 6 6 1 4 2 6 2 2 2 5 1   (8) Aggressive              #   Concerned about others (9)   2 2 6 7 2 3 5 7 3 3 2 2 2   (9) Selfish                 #                Generous (10)   2 7 7 7 1 3 3 7 2 5 5 2 1   (10) Avaricious             #               Sensitive (11)   1 5 7 7 1 4 5 7 1 4 3 4 1   (11) Materialistic, superfi #              Respectful (12)   2 2 3 4 2 2 2 7 2 3 2 3 1   (12) Cheeky                 #                 Sincere (13)   3 4 4 6 2 3 3 7 2 2 3 4 1   (13) Hypocritical           #         Non blackmailer (14)   5 6 6 7 3 2 2 7 2 2 2 5 1   (14) Blackmailer            #                 Natural (15)   2 5 7 6 3 6 4 6 1 2 2 3 2   (15) Appears stronger than  # ks after the friendship (16)   2 5 5 5 2 6 7 6 4 4 2 4 1   (16) Does not look after th #              Accessible (17)   3 6 6 7 4 6 4 7 2 5 3 6 1   (17) Non Accessible         #             Extroverted (18)   7 6 2 6 4 3 1 3 6 2 2 3 3   (18) Introverted            # ot get depressed easily (19)   7 6 2 5 2 5 1 2 7 5 5 5 2   (19) Gets depressed easily  # o find the good in thin (20)   6 6 4 6 1 5 2 7 6 3 3 5 1   (20) Sees only the negative x <- alignByIdeal(feixas2004, 13) # Warning in alignByIdeal(feixas2004, 13): The following constructs do not show a preference for either poleand have thus # not been aligned: 2"},{"path":"https://docs.openrepgrid.org/articles/web/reordering.html","id":"align-by-loadings","dir":"Articles > Web","previous_headings":"R-Code","what":"Align by loadings","title":"Automatic reordering","text":"alignment operation using OpenRepGrid performed function alignByLoadings. save alignment information object: get information function type: ?alignByLoadings console open help menu function. default function return list containing: extract indices need reversal use swap poles may : clumsy though subject change later versions OpenRepGrid.","code":"alignByLoadings(bell2010) #  # ################################### # Alignment of constructs by loadings # ################################### #  # Construct correlations - before alignment #  #                                 1     2     3     4     5     6     7     8     9 # (1) relaxed - worried &     1     -0.10  0.03 -0.83  0.12  0.23 -0.49  0.66 -0.08 # (2) not so sma - smart (aca 2           -0.47 -0.01 -0.80 -0.35  0.28 -0.19  0.12 # (3) dislikes s - loves spor 3                 -0.04  0.36  0.04 -0.01 -0.24  0.08 # (4) not intera - loves peop 4                        0.17  0.21  0.34 -0.49  0.25 # (5) not transp - transparen 5                              0.38 -0.05  0.01  0.29 # (6) insensitiv - sensitive  6                                   -0.71  0.55 -0.26 # (7) fearful&ti - fearless   7                                         -0.78  0.65 # (8) rough - gentle          8                                               -0.54 # (9) accept as  - loves to a 9                                                     #  # Construct factor loadiongs on PC1 - before alignment #  #                                PC1 # (1) relaxed - worried &      0.726 # (2) not so sma - smart (aca -0.392 # (3) dislikes s - loves spor  0.029 # (4) not intera - loves peop -0.553 # (5) not transp - transparen  0.183 # (6) insensitiv - sensitive   0.643 # (7) fearful&ti - fearless   -0.912 # (8) rough - gentle           0.907 # (9) accept as  - loves to a -0.591 #  # The following constructs are reversed: #  #                             index # (2) not so sma - smart (aca     2 # (4) not intera - loves peop     4 # (7) fearful&ti - fearless       7 # (9) accept as  - loves to a     9 #  # Construct correlations - after alignment #  #                                 1     2     3     4     5     6     7     8     9 # (1) relaxed - worried &     1      0.10  0.03  0.83  0.12  0.23  0.49  0.66  0.08 # (2) smart (aca - not so sma 2            0.47 -0.01  0.80  0.35  0.28  0.19  0.12 # (3) dislikes s - loves spor 3                  0.04  0.36  0.04  0.01 -0.24 -0.08 # (4) loves peop - not intera 4                       -0.17 -0.21  0.34  0.49  0.25 # (5) not transp - transparen 5                              0.38  0.05  0.01 -0.29 # (6) insensitiv - sensitive  6                                    0.71  0.55  0.26 # (7) fearless - fearful&ti   7                                          0.78  0.65 # (8) rough - gentle          8                                                0.54 # (9) loves to a - accept as  9                                                     #  # Construct factor loadings on PC1 - after alignment #  #                               PC1 # (1) relaxed - worried &     0.726 # (2) smart (aca - not so sma 0.392 # (3) dislikes s - loves spor 0.029 # (4) loves peop - not intera 0.553 # (5) not transp - transparen 0.183 # (6) insensitiv - sensitive  0.643 # (7) fearless - fearful&ti   0.912 # (8) rough - gentle          0.907 # (9) loves to a - accept as  0.591 x <- alignByLoadings(bell2010) names(x) # [1] \"cor.before\"      \"loadings.before\" \"reversed\"        \"cor.after\"       \"loadings.after\" swapPoles(bell2010, x$reversed$index) #  # RATINGS: #              A teacher you respected - 5 6 - Mother (or the person who fill      #     A person of the opposite sex t - 4 | | 7 - A person of the opposite sex t    #   the unhappiest person you know - 3 | | | | 8 - The most confident person you   # closest friend of the same sex - 2 | | | | | | 9 - A person you work well with ( #                         self - 1 | | | | | | | | 10 - A teacher you did not resp #                                | | | | | | | | | |                               #                  relaxed (1)   4 4 6 5 3 6 5 2 2 6   (1) worried & tense         #     smart (academically) (2)   2 1 2 3 1 4 2 1 4 1   (2) not so smart (academica #          dislikes sports (3)   6 3 7 6 4 4 2 3 6 3   (3) loves sports            #             loves people (4)   2 1 3 2 2 3 2 1 1 4   (4) not interactive         #          not transparent (5)   6 4 5 7 3 7 6 5 6 3   (5) transparent             #              insensitive (6)   4 6 5 4 4 6 5 3 4 2   (6) sensitive               #                 fearless (7)   3 4 4 2 3 5 3 2 3 3   (7) fearful&timid           #                    rough (8)   5 6 6 4 5 7 7 3 5 6   (8) gentle                  #           loves to argue (9)   3 3 2 1 4 4 2 1 3 3   (9) accept as it is"},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/visualization-bertin.html","id":"description","dir":"Articles > Web","previous_headings":"","what":"Description","title":"Bertin display","text":"One popular ways displaying grid data adopted Bertin’s (1966) graphical proposals, immense influence onto data visualization. One appealing ideas presented Bertin concept reordable matrix. comprised graphical displays cell matrix, allowing identify structures eye-balling reordered versions data matrix (see Bertin, 1966). context repertory grids, Bertin display made simple colored rectangle color denotes corresponding score. Bright values correspond low, dark high scores. example analyze Bertin display see e. g. Dick (2000) Raeithel (1998).","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/articles/web/visualization-bertin.html","id":"bertin-display-standard","dir":"Articles > Web","previous_headings":"R-Code","what":"Bertin display (standard)","title":"Bertin display","text":"Various settings can modified bertin function. see whole set options type ?bertin R console. Color E.g. change color display use argument color.  Printing Scores suppress printing scores plot colors use  ** Construct / Element Index ** argument id allows manage printing index number elements constructs.","code":"bertin(boeker) bertin(boeker, color = c(\"white\", \"darkred\")) bertin(boeker, showvalues = FALSE) bertin(boeker, id = c(T, F)) # only index numbers for constructs bertin(boeker, id = c(F, T)) # only index numbers for elements bertin(boeker, id = c(F, F)) # no index numbers"},{"path":"https://docs.openrepgrid.org/articles/web/visualization-bertin.html","id":"clustered-bertin","dir":"Articles > Web","previous_headings":"R-Code","what":"Clustered Bertin","title":"Bertin display","text":"Beside standard Bertin display also clustered version available. contains standard Bertin display center dendrograms sides. cluster grid described . read cluster section first understand following code. default Euclidean distance ward clustering applied grid.  apply different distance cluster methods use arguments dmethod (abbreveated: dm) cmethod (abbreveated: cm). information clustering go . following code uses manhattan distance single linkage clustering.  Sometimes desirable spot structures eye-balling colors. purpose printing scores can surpressed. options include suppress axis dendrogram chose rectangular type dendrogram.","code":"bertinCluster(feixas2004) bertinCluster(feixas2004, dmethod = \"manhattan\", cm = \"single\") bertinCluster(feixas2004, showvalues = FALSE) bertinCluster(feixas2004, draw.axis = F) # no axis drawn for dendrogram bertinCluster(feixas2004, type = \"rectangle\") # rectangle type dendrogram"},{"path":"https://docs.openrepgrid.org/articles/web/visualization-bertin.html","id":"literature","dir":"Articles > Web","previous_headings":"","what":"Literature","title":"Bertin display","text":"Bertin, J. (1966). Sémiologie graphique: Diagrammes, réseaux, cartographie. Paris: Mouton. Dick, M. (2000). Use Narrative Grid Interviews Psychological Mobility Research. Forum Qualitative Sozialforschung / Forum: Qualitative Social Research, 1(2). Raeithel, . (1998). Kooperative Modellproduktion von Professionellen und Klienten - erlauetert Beispiel des Repertory Grid. Selbstorganisation, Kooperation, Zeichenprozess: Arbeiten zu einer kulturwissenschaftlichen, anwendungsbezogenen Psychologie (pp. 209-254). Opladen: Westdeutscher Verlag.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/visualization-biplot.html","id":"description","dir":"Articles > Web","previous_headings":"","what":"Description","title":"Biplots","text":"One appealing features analysis repertory grids joint spatial representation elements constructs, . e. row column points, single plot. plots visualize inter-construct, inter-element element-construct relations. can helpful tool allow insights interviewee’s world, support formulation clinical hypotheses foster client-therapist interaction. first composite plot repertory grids introduced Slater (1964) INGRID program. Since introduction, INGRID composite plot become standard feature contemporary grid software (e. g. Fransella, Bell & Bannister, 2003). contemporary research literature, joint spatial representation two different aspects data matrix one composite plot often treated within biplot framework (cf. Gower, Lubbe, Gardner, & Roux, 2011; Greenacre, 2010). framework comprises representations based different multivariate techniques PCA, MDS, CA etc. techniques differ regard several aspects (e.g. pre-treatment data, distance model) yield spatial representations focusing different aspects data. central idea joint spatial representation, .e. biplot, render visual representation (usually two three dimensions) optimally displays central features inherent data (e.g. correlations variables, distances points). data represented usually dimensionality higher two three (.e. rank data matrix) problem arises optimally represent data within space lower dimensionality. Hence, visual representation requires dimensionality reduction usually achieved factorization data matrix called singular value decomposition (SVD). biplot representation central grid representation, rationale briefly outlined.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/visualization-biplot.html","id":"biplot-functions","dir":"Articles > Web","previous_headings":"","what":"Biplot functions","title":"Biplots","text":"OpenRepGrid number functions implemented produce different types biplots. following important ones: biplotSimple biplot2d biplotPeudo3d biplot3d functions allow change lot settings. see whole list available arguments type ? followed function name.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/visualization-biplot.html","id":"biplotsimple","dir":"Articles > Web","previous_headings":"Biplot functions","what":"biplotSimple","title":"Biplots","text":"biplotSimple graphically unsophisticated version biplot. draw elements constructs vectors using similar arguments biplot2d. version quick exploration used development. colors constructs set darkred make easier differentiate constructs element labels.","code":"biplotSimple(boeker, c.label.col = \"darkred\")"},{"path":"https://docs.openrepgrid.org/articles/web/visualization-biplot.html","id":"biplot2d","dir":"Articles > Web","previous_headings":"Biplot functions","what":"biplot2d","title":"Biplots","text":"Draws two-dimensional biplot sophisticated look. Depending parameters chosen contains information distances elements constructs. Also relative values elements construct can read projetion element onto construct vector. lot parameters can changed rendering different types biplots (ESA, Slater’s) different looks (colors, text size).","code":"biplot2d(boeker)"},{"path":"https://docs.openrepgrid.org/articles/web/visualization-biplot.html","id":"biplotpseudo3d","dir":"Articles > Web","previous_headings":"Biplot functions","what":"biplotPseudo3d","title":"Biplots","text":"Draws biplot grid 2D depth impression (pseudo 3D). version basically 2D biplot. modifies color size symbols order create 3D impression data points. Lighter smaller labels back, darker bigger labels front. function call standard biplot2d function modified arguments. whole set arguments can used see ?biplot2d.","code":"biplotPseudo3d(boeker)"},{"path":"https://docs.openrepgrid.org/articles/web/visualization-biplot.html","id":"biplot3d","dir":"Articles > Web","previous_headings":"Biplot functions","what":"biplot3d","title":"Biplots","text":"Renders interactive 3D biplot. see interactive 3D plot browser supports WebGL (like e.g. Google Chrome).","code":"biplot3d(boeker)"},{"path":"https://docs.openrepgrid.org/articles/web/visualization-biplot.html","id":"pre-transformations","dir":"Articles > Web","previous_headings":"","what":"Pre-transformations","title":"Biplots","text":"representing grid data decision made whether apply pre-transformations data submitting SVD. transformations include centering normalization data. INGRID procedure (Slater, 1977) centering constructs, .e. removing mean value row, used default option. theorists argue “double-centering” (.e. row column means) (e.g. Hope, 1966) midpoint centering appropriate analyze grid data (Raeithel, 1998). question kind pre-treatment applied definite answer followed . Note however different options pre-treatment results different spatial representations. Hence, researcher aware influence pre-treatment exerts onto spatial representation. OpenRepGrid different options centering normalization (also called scaling) included. centering option rows columns matrix yields four possible combinations: 1) construct centering, 2) element centering, 3) double-centering 4) construct midpoint centering. last option also denoted “double-centering” grid. normalization three options can chosen: 0) normalization, 1) normalization constructs 2) normalization elements. simultaneous normalization rows columns possible. output affected pre-scaling corresponding function OpenRepGrid offers argument specify form pre-scaling used. following figures demonstrate different forms pre-scaling lead different representation.","code":"biplot2d(boeker, center = 1, normalize = 0) biplot2d(boeker, center = 2, normalize = 0) biplot2d(boeker, center = 1, normalize = 2)"},{"path":"https://docs.openrepgrid.org/articles/web/visualization-biplot.html","id":"standard-biplot-types","dir":"Articles > Web","previous_headings":"","what":"Standard biplot types","title":"Biplots","text":"type biplot produced depends way singular values assigned elements constructs matrices (see calculation biplot). Two parameters steer assignment: gg hh. Depending choice parameters form pre-transformations used, different types biplots plotted. following three biplots represent three important ones.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/visualization-biplot.html","id":"element-metric-preserving-biplot","dir":"Articles > Web","previous_headings":"Standard biplot types","what":"Element metric preserving biplot","title":"Biplots","text":"standard biplot function preserves distances elements, .e. form biplot.","code":"biplot2d(boeker) biplotPseudo3d(boeker) biplot3d(boeker)"},{"path":"https://docs.openrepgrid.org/articles/web/visualization-biplot.html","id":"slaters-ingrid-biplot","dir":"Articles > Web","previous_headings":"Standard biplot types","what":"Slater’s INGRID biplot","title":"Biplots","text":"first version joint spatial representation elements constructs become known Slater’s INGRID biplot. default use row centering normalization. Note Slater’s biplot just special case biplot can produced using biplot2d function arguments center=1, g=1, h=1. arguments can used function biplot2d.","code":"biplotSlater2d(boeker) biplot2d(boeker, center = 1, g = 1, h = 1) # compare to previous plot  biplotSlaterPseudo3d(boeker) biplotSlater3d(boeker)"},{"path":"https://docs.openrepgrid.org/articles/web/visualization-biplot.html","id":"eigenstructure-analysis-esa-biplot","dir":"Articles > Web","previous_headings":"Standard biplot types","what":"Eigenstructure analysis (ESA) biplot","title":"Biplots","text":"ESA special type biplot suggested Raeithel (e.g. 1998). uses midpoint centering default. Note eigenstructure analysis just special case biplot can also produced using biplot2d function arguments center=4, g=1, h=1.","code":"biplotEsa2d(boeker) biplot2d(boeker, center = 1, g = 1, h = 1) # compare to previous plot  biplotEsaPseudo3d(boeker) biplotEsa3d(boeker)"},{"path":"https://docs.openrepgrid.org/articles/web/visualization-biplot.html","id":"changing-the-appearance","dir":"Articles > Web","previous_headings":"","what":"Changing the appearance","title":"Biplots","text":"lot arguments affecting appearance biplot can changed. full list see biplot2d. following codes correspond figures gallery . gives impression can changed biplot2d. arguments also apply biplot functions (see ).","code":"biplot2d(boeker, e.label.col = \"red\", c.label.col = \"blue\") # plot1: change label colors biplot2d(boeker, e.point.col = \"red\", c.point.col = \"blue\") # plot2: change symbol colors  biplot2d(boeker, e.label.cex = 1, c.label.cex = .5) # plot3: change label size biplot2d(boeker, e.point.cex = 1.5, c.point.cex = .5) # plot4 :change symbol size  biplot2d(boeker, zoom = .5) # plot5: zoom out biplot2d(boeker, zoom = 2.5) # plot6: zoom in  biplot2d(boeker, unity = T) # plot7: scale construct & element vectors to equal length biplot2d(boeker, unity = T, scale.e = .5) # plot8: scaling factor for element vectors  biplot2d(boeker, e.labels.show = F) # plot9: do not show element labels biplot2d(boeker, e.labels.show = c(1, 2, 4)) # plot10: show labels for elements 1, 2 and 4 biplot2d(boeker, e.points.show = c(1, 2, 4)) # plot11: only show elements 1, 2 and 4 biplot2d(boeker, c.labels.show = 1:4) # plot12: show constructs labels 1 to 4  biplot2d(boeker,   g = 1, h = 1, c.labels.inside = T, # plot13: different margins and element color   mai = c(0, 0, 0, 0), e.label.col = \"blue\" )  biplot2d(boeker, flipaxes = c(T, F)) # plot14: flip x axis  biplot2d(boeker, outer.positioning = F) # plot15: no positioning of construct labels biplot2d(boeker, c.labels.devangle = 20) # plot16: only show constructs within 20 degree angle from xy plane"},{"path":"https://docs.openrepgrid.org/articles/web/visualization-biplot.html","id":"calculation-of-biplots","dir":"Articles > Web","previous_headings":"","what":"Calculation of biplots","title":"Biplots","text":"central concept factorize data matrix XX two matrices GG HH X=GHT. X = GH^T. Hence, scalar product row vector GG column vector HH reproduce original cell value matrix. scalar product geometrical interpretation projection one vector onto . data matrix XX usually rank higher two, representation two (three) dimensions requires find optimal representation within lower dimensional space. find low dimension representation singular value decomposition applied. factorizes XX three matrices: UU containing row vectors, VV column points DD singular values (root eigenvalues) new principal axes. X=UDVT X = UDV^T Eckart Young (1936) showed SVD property yield best lower rank approximation XX based . Hence, lower dimensional representation (e.g. two dimensions) optimal least-square sense can written X[2]=U[2]D[2]V[2]T X_{[2]} = U_{[2]} D_{[2]} V_{[2]}^T representation almost already form required biplot representation. decision take assign singular values left right matrices. X=UDgDhVTX=GHT X = UD^g D^h V^T X = GH^T standard biplot g=0g=0 h=1h=1. yields called form biplot, metric elements preserved. Several standard representations can expressed terms parameters gg, hh pre-transformations (centering, normalization) applied XX.","code":""},{"path":"https://docs.openrepgrid.org/articles/web/visualization-biplot.html","id":"literature","dir":"Articles > Web","previous_headings":"","what":"Literature","title":"Biplots","text":"Fransella, F., Bell, R. C., & Bannister, D. (2003). Manual Repertory Grid Technique (2. ed.). Chichester: John Wiley & Sons. Gower, J., Lubbe, S. G., Gardner, S., & Roux, N. L. (2011). Understanding Biplots. John Wiley Sons. Greenacre, M. (2010). Biplots practice. Madrid: BBVA Foundation. Retrieved http://www.multivariatestatistics.org/biplots.html Hope, K. (1966). Cos Cosmos: Considerations Patrick Slater’s Monograph Principal Components Repertory Grid. British Journal Psychiatry, 66(112), 1155 - 1163. Raeithel, . (1998). Kooperative Modellproduktion von Professionellen und Klienten – erläutert Beispiel des Repertory Grid. Selbstorganisation, Kooperation, Zeichenprozeß : Arbeiten zu einer kulturwissenschaftlichen, anwendungsbezogenen Psychologie (pp. 209-254). Opladen: Westdeutscher Verlag. Slater, P. (1964). Principal Components Repertory. London: Vincent Andrews & Co. Slater, P. (1977). measurement intrapersonal space Grid technique. London: Wiley.","code":""},{"path":"https://docs.openrepgrid.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mark Heckmann. Author, maintainer, copyright holder. Alejandro García Gutiérrez. Contributor. Diego Vitali. Contributor.","code":""},{"path":"https://docs.openrepgrid.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Heckmann M (2024). “OpenRepGrid: R Package Analysis Repertory Grid Data.” Journal Open Source Software, 9(104), 6918. doi:10.21105/joss.06918, https://joss.theoj.org/papers/10.21105/joss.06918.","code":"@Article{,   title = {OpenRepGrid: An R Package for the Analysis of Repertory Grid Data},   author = {Mark Heckmann},   year = {2024},   journal = {Journal of Open Source Software},   publisher = {Open Journals},   volume = {9},   number = {104},   pages = {6918},   doi = {10.21105/joss.06918},   url = {https://joss.theoj.org/papers/10.21105/joss.06918},   orcid = {https://orcid.org/0000-0002-0736-7417}, }"},{"path":"https://docs.openrepgrid.org/index.html","id":"openrepgrid-an-r-package-for-the-analysis-of-repertory-grid-data-","dir":"","previous_headings":"","what":"Tools to Analyze Repertory Grid Data","title":"Tools to Analyze Repertory Grid Data","text":"love repertory grids? ! Find powerful tool analyze grids!","code":""},{"path":"https://docs.openrepgrid.org/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"Tools to Analyze Repertory Grid Data","text":"OpenRepGrid R package analyze visualize repertory grid data. repertory grid (often abbreviated grid repgrid) data collection method originated Personal Construct Theory (Kelly 1955). originally designed instrument psychotherapy. Nowadays, used many fields, including market, organizational, political, educational sensory research. See brief introduction. Figure 1. Example repertory grid dataset (rows columns clustered similarity).","code":""},{"path":"https://docs.openrepgrid.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools to Analyze Repertory Grid Data","text":"Install latest release version CRAN Install development version github referencing dev branch (e.g., 0.1.18): load OpenRepGrid package installation type first impression package features type","code":"install.packages(\"OpenRepGrid\", dep = TRUE) library(devtools) install_github(\"markheckmann/OpenRepGrid@01.1.18\") library(OpenRepGrid) demo(OpenRepGrid)"},{"path":"https://docs.openrepgrid.org/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Tools to Analyze Repertory Grid Data","text":"Visit package documentation website: https://docs.openrepgrid.org/","code":""},{"path":"https://docs.openrepgrid.org/index.html","id":"contributing-to-openrepgrid","dir":"","previous_headings":"","what":"Contributing to OpenRepGrid","title":"Tools to Analyze Repertory Grid Data","text":"can contribute OpenRepGrid various ways. can, example, file bug report, help improve documentation write code. See contributing guide detailed information. Anyone getting involved package agrees Code Conduct. software makes life easier, consider sponsoring us — think buying us coffee keep hacking away!","code":""},{"path":"https://docs.openrepgrid.org/index.html","id":"contributors","dir":"","previous_headings":"Contributing to OpenRepGrid","what":"Contributors","title":"Tools to Analyze Repertory Grid Data","text":"Mark Heckmann (package maintainer) Richard C. Bell Alejandro García Gutiérrez (@j4n7) Diego Vitali (@artoo-git) José Antonio González Del Puerto (@MindCartographer) Jonathan D. Raskin","code":""},{"path":"https://docs.openrepgrid.org/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Tools to Analyze Repertory Grid Data","text":"Kelly, George Alexander. 1955. Psychology Personal Constructs. New York: Norton.","code":""},{"path":"https://docs.openrepgrid.org/reference/OpenRepGrid-overview.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenRepGrid: Annotated overview of package functions. — OpenRepGrid-overview","title":"OpenRepGrid: Annotated overview of package functions. — OpenRepGrid-overview","text":"documentation page contains overview package functions ordered topics. best place start learning OpenRepGrid package website https://openrepgrid.org though.","code":""},{"path":"https://docs.openrepgrid.org/reference/OpenRepGrid-overview.html","id":"functions-sorted-by-topic","dir":"Reference","previous_headings":"","what":"Functions sorted by topic","title":"OpenRepGrid: Annotated overview of package functions. — OpenRepGrid-overview","text":"Manipulating grids Loading saving data Analyzing constructs Descriptive statistics constructs Construct correlations distance Root mean square inter-construct correlations Somers' D Principal component analysis (PCA) construct correlation matrix Cluster analysis constructs Analyzing elements Visual representation Index measures Special features","code":""},{"path":"https://docs.openrepgrid.org/reference/OpenRepGrid-overview.html","id":"settings","dir":"Reference","previous_headings":"","what":"Settings","title":"OpenRepGrid: Annotated overview of package functions. — OpenRepGrid-overview","text":"OpenRepGrid uses several default settings e.g. determine many construct characters display default displaying grid. function settings can used show change settings. Also possible store settings file load settings file restore settings.","code":""},{"path":"https://docs.openrepgrid.org/reference/OpenRepGrid-overview.html","id":"grid-datasets","dir":"Reference","previous_headings":"","what":"Grid datasets","title":"OpenRepGrid: Annotated overview of package functions. — OpenRepGrid-overview","text":"OpenRepGrid already contains ready use grid data sets. datasets taken literature. output data simply type Type name dataset console press enter. Single grids Multiple grids YET AVAILABLE","code":""},{"path":"https://docs.openrepgrid.org/reference/OpenRepGrid-overview.html","id":"functions-for-developers","dir":"Reference","previous_headings":"","what":"Functions for developers","title":"OpenRepGrid: Annotated overview of package functions. — OpenRepGrid-overview","text":"OpenRepGrid: internal functions overview developers. find guide developers: functions usually needed casual user. internal functions twofold goal provide means advanced numerical grid analysis 2) facilitate function development. function purposes internal, .e. visible package documentation. Nonetheless documentation can accesses way functions. details section. Functions advanced grid analysis package provides functions facilitate numerical research grids. comprise generation random data, permutation grids etc. facilitate Monte Carlo simulations, batch analysis grids methods. R underlying framework, results grid analysis easily lend statistical processing analysis within R. one central advantages researchers compared standard grid software. following table lists several functions purposes. Modules function development Beside advanced analysis feature developer's functions comprise low-level modules create new functions grid analysis. Though internal structure repgrid object R simple (type e.g. str(bell2010, 2) get impression), convenient deal access level. Several function like e.g. getElementNames convenient wrappers perform standard tasks needed implementing new functions. following table lists several functions purposes. internal functions","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/OpenRepGrid-overview.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"OpenRepGrid: Annotated overview of package functions. — OpenRepGrid-overview","text":"Current members OpenRepGrid development team: Mark Heckmann. Everyone interested developing package invited join.","code":"The \\pkg{OpenRepGrid} package development is hosted on github (<https://github.com/markheckmann/OpenRepGrid>).        The github site provides information and allows to file bug reports or feature requests.        Bug reports can also be emailed to the package maintainer or issued on        <https://openrepgrid.org> under section *Suggestions/Issues*.        The package maintainer is Mark Heckmann <heckmann(dot)mark(at)gmail(dot)com>."},{"path":"https://docs.openrepgrid.org/reference/OpenRepGrid.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenRepGrid: an R package for the analysis of repertory grids. — OpenRepGrid","title":"OpenRepGrid: an R package for the analysis of repertory grids. — OpenRepGrid","text":"OpenRepGrid package provides tools analysis repertory grid data. repertory grid method devised George Alexander Kelly seminal work \"Psychology Personal Constructs\" published 1955. repertory grid used outside context Personal Construct Psychology (PCP) broad range fields. introduction technique see e.g. Fransella, Bell Bannister (2003).","code":""},{"path":"https://docs.openrepgrid.org/reference/OpenRepGrid.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"OpenRepGrid: an R package for the analysis of repertory grids. — OpenRepGrid","text":"get started OpenRepGrid visit project's home openrepgrid.org. site find tutorials, explanation theory, analysis methods corresponding R code. see cite OpenRepGrid package, type citation(\"OpenRepGrid\") R console.","code":""},{"path":"https://docs.openrepgrid.org/reference/OpenRepGrid.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"OpenRepGrid: an R package for the analysis of repertory grids. — OpenRepGrid","text":"Fransella, F., Bell, R. C., & Bannister, D. (2003). Manual Repertory Grid Technique (2. Ed.). Chichester: John Wiley & Sons. Kelly, G. . (1955). psychology personal constructs. Vol. , II. New York: Norton, (2nd printing: 1991, Routledge, London, New York).","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/OpenRepGrid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"OpenRepGrid: an R package for the analysis of repertory grids. — OpenRepGrid","text":"Maintainer: Mark Heckmann (@markheckmann) Contributors: Richard C. Bell, Alejandro García Gutiérrez (@j4n7), Diego Vitali (@artoo-git), José Antonio González Del Puerto (@MindCartographer), Jonathan D. Raskin contribute: can contribute various ways. OpenRepGrid code hosted GitHub, can issue bug reports feature requests. may email request package maintainer.","code":""},{"path":"https://docs.openrepgrid.org/reference/addAvgElement.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a new average element — addAvgElement","title":"Add a new average element — addAvgElement","text":"new element added grid. scores arithmetic means across selected elements.","code":""},{"path":"https://docs.openrepgrid.org/reference/addAvgElement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a new average element — addAvgElement","text":"","code":"addAvgElement(x, name = \"avg\", i, digits = Inf)"},{"path":"https://docs.openrepgrid.org/reference/addAvgElement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a new average element — addAvgElement","text":"x repgrid object. name Name new element. Indexes elements averaged across. Negative indexes can used exclude elements complete set. Duplicate indexes allowed warning issued. digits Digits round mean value . default rounding used (digits = Inf). Use digits = 0 round nearest integer, .e. using original integer rating scores.","code":""},{"path":"https://docs.openrepgrid.org/reference/addAvgElement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a new average element — addAvgElement","text":"repgrid object additional new element.","code":""},{"path":"https://docs.openrepgrid.org/reference/addAvgElement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a new average element — addAvgElement","text":"","code":"addAvgElement(feixas2004, \"others\", i = 2:12) #>  #> META DATA: #> Number of constructs:  20  #> Number of elements:  14  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 7 (right pole) #>  #> RATINGS: #>                       Friend 2 - 7 8 - Non-grata                                #>                     Friend 1 - 6 | | 9 - Friend 3                               #>                  Boyfriend - 5 | | | | 10 - Cousin                              #>                  Brother - 4 | | | | | | 11 - Godmother                         #>                 Father - 3 | | | | | | | | 12 - Friend 4                        #>               Mother - 2 | | | | | | | | | | 13 - Ideal Self                    #>           Self now - 1 | | | | | | | | | | | | 14 - others                      #>                      | | | | | | | | | | | | | |                                #>    Pessimistic (1)   1 1 5 2 7 3 6 2 6 4 3 2 7 3.72727272727273   (1) Optimisti #> Self-demanding (2)   1 6 6 2 2 5 6 3 5 6 4 5 4 4.54545454545455   (2) Takes it  #>        Fearful (3)   2 2 6 2 4 5 6 5 2 3 4 5 5                4   (3) Enterpris #>  Lives to work (4)   5 1 2 2 6 6 6 1 6 7 6 6 7 4.45454545454545   (4) Works to  #> his/her wishes (5)   6 2 1 1 4 3 6 1 7 3 4 2 7 3.09090909090909   (5) Tolerant  #>        Teasing (6)   2 7 1 6 4 3 4 6 3 3 5 6 3 4.36363636363636   (6) Touchy    #> eciates others (7)   2 6 6 6 1 5 4 7 4 2 2 5 1 4.36363636363636   (7) Does not  #>     Aggressive (8)   6 4 2 2 7 4 6 2 6 6 6 3 7 4.36363636363636   (8) Calm      #> d about others (9)   2 2 6 7 2 3 5 7 3 3 2 2 2 3.81818181818182   (9) Selfish   #>    Avaricious (10)   6 1 1 1 7 5 5 1 6 3 3 6 7 3.54545454545455   (10) Generous #>     Sensitive (11)   1 5 7 7 1 4 5 7 1 4 3 4 1 4.36363636363636   (11) Material #>        Cheeky (12)   6 6 5 4 6 6 6 1 6 5 6 5 7 5.09090909090909   (12) Respectf #>  Hypocritical (13)   5 4 4 2 6 5 5 1 6 6 5 4 7 4.36363636363636   (13) Sincere  #>   Blackmailer (14)   3 2 2 1 5 6 6 1 6 6 6 3 7                4   (14) Non blac #> onger than is (15)   6 3 1 2 5 2 4 2 7 6 6 5 6 3.90909090909091   (15) Natural  #> er the friend (16)   6 3 3 3 6 2 1 2 4 4 6 4 7 3.45454545454545   (16) Looks af #> on Accessible (17)   5 2 2 1 4 2 4 1 6 3 5 2 7 2.90909090909091   (17) Accessib #>   Introverted (18)   1 2 6 2 4 5 7 5 2 6 6 5 5 4.54545454545455   (18) Extrover #> ressed easily (19)   1 2 6 3 6 3 7 6 1 3 3 3 6 3.90909090909091   (19) Does not #>  good in thin (20)   6 6 4 6 1 5 2 7 6 3 3 5 1 4.36363636363636   (20) Sees onl #>  #>      #>      #>      #>      #>      #>      #>      #>      #> c    #> easy #> ing  #> live #> with #>      #> appr #>      #>      #>      #> isti #> ul   #>      #> kmai #>      #> ter  #> le   #> ted  #>  get #> y th #>  addAvgElement(feixas2004, \"others\", i = 2:12, digits = 0) # integers #>  #> META DATA: #> Number of constructs:  20  #> Number of elements:  14  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 7 (right pole) #>  #> RATINGS: #>                       Friend 2 - 7 8 - Non-grata                     #>                     Friend 1 - 6 | | 9 - Friend 3                    #>                  Boyfriend - 5 | | | | 10 - Cousin                   #>                  Brother - 4 | | | | | | 11 - Godmother              #>                 Father - 3 | | | | | | | | 12 - Friend 4             #>               Mother - 2 | | | | | | | | | | 13 - Ideal Self         #>           Self now - 1 | | | | | | | | | | | | 14 - others           #>                      | | | | | | | | | | | | | |                     #>    Pessimistic (1)   1 1 5 2 7 3 6 2 6 4 3 2 7 4   (1) Optimistic    #> Self-demanding (2)   1 6 6 2 2 5 6 3 5 6 4 5 4 5   (2) Takes it easy #>        Fearful (3)   2 2 6 2 4 5 6 5 2 3 4 5 5 4   (3) Enterprising  #>  Lives to work (4)   5 1 2 2 6 6 6 1 6 7 6 6 7 4   (4) Works to live #> his/her wishes (5)   6 2 1 1 4 3 6 1 7 3 4 2 7 3   (5) Tolerant with #>        Teasing (6)   2 7 1 6 4 3 4 6 3 3 5 6 3 4   (6) Touchy        #> eciates others (7)   2 6 6 6 1 5 4 7 4 2 2 5 1 4   (7) Does not appr #>     Aggressive (8)   6 4 2 2 7 4 6 2 6 6 6 3 7 4   (8) Calm          #> d about others (9)   2 2 6 7 2 3 5 7 3 3 2 2 2 4   (9) Selfish       #>    Avaricious (10)   6 1 1 1 7 5 5 1 6 3 3 6 7 4   (10) Generous     #>     Sensitive (11)   1 5 7 7 1 4 5 7 1 4 3 4 1 4   (11) Materialisti #>        Cheeky (12)   6 6 5 4 6 6 6 1 6 5 6 5 7 5   (12) Respectful   #>  Hypocritical (13)   5 4 4 2 6 5 5 1 6 6 5 4 7 4   (13) Sincere      #>   Blackmailer (14)   3 2 2 1 5 6 6 1 6 6 6 3 7 4   (14) Non blackmai #> onger than is (15)   6 3 1 2 5 2 4 2 7 6 6 5 6 4   (15) Natural      #> er the friend (16)   6 3 3 3 6 2 1 2 4 4 6 4 7 3   (16) Looks after  #> on Accessible (17)   5 2 2 1 4 2 4 1 6 3 5 2 7 3   (17) Accessible   #>   Introverted (18)   1 2 6 2 4 5 7 5 2 6 6 5 5 5   (18) Extroverted  #> ressed easily (19)   1 2 6 3 6 3 7 6 1 3 3 3 6 4   (19) Does not get #>  good in thin (20)   6 6 4 6 1 5 2 7 6 3 3 5 1 4   (20) Sees only th #>   # exluding elements via negative indexes addAvgElement(feixas2004, \"others\", i = c(-1, -13)) #>  #> META DATA: #> Number of constructs:  20  #> Number of elements:  14  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 7 (right pole) #>  #> RATINGS: #>                       Friend 2 - 7 8 - Non-grata                                #>                     Friend 1 - 6 | | 9 - Friend 3                               #>                  Boyfriend - 5 | | | | 10 - Cousin                              #>                  Brother - 4 | | | | | | 11 - Godmother                         #>                 Father - 3 | | | | | | | | 12 - Friend 4                        #>               Mother - 2 | | | | | | | | | | 13 - Ideal Self                    #>           Self now - 1 | | | | | | | | | | | | 14 - others                      #>                      | | | | | | | | | | | | | |                                #>    Pessimistic (1)   1 1 5 2 7 3 6 2 6 4 3 2 7 3.72727272727273   (1) Optimisti #> Self-demanding (2)   1 6 6 2 2 5 6 3 5 6 4 5 4 4.54545454545455   (2) Takes it  #>        Fearful (3)   2 2 6 2 4 5 6 5 2 3 4 5 5                4   (3) Enterpris #>  Lives to work (4)   5 1 2 2 6 6 6 1 6 7 6 6 7 4.45454545454545   (4) Works to  #> his/her wishes (5)   6 2 1 1 4 3 6 1 7 3 4 2 7 3.09090909090909   (5) Tolerant  #>        Teasing (6)   2 7 1 6 4 3 4 6 3 3 5 6 3 4.36363636363636   (6) Touchy    #> eciates others (7)   2 6 6 6 1 5 4 7 4 2 2 5 1 4.36363636363636   (7) Does not  #>     Aggressive (8)   6 4 2 2 7 4 6 2 6 6 6 3 7 4.36363636363636   (8) Calm      #> d about others (9)   2 2 6 7 2 3 5 7 3 3 2 2 2 3.81818181818182   (9) Selfish   #>    Avaricious (10)   6 1 1 1 7 5 5 1 6 3 3 6 7 3.54545454545455   (10) Generous #>     Sensitive (11)   1 5 7 7 1 4 5 7 1 4 3 4 1 4.36363636363636   (11) Material #>        Cheeky (12)   6 6 5 4 6 6 6 1 6 5 6 5 7 5.09090909090909   (12) Respectf #>  Hypocritical (13)   5 4 4 2 6 5 5 1 6 6 5 4 7 4.36363636363636   (13) Sincere  #>   Blackmailer (14)   3 2 2 1 5 6 6 1 6 6 6 3 7                4   (14) Non blac #> onger than is (15)   6 3 1 2 5 2 4 2 7 6 6 5 6 3.90909090909091   (15) Natural  #> er the friend (16)   6 3 3 3 6 2 1 2 4 4 6 4 7 3.45454545454545   (16) Looks af #> on Accessible (17)   5 2 2 1 4 2 4 1 6 3 5 2 7 2.90909090909091   (17) Accessib #>   Introverted (18)   1 2 6 2 4 5 7 5 2 6 6 5 5 4.54545454545455   (18) Extrover #> ressed easily (19)   1 2 6 3 6 3 7 6 1 3 3 3 6 3.90909090909091   (19) Does not #>  good in thin (20)   6 6 4 6 1 5 2 7 6 3 3 5 1 4.36363636363636   (20) Sees onl #>  #>      #>      #>      #>      #>      #>      #>      #>      #> c    #> easy #> ing  #> live #> with #>      #> appr #>      #>      #>      #> isti #> ul   #>      #> kmai #>      #> ter  #> le   #> ted  #>  get #> y th #>"},{"path":"https://docs.openrepgrid.org/reference/addConstruct.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a new construct to an existing grid object. — addConstruct","title":"Add a new construct to an existing grid object. — addConstruct","text":"Add new construct existing grid object.","code":""},{"path":"https://docs.openrepgrid.org/reference/addConstruct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a new construct to an existing grid object. — addConstruct","text":"","code":"addConstruct(   x,   l.name = NA,   r.name = NA,   scores = NA,   l.preferred = NA,   r.preferred = NA,   l.emerged = NA,   r.emerged = NA,   position = NA,   side = \"pre\" )"},{"path":"https://docs.openrepgrid.org/reference/addConstruct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a new construct to an existing grid object. — addConstruct","text":"x repgrid object. l.name Name left pole (character string). r.name Name right pole (character string). scores Numerical ratings new construct row (length must match number elements grid). l.preferred left one preferred pole? (logical). r.preferred right one preferred pole? (logical). l.emerged left one emergent pole? (logical). r.emerged right one emergent pole? (logical). position integer row construct added. TODO. work properly. side yet use.","code":""},{"path":"https://docs.openrepgrid.org/reference/addConstruct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a new construct to an existing grid object. — addConstruct","text":"repgrid object.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/addConstruct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a new construct to an existing grid object. — addConstruct","text":"","code":"if (FALSE) { # \\dontrun{  # show grid bell2010 addConstruct(bell2010, \"left pole\", \"pole right\", c(3, 1, 3, 2, 5, 4, 6, 3, 7, 1)) } # }"},{"path":"https://docs.openrepgrid.org/reference/addElement.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an element to an existing grid. — addElement","title":"Add an element to an existing grid. — addElement","text":"Add element existing grid.","code":""},{"path":"https://docs.openrepgrid.org/reference/addElement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an element to an existing grid. — addElement","text":"","code":"addElement(   x,   name = NA,   scores = NA,   abbreviation = NA,   status = NA,   position = NA,   side = \"pre\" )"},{"path":"https://docs.openrepgrid.org/reference/addElement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an element to an existing grid. — addElement","text":"x repgrid object. name Name new element (character string). scores Numerical ratings new element column (length must match number constructs grid). abbreviation Abbreviation element name. status Element status (yet use). position integer column element added. TODO: work properly yet. side yet use.","code":""},{"path":"https://docs.openrepgrid.org/reference/addElement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an element to an existing grid. — addElement","text":"repgrid object","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/addElement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add an element to an existing grid. — addElement","text":"","code":"if (FALSE) { # \\dontrun{  bell2010 addElement(bell2010, \"new element\", c(1, 2, 5, 4, 3, 6, 5, 2, 7)) } # }"},{"path":"https://docs.openrepgrid.org/reference/addIndexColumnToMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"add index column for neater colnames — addIndexColumnToMatrix","title":"add index column for neater colnames — addIndexColumnToMatrix","text":"add index column neater colnames","code":""},{"path":"https://docs.openrepgrid.org/reference/addIndexColumnToMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add index column for neater colnames — addIndexColumnToMatrix","text":"","code":"addIndexColumnToMatrix(x)"},{"path":"https://docs.openrepgrid.org/reference/addIndexColumnToMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add index column for neater colnames — addIndexColumnToMatrix","text":"x matrix object","code":""},{"path":"https://docs.openrepgrid.org/reference/addIndexColumnToMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add index column for neater colnames — addIndexColumnToMatrix","text":"","code":"if (FALSE) { # \\dontrun{ x <- matrix(1:9, 3) colnames(x) <- rep(\"Long names that occupiy too much space\", 3) rownames(x) <- rep(\"Some text\", 3) addIndexColumnToMatrix(x) } # }"},{"path":"https://docs.openrepgrid.org/reference/addVarianceExplainedToBiplot2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds the percentage of the sum-of-squares explained by each axis to the plot. — addVarianceExplainedToBiplot2d","title":"Adds the percentage of the sum-of-squares explained by each axis to the plot. — addVarianceExplainedToBiplot2d","text":"Adds percentage sum--squares explained axis plot.","code":""},{"path":"https://docs.openrepgrid.org/reference/addVarianceExplainedToBiplot2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds the percentage of the sum-of-squares explained by each axis to the plot. — addVarianceExplainedToBiplot2d","text":"","code":"addVarianceExplainedToBiplot2d(   x,   dim = c(1, 2, 3),   var.cex = 0.7,   var.show = TRUE,   var.col = grey(0.1),   axis.ext = 0.1,   center = 1,   normalize = 0,   g = 0,   h = 1 - g,   col.active = NA,   col.passive = NA,   ... )"},{"path":"https://docs.openrepgrid.org/reference/addVarianceExplainedToBiplot2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds the percentage of the sum-of-squares explained by each axis to the plot. — addVarianceExplainedToBiplot2d","text":"x repgrid object containing biplot coords, .e. called calcBiplotCoords() prepareBiplotData(). dim dimensions printed. var.cex cex value percentages shown plot. var.show Show explained sum--squares biplot? (default TRUE). var.col color value percentages shown plot. axis.ext Axis extension factor (default .1). bigger value zoom plot. center Numeric. type centering performed. 0= centering, 1= row mean centering (construct), 2= column mean centering (elements), 3= double-centering (construct element means), 4= midpoint centering rows (constructs). default 1 (row centering). normalize numeric value indicating along direction (rows, columns) normalize standard deviations. 0 = none, 1= rows, 2 = columns (default 0). g Power singular value matrix assigned left singular vectors, .e. constructs. h Power singular value matrix assigned right singular vectors, .e. elements. col.active Columns (elements) supplementary points, .e. used SVD find principal components. default use elements. col.passive Columns (elements) supplementary points, .e. used SVD projected component space afterwards. determine solution. Default NA, .e. elements set supplementary. ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/alignByIdeal.html","id":null,"dir":"Reference","previous_headings":"","what":"Align constructs using the ideal element to gain pole preferences. — alignByIdeal","title":"Align constructs using the ideal element to gain pole preferences. — alignByIdeal","text":"direction constructs grid arbitrary reflection scale affect information contained grid. Nonetheless, direction scale effect inter-element correlations (Mackay, 1992) spatial representation clustering grid (Bell, 2010). Hence, desirable follow protocol align constructs render unique results. common approach align constructs pole preference, . e. aligning positive negative poles. can e. g. achieved using swapPoles(). ideal element present, element can used identify positive negative pole. function alignByIdeal align constructs accordingly. Note approach always yield definite results sometimes ratings show clear preference one pole (Winter, Bell & Watson, 2010). preference determined definitely, construct direction remains unchanged (warning issued case).","code":""},{"path":"https://docs.openrepgrid.org/reference/alignByIdeal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align constructs using the ideal element to gain pole preferences. — alignByIdeal","text":"","code":"alignByIdeal(x, ideal, high = TRUE)"},{"path":"https://docs.openrepgrid.org/reference/alignByIdeal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align constructs using the ideal element to gain pole preferences. — alignByIdeal","text":"x repgrid object ideal Number element used alignment (ideal). high Logical. Whether align constructs ideal high ratings constructs (.e. TRUE, default) low ratings (FALSE). High scores lead preference pole right side, low scores align preference pole left side.","code":""},{"path":"https://docs.openrepgrid.org/reference/alignByIdeal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align constructs using the ideal element to gain pole preferences. — alignByIdeal","text":"repgrid object aligned constructs.","code":""},{"path":"https://docs.openrepgrid.org/reference/alignByIdeal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Align constructs using the ideal element to gain pole preferences. — alignByIdeal","text":"Bell, R. C. (2010). note aligning constructs. Personal Construct Theory & Practice, 7, 42-48. Mackay, N. (1992). Identification, Reflection, Correlation: Problems bases repertory grid measures. International Journal Personal Construct Psychology, 5(1), 57-75. Winter, D. ., Bell, R. C., & Watson, S. (2010). Midpoint ratings personal constructs: Constriction middle way? Journal Constructivist Psychology, 23(4), 337-356.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/alignByIdeal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Align constructs using the ideal element to gain pole preferences. — alignByIdeal","text":"","code":"feixas2004 # original grid #>  #> META DATA: #> Number of constructs:  20  #> Number of elements:  13  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 7 (right pole) #>  #> RATINGS: #>                                  7 - Friend 2                      #>                     Friend 1 - 6 | 8 - Non-grata                   #>                  Boyfriend - 5 | | | 9 - Friend 3                  #>                  Brother - 4 | | | | | 10 - Cousin                 #>                 Father - 3 | | | | | | | 11 - Godmother            #>               Mother - 2 | | | | | | | | | 12 - Friend 4           #>           Self now - 1 | | | | | | | | | | | 13 - Ideal Self       #>                      | | | | | | | | | | | | |                     #>    Pessimistic (1)   1 1 5 2 7 3 6 2 6 4 3 2 7   (1) Optimistic    #> Self-demanding (2)   1 6 6 2 2 5 6 3 5 6 4 5 4   (2) Takes it easy #>        Fearful (3)   2 2 6 2 4 5 6 5 2 3 4 5 5   (3) Enterprising  #>  Lives to work (4)   5 1 2 2 6 6 6 1 6 7 6 6 7   (4) Works to live #> his/her wishes (5)   6 2 1 1 4 3 6 1 7 3 4 2 7   (5) Tolerant with #>        Teasing (6)   2 7 1 6 4 3 4 6 3 3 5 6 3   (6) Touchy        #> eciates others (7)   2 6 6 6 1 5 4 7 4 2 2 5 1   (7) Does not appr #>     Aggressive (8)   6 4 2 2 7 4 6 2 6 6 6 3 7   (8) Calm          #> d about others (9)   2 2 6 7 2 3 5 7 3 3 2 2 2   (9) Selfish       #>    Avaricious (10)   6 1 1 1 7 5 5 1 6 3 3 6 7   (10) Generous     #>     Sensitive (11)   1 5 7 7 1 4 5 7 1 4 3 4 1   (11) Materialisti #>        Cheeky (12)   6 6 5 4 6 6 6 1 6 5 6 5 7   (12) Respectful   #>  Hypocritical (13)   5 4 4 2 6 5 5 1 6 6 5 4 7   (13) Sincere      #>   Blackmailer (14)   3 2 2 1 5 6 6 1 6 6 6 3 7   (14) Non blackmai #> onger than is (15)   6 3 1 2 5 2 4 2 7 6 6 5 6   (15) Natural      #> er the friend (16)   6 3 3 3 6 2 1 2 4 4 6 4 7   (16) Looks after  #> on Accessible (17)   5 2 2 1 4 2 4 1 6 3 5 2 7   (17) Accessible   #>   Introverted (18)   1 2 6 2 4 5 7 5 2 6 6 5 5   (18) Extroverted  #> ressed easily (19)   1 2 6 3 6 3 7 6 1 3 3 3 6   (19) Does not get #>  good in thin (20)   6 6 4 6 1 5 2 7 6 3 3 5 1   (20) Sees only th #>  alignByIdeal(feixas2004, 13) # aligned with preference pole on the right #> Warning: The following constructs do not show a preference for either poleand have thus not been aligned: 2 #>  #> META DATA: #> Number of constructs:  20  #> Number of elements:  13  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 7 (right pole) #>  #> RATINGS: #>                                  7 - Friend 2                      #>                     Friend 1 - 6 | 8 - Non-grata                   #>                  Boyfriend - 5 | | | 9 - Friend 3                  #>                  Brother - 4 | | | | | 10 - Cousin                 #>                 Father - 3 | | | | | | | 11 - Godmother            #>               Mother - 2 | | | | | | | | | 12 - Friend 4           #>           Self now - 1 | | | | | | | | | | | 13 - Ideal Self       #>                      | | | | | | | | | | | | |                     #>    Pessimistic (1)   1 1 5 2 7 3 6 2 6 4 3 2 7   (1) Optimistic    #> Self-demanding (2)   1 6 6 2 2 5 6 3 5 6 4 5 4   (2) Takes it easy #>        Fearful (3)   2 2 6 2 4 5 6 5 2 3 4 5 5   (3) Enterprising  #>  Lives to work (4)   5 1 2 2 6 6 6 1 6 7 6 6 7   (4) Works to live #> his/her wishes (5)   6 2 1 1 4 3 6 1 7 3 4 2 7   (5) Tolerant with #>         Touchy (6)   6 1 7 2 4 5 4 2 5 5 3 2 5   (6) Teasing       #> reciate others (7)   6 2 2 2 7 3 4 1 4 6 6 3 7   (7) Appreciates o #>     Aggressive (8)   6 4 2 2 7 4 6 2 6 6 6 3 7   (8) Calm          #>        Selfish (9)   6 6 2 1 6 5 3 1 5 5 6 6 6   (9) Concerned abo #>    Avaricious (10)   6 1 1 1 7 5 5 1 6 3 3 6 7   (10) Generous     #> , superficial (11)   7 3 1 1 7 4 3 1 7 4 5 4 7   (11) Sensitive    #>        Cheeky (12)   6 6 5 4 6 6 6 1 6 5 6 5 7   (12) Respectful   #>  Hypocritical (13)   5 4 4 2 6 5 5 1 6 6 5 4 7   (13) Sincere      #>   Blackmailer (14)   3 2 2 1 5 6 6 1 6 6 6 3 7   (14) Non blackmai #> onger than is (15)   6 3 1 2 5 2 4 2 7 6 6 5 6   (15) Natural      #> er the friend (16)   6 3 3 3 6 2 1 2 4 4 6 4 7   (16) Looks after  #> on Accessible (17)   5 2 2 1 4 2 4 1 6 3 5 2 7   (17) Accessible   #>   Introverted (18)   1 2 6 2 4 5 7 5 2 6 6 5 5   (18) Extroverted  #> ressed easily (19)   1 2 6 3 6 3 7 6 1 3 3 3 6   (19) Does not get #>  the negative (20)   2 2 4 2 7 3 6 1 2 5 5 3 7   (20) Tries to fin #>   raeithel # original grid #>  #> META DATA: #> Number of constructs:  13  #> Number of elements:  13  #>  #> SCALE INFO: #> The grid is rated on a scale from -1 (left pole) to 1 (right pole) #>  #> RATINGS: #>                                        7 - Mutter                               #>                             Virus - 6  |  8 - Schwester                         #>                     Ich vorher - 5  |  |  |  9 - Partner                        #>                        Arzt - 4  |  |  |  |  |  10 - Vater                      #>                    Ideal - 3  |  |  |  |  |  |  |  11 - Neg. Person             #>             Therapeut - 2  |  |  |  |  |  |  |  |  |  12 - Ich                  #>             Freund - 1  |  |  |  |  |  |  |  |  |  |  |  13 - Freundin          #>                      |  |  |  |  |  |  |  |  |  |  |  |  |                      #>   charakterlos (1)    1  1  1  1  1 -1 -1 -1  1 -1 -1  1  1   (1) Charakter hab #> uninteressiert (2)    1  1  1  1  1  1 -1 -1  1  1 -1  1  1   (2) interessiert  #> h gehen lassen (3)    1  1  1  1  1  1 -1 -1  1 -1 -1  1  1   (3) zielstrebig   #>     unerfahren (4)    1  1  1  1  1  1 -1 -1 -1  0 -1  1  1   (4) erfahren      #>   abschaetzbar (5)   -1  1  1  1  1  1  1 -1 -1 -1 -1  1  0   (5) unberechenbar #>          mutig (6)   -1 -1 -1 -1  1  1  1  1 -1  1  1  1 -1   (6) feige         #>  leichtfuessig (7)   -1 -1 -1 -1 -1 -1  1  1 -1  1  0  1 -1   (7) schwerfaellig #>          kuehl (8)    1  1  1  0 -1 -1 -1  1  1  1  1  0 -1   (8) warmherzig    #> h eigennuetzig (9)    1  1  1  1 -1 -1 -1  0  1  1 -1 -1  0   (9) lebensbejahen #>     angepasst (10)    1 -1  1  0  1  1 -1 -1 -1 -1 -1 -1 -1   (10) unangepasst  #>         offen (11)   -1 -1 -1 -1  1  1  1 -1 -1 -1  1 -1 -1   (11) hinterhaelti #>  unvorsichtig (12)   -1 -1  1  1 -1  1  0  1 -1  1 -1  1 -1   (12) disziplinier #> undschaftlich (13)    0 -1 -1  1 -1  0  0 -1  0  1  0  0 -1   (13) vaeterlich a #>  alignByIdeal(raeithel, 3, high = FALSE) # aligned with preference pole on the left #>  #> META DATA: #> Number of constructs:  13  #> Number of elements:  13  #>  #> SCALE INFO: #> The grid is rated on a scale from -1 (left pole) to 1 (right pole) #>  #> RATINGS: #>                                        7 - Mutter                               #>                             Virus - 6  |  8 - Schwester                         #>                     Ich vorher - 5  |  |  |  9 - Partner                        #>                        Arzt - 4  |  |  |  |  |  10 - Vater                      #>                    Ideal - 3  |  |  |  |  |  |  |  11 - Neg. Person             #>             Therapeut - 2  |  |  |  |  |  |  |  |  |  12 - Ich                  #>             Freund - 1  |  |  |  |  |  |  |  |  |  |  |  13 - Freundin          #>                      |  |  |  |  |  |  |  |  |  |  |  |  |                      #> harakter haben (1)   -1 -1 -1 -1 -1  1  1  1 -1  1  1 -1 -1   (1) charakterlos  #>   interessiert (2)   -1 -1 -1 -1 -1 -1  1  1 -1 -1  1 -1 -1   (2) uninteressier #>    zielstrebig (3)   -1 -1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1   (3) sich gehen la #>       erfahren (4)   -1 -1 -1 -1 -1 -1  1  1  1  0  1 -1 -1   (4) unerfahren    #>  unberechenbar (5)    1 -1 -1 -1 -1 -1 -1  1  1  1  1 -1  0   (5) abschaetzbar  #>          mutig (6)   -1 -1 -1 -1  1  1  1  1 -1  1  1  1 -1   (6) feige         #>  leichtfuessig (7)   -1 -1 -1 -1 -1 -1  1  1 -1  1  0  1 -1   (7) schwerfaellig #>     warmherzig (8)   -1 -1 -1  0  1  1  1 -1 -1 -1 -1  0  1   (8) kuehl         #> ejahend sozial (9)   -1 -1 -1 -1  1  1  1  0 -1 -1  1  1  0   (9) egoistisch ei #>   unangepasst (10)   -1  1 -1  0 -1 -1  1  1  1  1  1  1  1   (10) angepasst    #>         offen (11)   -1 -1 -1 -1  1  1  1 -1 -1 -1  1 -1 -1   (11) hinterhaelti #> iniert gesund (12)    1  1 -1 -1  1 -1  0 -1  1 -1  1 -1  1   (12) unvorsichtig #> undschaftlich (13)    0 -1 -1  1 -1  0  0 -1  0  1  0  0 -1   (13) vaeterlich a #>"},{"path":"https://docs.openrepgrid.org/reference/alignByLoadings.html","id":null,"dir":"Reference","previous_headings":"","what":"Align constructs by loadings on first principal component. — alignByLoadings","title":"Align constructs by loadings on first principal component. — alignByLoadings","text":"case construct loads negatively first principal component, function alignByLoadings() reverse constructs positive loadings first principal component (see detail section ).","code":""},{"path":"https://docs.openrepgrid.org/reference/alignByLoadings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align constructs by loadings on first principal component. — alignByLoadings","text":"","code":"alignByLoadings(x, trim = 20, index = TRUE)"},{"path":"https://docs.openrepgrid.org/reference/alignByLoadings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align constructs by loadings on first principal component. — alignByLoadings","text":"x repgrid object. trim number characters construct trimmed (default 10). NA trimming done. Trimming simply saves space displaying output. index Whether print number construct (e.g. correlation matrices). default TRUE.","code":""},{"path":"https://docs.openrepgrid.org/reference/alignByLoadings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align constructs by loadings on first principal component. — alignByLoadings","text":"object class alignByLoadings containing list calculations following entries: cor.: Construct correlation matrix reversal loadings.: Loadings PCs reversal reversed: Constructs reversed cor.: Construct correlation matrix reversal loadings.: Loadings PCs reversal","code":""},{"path":"https://docs.openrepgrid.org/reference/alignByLoadings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Align constructs by loadings on first principal component. — alignByLoadings","text":"direction constructs grid arbitrary reflection scale affect information contained grid. Nonetheless, direction scale effect inter-element correlations (Mackay, 1992) spatial representation clustering grid (Bell, 2010). Hence, desirable follow protocol align constructs render unique results. common approach align constructs pole preference, information always accessible. Bell (2010) proposed another solution problem construct alignment. unique protocol suggests align constructs way positive loadings first component grid PCA.","code":""},{"path":"https://docs.openrepgrid.org/reference/alignByLoadings.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Align constructs by loadings on first principal component. — alignByLoadings","text":"Bell (2010) proposed solution problem construct alignment. construct reversal effect element correlation thus measure based element correlation (Mackay, 1992), desirable standard method construct alignment independently semantics (preferred pole etc.). Bell (2010) proposes align constructs way positive loadings first component grid PCA.","code":""},{"path":"https://docs.openrepgrid.org/reference/alignByLoadings.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Align constructs by loadings on first principal component. — alignByLoadings","text":"Bell, R. C. (2010). note aligning constructs. Personal Construct Theory & Practice, 7, 42-48. Mackay, N. (1992). Identification, Reflection, Correlation: Problems bases repertory grid measures. International Journal Personal Construct Psychology, 5(1), 57-75.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/alignByLoadings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Align constructs by loadings on first principal component. — alignByLoadings","text":"","code":"# reproduction of the example in the Bell (2010) # constructs aligned by loadings on PC 1 bell2010 #>  #> META DATA: #> Number of constructs:  9  #> Number of elements:  10  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 7 (right pole) #>  #> RATINGS: #>    A teacher you respected - 5 6 - Mother (or the person who #> on of the opposite sex t - 4 | | 7 - A person of the opposit #> ppiest person you know - 3 | | | | 8 - The most confident pe #> iend of the same sex - 2 | | | | | | 9 - A person you work w #>               self - 1 | | | | | | | | 10 - A teacher you di #>                      | | | | | | | | | |                     #>        relaxed (1)   4 4 6 5 3 6 5 2 2 6   (1) worried & ten #> (academically) (2)   6 7 6 5 7 4 6 7 4 7   (2) smart (academ #> islikes sports (3)   6 3 7 6 4 4 2 3 6 3   (3) loves sports  #> ot interactive (4)   6 7 5 6 6 5 6 7 7 4   (4) loves people  #> ot transparent (5)   6 4 5 7 3 7 6 5 6 3   (5) transparent   #>    insensitive (6)   4 6 5 4 4 6 5 3 4 2   (6) sensitive     #>  fearful&timid (7)   5 4 4 6 5 3 5 6 5 5   (7) fearless      #>          rough (8)   5 6 6 4 5 7 7 3 5 6   (8) gentle        #> ccept as it is (9)   5 5 6 7 4 4 6 7 5 5   (9) loves to argu #>  alignByLoadings(bell2010) #>  #> ################################### #> Alignment of constructs by loadings #> ################################### #>  #> Construct correlations - before alignment #>  #>                                 1     2     3     4     5     6     7     8 #> (1) relaxed - worried &     1     -0.10  0.03 -0.83  0.12  0.23 -0.49  0.66 #> (2) not so sma - smart (aca 2           -0.47 -0.01 -0.80 -0.35  0.28 -0.19 #> (3) dislikes s - loves spor 3                 -0.04  0.36  0.04 -0.01 -0.24 #> (4) not intera - loves peop 4                        0.17  0.21  0.34 -0.49 #> (5) not transp - transparen 5                              0.38 -0.05  0.01 #> (6) insensitiv - sensitive  6                                   -0.71  0.55 #> (7) fearful&ti - fearless   7                                         -0.78 #> (8) rough - gentle          8                                               #> (9) accept as  - loves to a 9                                               #>                                 9 #> (1) relaxed - worried &     -0.08 #> (2) not so sma - smart (aca  0.12 #> (3) dislikes s - loves spor  0.08 #> (4) not intera - loves peop  0.25 #> (5) not transp - transparen  0.29 #> (6) insensitiv - sensitive  -0.26 #> (7) fearful&ti - fearless    0.65 #> (8) rough - gentle          -0.54 #> (9) accept as  - loves to a       #>  #> Construct factor loadiongs on PC1 - before alignment #>  #>                                PC1 #> (1) relaxed - worried &      0.726 #> (2) not so sma - smart (aca -0.392 #> (3) dislikes s - loves spor  0.029 #> (4) not intera - loves peop -0.553 #> (5) not transp - transparen  0.183 #> (6) insensitiv - sensitive   0.643 #> (7) fearful&ti - fearless   -0.912 #> (8) rough - gentle           0.907 #> (9) accept as  - loves to a -0.591 #>  #> The following constructs are reversed: #>  #>                             index #> (2) not so sma - smart (aca     2 #> (4) not intera - loves peop     4 #> (7) fearful&ti - fearless       7 #> (9) accept as  - loves to a     9 #>  #> Construct correlations - after alignment #>  #>                                 1     2     3     4     5     6     7     8 #> (1) relaxed - worried &     1      0.10  0.03  0.83  0.12  0.23  0.49  0.66 #> (2) smart (aca - not so sma 2            0.47 -0.01  0.80  0.35  0.28  0.19 #> (3) dislikes s - loves spor 3                  0.04  0.36  0.04  0.01 -0.24 #> (4) loves peop - not intera 4                       -0.17 -0.21  0.34  0.49 #> (5) not transp - transparen 5                              0.38  0.05  0.01 #> (6) insensitiv - sensitive  6                                    0.71  0.55 #> (7) fearless - fearful&ti   7                                          0.78 #> (8) rough - gentle          8                                               #> (9) loves to a - accept as  9                                               #>                                 9 #> (1) relaxed - worried &      0.08 #> (2) smart (aca - not so sma  0.12 #> (3) dislikes s - loves spor -0.08 #> (4) loves peop - not intera  0.25 #> (5) not transp - transparen -0.29 #> (6) insensitiv - sensitive   0.26 #> (7) fearless - fearful&ti    0.65 #> (8) rough - gentle           0.54 #> (9) loves to a - accept as        #>  #> Construct factor loadings on PC1 - after alignment #>  #>                               PC1 #> (1) relaxed - worried &     0.726 #> (2) smart (aca - not so sma 0.392 #> (3) dislikes s - loves spor 0.029 #> (4) loves peop - not intera 0.553 #> (5) not transp - transparen 0.183 #> (6) insensitiv - sensitive  0.643 #> (7) fearless - fearful&ti   0.912 #> (8) rough - gentle          0.907 #> (9) loves to a - accept as  0.591 #>  #>   # save results a <- alignByLoadings(bell2010)  # modify printing of resukts print(a, digits = 5) #>  #> ################################### #> Alignment of constructs by loadings #> ################################### #>  #> Construct correlations - before alignment #>  #>                                    1        2        3        4        5 #> (1) relaxed - worried &     1        -0.10068  0.03312 -0.83425  0.11532 #> (2) not so sma - smart (aca 2                 -0.46602 -0.00933 -0.80498 #> (3) dislikes s - loves spor 3                          -0.03914  0.36048 #> (4) not intera - loves peop 4                                    0.16657 #> (5) not transp - transparen 5                                            #> (6) insensitiv - sensitive  6                                            #> (7) fearful&ti - fearless   7                                            #> (8) rough - gentle          8                                            #> (9) accept as  - loves to a 9                                            #>                                    6        7        8        9 #> (1) relaxed - worried &      0.23226 -0.49383  0.66146 -0.07915 #> (2) not so sma - smart (aca -0.34849  0.28279 -0.19076  0.12087 #> (3) dislikes s - loves spor  0.04146 -0.01412 -0.23593  0.08449 #> (4) not intera - loves peop  0.20532  0.34045 -0.49467  0.24946 #> (5) not transp - transparen  0.38498 -0.04916  0.01190  0.29417 #> (6) insensitiv - sensitive           -0.71485  0.54740 -0.26426 #> (7) fearful&ti - fearless                     -0.78384  0.65239 #> (8) rough - gentle                                     -0.53932 #> (9) accept as  - loves to a                                     #>  #> Construct factor loadiongs on PC1 - before alignment #>  #>                                  PC1 #> (1) relaxed - worried &      0.72578 #> (2) not so sma - smart (aca -0.39207 #> (3) dislikes s - loves spor  0.02883 #> (4) not intera - loves peop -0.55256 #> (5) not transp - transparen  0.18347 #> (6) insensitiv - sensitive   0.64337 #> (7) fearful&ti - fearless   -0.91207 #> (8) rough - gentle           0.90655 #> (9) accept as  - loves to a -0.59095 #>  #> The following constructs are reversed: #>  #>                             index #> (2) not so sma - smart (aca     2 #> (4) not intera - loves peop     4 #> (7) fearful&ti - fearless       7 #> (9) accept as  - loves to a     9 #>  #> Construct correlations - after alignment #>  #>                                    1        2        3        4        5 #> (1) relaxed - worried &     1         0.10068  0.03312  0.83425  0.11532 #> (2) smart (aca - not so sma 2                  0.46602 -0.00933  0.80498 #> (3) dislikes s - loves spor 3                           0.03914  0.36048 #> (4) loves peop - not intera 4                                   -0.16657 #> (5) not transp - transparen 5                                            #> (6) insensitiv - sensitive  6                                            #> (7) fearless - fearful&ti   7                                            #> (8) rough - gentle          8                                            #> (9) loves to a - accept as  9                                            #>                                    6        7        8        9 #> (1) relaxed - worried &      0.23226  0.49383  0.66146  0.07915 #> (2) smart (aca - not so sma  0.34849  0.28279  0.19076  0.12087 #> (3) dislikes s - loves spor  0.04146  0.01412 -0.23593 -0.08449 #> (4) loves peop - not intera -0.20532  0.34045  0.49467  0.24946 #> (5) not transp - transparen  0.38498  0.04916  0.01190 -0.29417 #> (6) insensitiv - sensitive            0.71485  0.54740  0.26426 #> (7) fearless - fearful&ti                      0.78384  0.65239 #> (8) rough - gentle                                      0.53932 #> (9) loves to a - accept as                                      #>  #> Construct factor loadings on PC1 - after alignment #>  #>                                 PC1 #> (1) relaxed - worried &     0.72578 #> (2) smart (aca - not so sma 0.39207 #> (3) dislikes s - loves spor 0.02883 #> (4) loves peop - not intera 0.55256 #> (5) not transp - transparen 0.18347 #> (6) insensitiv - sensitive  0.64337 #> (7) fearless - fearful&ti   0.91207 #> (8) rough - gentle          0.90655 #> (9) loves to a - accept as  0.59095 #>  #>   # access results for further processing names(a) #> [1] \"cor.before\"      \"loadings.before\" \"reversed\"        \"cor.after\"       #> [5] \"loadings.after\"  a$cor.before #>  #> ############################## #> Correlation between constructs #> ############################## #>  #> Type of correlation:  pearson  #>  #>                                 1     2     3     4     5     6     7     8 #> (1) relaxed - worried &     1     -0.10  0.03 -0.83  0.12  0.23 -0.49  0.66 #> (2) not so sma - smart (aca 2           -0.47 -0.01 -0.80 -0.35  0.28 -0.19 #> (3) dislikes s - loves spor 3                 -0.04  0.36  0.04 -0.01 -0.24 #> (4) not intera - loves peop 4                        0.17  0.21  0.34 -0.49 #> (5) not transp - transparen 5                              0.38 -0.05  0.01 #> (6) insensitiv - sensitive  6                                   -0.71  0.55 #> (7) fearful&ti - fearless   7                                         -0.78 #> (8) rough - gentle          8                                               #> (9) accept as  - loves to a 9                                               #>                                 9 #> (1) relaxed - worried &     -0.08 #> (2) not so sma - smart (aca  0.12 #> (3) dislikes s - loves spor  0.08 #> (4) not intera - loves peop  0.25 #> (5) not transp - transparen  0.29 #> (6) insensitiv - sensitive  -0.26 #> (7) fearful&ti - fearless    0.65 #> (8) rough - gentle          -0.54 #> (9) accept as  - loves to a       a$loadings.before #>                                    PC1 #> (1) relaxed - worried &      0.7257763 #> (2) not so sma - smart (aca -0.3920715 #> (3) dislikes s - loves spor  0.0288297 #> (4) not intera - loves peop -0.5525596 #> (5) not transp - transparen  0.1834655 #> (6) insensitiv - sensitive   0.6433699 #> (7) fearful&ti - fearless   -0.9120746 #> (8) rough - gentle           0.9065492 #> (9) accept as  - loves to a -0.5909500 a$reversed #>                             index #> (2) not so sma - smart (aca     2 #> (4) not intera - loves peop     4 #> (7) fearful&ti - fearless       7 #> (9) accept as  - loves to a     9 a$cor.after #>  #> ############################## #> Correlation between constructs #> ############################## #>  #> Type of correlation:  pearson  #>  #>                                 1     2     3     4     5     6     7     8 #> (1) relaxed - worried &     1      0.10  0.03  0.83  0.12  0.23  0.49  0.66 #> (2) smart (aca - not so sma 2            0.47 -0.01  0.80  0.35  0.28  0.19 #> (3) dislikes s - loves spor 3                  0.04  0.36  0.04  0.01 -0.24 #> (4) loves peop - not intera 4                       -0.17 -0.21  0.34  0.49 #> (5) not transp - transparen 5                              0.38  0.05  0.01 #> (6) insensitiv - sensitive  6                                    0.71  0.55 #> (7) fearless - fearful&ti   7                                          0.78 #> (8) rough - gentle          8                                               #> (9) loves to a - accept as  9                                               #>                                 9 #> (1) relaxed - worried &      0.08 #> (2) smart (aca - not so sma  0.12 #> (3) dislikes s - loves spor -0.08 #> (4) loves peop - not intera  0.25 #> (5) not transp - transparen -0.29 #> (6) insensitiv - sensitive   0.26 #> (7) fearless - fearful&ti    0.65 #> (8) rough - gentle           0.54 #> (9) loves to a - accept as        a$loadings.after #>                                   PC1 #> (1) relaxed - worried &     0.7257763 #> (2) smart (aca - not so sma 0.3920715 #> (3) dislikes s - loves spor 0.0288297 #> (4) loves peop - not intera 0.5525596 #> (5) not transp - transparen 0.1834655 #> (6) insensitiv - sensitive  0.6433699 #> (7) fearless - fearful&ti   0.9120746 #> (8) rough - gentle          0.9065492 #> (9) loves to a - accept as  0.5909500"},{"path":"https://docs.openrepgrid.org/reference/angleOrderIndexes2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Make indexes to order grid by angles in given dimensions. — angleOrderIndexes2d","title":"Make indexes to order grid by angles in given dimensions. — angleOrderIndexes2d","text":"Reorder indexes constructs elements calculated using coordinates given dimensions.","code":""},{"path":"https://docs.openrepgrid.org/reference/angleOrderIndexes2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make indexes to order grid by angles in given dimensions. — angleOrderIndexes2d","text":"","code":"angleOrderIndexes2d(x, dim = c(1, 2), clockwise = TRUE)"},{"path":"https://docs.openrepgrid.org/reference/angleOrderIndexes2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make indexes to order grid by angles in given dimensions. — angleOrderIndexes2d","text":"x repgrid object submitted calcBiplotCoords(). dim Dimensions used calculate angles reordering grid. clockwise Logical. Positive angles clockwise x axis basis.","code":""},{"path":"https://docs.openrepgrid.org/reference/angleOrderIndexes2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make indexes to order grid by angles in given dimensions. — angleOrderIndexes2d","text":"list containing indexes reorder grid. first list element constructs, second elements indexes.","code":""},{"path":"https://docs.openrepgrid.org/reference/angleOrderIndexes2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make indexes to order grid by angles in given dimensions. — angleOrderIndexes2d","text":"","code":"if (FALSE) { # \\dontrun{  x <- randomGrid(15, 30) # make random grid i <- angleOrderIndexes2d(x) # make indexes for ordering x <- x[i[[1]], i[[2]]] # reorder constructs and elements x # print grid } # }"},{"path":"https://docs.openrepgrid.org/reference/apply_pb.html","id":null,"dir":"Reference","previous_headings":"","what":"apply with a progress bar — apply_pb","title":"apply with a progress bar — apply_pb","text":"Can used like standard base:::apply. thing create additional progress bar.","code":""},{"path":"https://docs.openrepgrid.org/reference/apply_pb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"apply with a progress bar — apply_pb","text":"","code":"apply_pb(X, MARGIN, FUN, ...)"},{"path":"https://docs.openrepgrid.org/reference/apply_pb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"apply with a progress bar — apply_pb","text":"X see ?apply parameter explanation MARGIN see ?apply FUN see ?apply ... see ?apply","code":""},{"path":"https://docs.openrepgrid.org/reference/apply_pb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"apply with a progress bar — apply_pb","text":"see ?apply","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/apply_pb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"apply with a progress bar — apply_pb","text":"","code":"if (FALSE) { # \\dontrun{  apply_pb(anscombe, 2, sd, na.rm = TRUE)  # larger dataset df <- data.frame(rnorm(30000), rnorm(30000)) head(apply_pb(df, 1, sd))  # performance comparison df <- data.frame(rnorm(90000), rnorm(90000)) system.time(apply(df, 1, sd)) system.time(apply_pb(df, 1, sd)) } # }"},{"path":"https://docs.openrepgrid.org/reference/bertin.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Bertin display of grid data. — bertin","title":"Make Bertin display of grid data. — bertin","text":"One popular ways displaying grid data adopted Bertin's (1974) graphical proposals, immense influence onto data visualization. One appealing ideas presented Bertin concept reorderable matrix. comprised graphical displays cell, allowing identify structures eye-balling reordered versions data matrix (see Bertin, 1974). context repertory grids, display made simple colored rectangle color denotes corresponding score. Bright values correspond low, dark high scores. example analyze Bertin display see e.g. Dick (2000) Raeithel (1998).","code":""},{"path":"https://docs.openrepgrid.org/reference/bertin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Bertin display of grid data. — bertin","text":"","code":"bertin(   x,   colors = c(\"white\", \"black\"),   showvalues = TRUE,   xlim = c(0.2, 0.8),   ylim = c(0, 0.6),   margins = c(0, 1, 1),   cex.elements = 0.7,   cex.constructs = 0.7,   cex.text = 0.6,   col.text = NA,   border = \"white\",   lheight = 0.75,   id = c(TRUE, TRUE),   col.e = \"black\",   col.c.left = \"black\",   col.c.right = \"black\",   col.e.lines = \"black\",   cc = 0,   cr = 0,   cc.old = 0,   cr.old = 0,   col.mark.fill = \"#FCF5A4\",   print = TRUE,   ... )"},{"path":"https://docs.openrepgrid.org/reference/bertin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Bertin display of grid data. — bertin","text":"x repgrid object. colors Vector. Two colors defining color ramp bertin (default c(\"white\", \"black\")). showvalues Logical. Whether scores shown bertin xlim Vector. Left right limits inner bertin (default c(.2, .8)). ylim Vector. Lower upper limits inner bertin default(c(.0, .6)). margins Vector length three (default margins=c(0,1,1)). 1st element denotes left, 2nd upper 3rd right margin npc coordinates (.e. 0 zero). cex.elements Numeric. Text size element labels (default .7). cex.constructs Numeric. Text size construct labels (default .7). cex.text Numeric. Text size scores bertin cells (default .7). col.text Color scores bertin (default NA). default color text chosen according background color. background ist bright text black vice versa. color specified color set independent background. border Border color bertin cells (default white). lheight Line height constructs. id Logical. Whether print id number constructs elements respectively (default c(T,T)). col.e Color elements. col.c.left, col.c.right Color left right conctructs poles. col.e.lines Color vertical elements lines. cc Numeric. Current column mark. cr Numeric. Current row mark. cc.old Numeric. Column unmark. cr.old Numeric. Row unmark. col.mark.fill Color marked row column (default \"#FCF5A4\"). print Print whole bertin. FALSE current old row column printed. ... Optional arguments passed bertinBase.","code":""},{"path":"https://docs.openrepgrid.org/reference/bertin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Bertin display of grid data. — bertin","text":"NULL just side effects, .e. printing.","code":""},{"path":"https://docs.openrepgrid.org/reference/bertin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Make Bertin display of grid data. — bertin","text":"Bertin, J. (1974). Graphische Semiologie: Diagramme, Netze, Karten. Berlin, New York: de Gruyter. Dick, M. (2000). Use Narrative Grid Interviews Psychological Mobility Research. Forum Qualitative Sozialforschung / Forum: Qualitative Social Research, 1(2). Raeithel, . (1998). Kooperative Modellproduktion von Professionellen und Klienten - erlauetert Beispiel des Repertory Grid. Selbstorganisation, Kooperation, Zeichenprozess: Arbeiten zu einer kulturwissenschaftlichen, anwendungsbezogenen Psychologie (pp. 209-254). Opladen: Westdeutscher Verlag.","code":""},{"path":"https://docs.openrepgrid.org/reference/bertin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Bertin display of grid data. — bertin","text":"","code":"bertin(feixas2004) bertin(feixas2004, c(\"white\", \"darkblue\"))  bertin(feixas2004, showvalues = FALSE)  bertin(feixas2004, border = \"grey\")  bertin(feixas2004, cex.text = .9)  bertin(feixas2004, id = c(FALSE, FALSE))   bertin(feixas2004, cc = 3, cr = 4)   bertin(feixas2004, cc = 3, cr = 4, col.mark.fill = \"#e6e6e6\")"},{"path":"https://docs.openrepgrid.org/reference/bertinCluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Bertin display with corresponding cluster analysis. — bertinCluster","title":"Bertin display with corresponding cluster analysis. — bertinCluster","text":"Element columns constructs rows ordered according cluster criterion. Various distance measures well cluster methods supported.","code":""},{"path":"https://docs.openrepgrid.org/reference/bertinCluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bertin display with corresponding cluster analysis. — bertinCluster","text":"","code":"bertinCluster(   x,   dmethod = c(\"euclidean\", \"euclidean\"),   cmethod = c(\"ward.D\", \"ward.D\"),   p = c(2, 2),   align = TRUE,   trim = NA,   type = c(\"triangle\"),   xsegs = c(0, 0.2, 0.7, 0.9, 1),   ysegs = c(0, 0.1, 0.7, 1),   x.off = 0.01,   y.off = 0.01,   cex.axis = 0.6,   col.axis = grey(0.4),   draw.axis = TRUE,   ... )"},{"path":"https://docs.openrepgrid.org/reference/bertinCluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bertin display with corresponding cluster analysis. — bertinCluster","text":"x repgrid object. dmethod distance measure used. must one \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\", \"minkowski\". Default \"euclidean\". unambiguous substring can given (e.g. \"euc\" \"euclidean\"). vector length two can passed different distance measure constructs elements wanted (e.g.c(\"euclidean\", \"manhattan\")). apply euclidean distance constructs manhattan distance elements. additional information different types see ?dist. cmethod agglomeration method used. (unambiguous abbreviation ) one \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\", \"mcquitty\", \"median\" \"centroid\". Default \"ward.D\". vector length two can passed different cluster method constructs elements wanted (e.g.c(\"ward.D\", \"euclidean\")). apply ward clustering constructs single linkage clustering elements. one either constructs elements clustered value NA can supplied. E.g. cluster elements use c(NA, \"ward.D\"). p power Minkowski distance, case \"minkowski\" used argument dmethod. p can vector length two different powers wanted constructs elements respectively (e.g. c(2,1)). align Whether constructs aligned clustering (default TRUE). , grid matrix clustered . See Details section function cluster() information. trim number characters construct trimmed (default 10). NA trimming done. Trimming simply saves space displaying output. type Type dendrogram. Either \"triangle\" (default) \"rectangle\" form. xsegs Numeric vector normal device coordinates (ndc .e. 0 1) mark widths regions left labels, bertin display, right labels vertical dendrogram (.e. constructs). ysegs Numeric vector normal device coordinates (ndc .e. 0 1) mark heights regions horizontal dendrogram (.e. elements), bertin display element names. x.Horizontal offset construct labels construct dendrogram (default 0.01 normal device coordinates). y.Vertical offset bertin display element dendrogram (default 0.01 normal device coordinates). cex.axis cex axis labels, default .6. col.axis Color axis axis labels, default grey(.4). draw.axis Whether draw axis showing distance metric dendrograms (default TRUE). ... additional parameters passed function bertin().","code":""},{"path":"https://docs.openrepgrid.org/reference/bertinCluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bertin display with corresponding cluster analysis. — bertinCluster","text":"list two hclust() object, elements constructs respectively.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/bertinCluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bertin display with corresponding cluster analysis. — bertinCluster","text":"","code":"# default is euclidean distance and ward clustering bertinCluster(bell2010)   ### applying different distance measures and cluster methods  # euclidean distance and single linkage clustering bertinCluster(bell2010, cmethod = \"single\")  # manhattan distance and single linkage clustering bertinCluster(bell2010, dmethod = \"manhattan\", cm = \"single\")  # minkowksi distance with power of 2 = euclidean distance bertinCluster(bell2010, dm = \"mink\", p = 2)   ### using different methods for constructs and elements  # ward clustering for constructs, single linkage for elements bertinCluster(bell2010, cmethod = c(\"ward.D\", \"single\"))  # euclidean distance measure for constructs, manhatten # distance for elements bertinCluster(bell2010, dmethod = c(\"euclidean\", \"man\"))  # minkowski metric with different powers for constructs and elements bertinCluster(bell2010, dmethod = \"mink\", p = c(2, 1))  ### clustering either constructs or elements only # euclidean distance and ward clustering for constructs no # clustering for elements bertinCluster(bell2010, cmethod = c(\"ward.D\", NA))  # euclidean distance and single linkage clustering for elements # no clustering for constructs bertinCluster(bell2010, cm = c(NA, \"single\"), align = FALSE)   ### changing the appearance # different dendrogram type bertinCluster(bell2010, type = \"rectangle\")  # no axis drawn for dendrogram bertinCluster(bell2010, draw.axis = FALSE)   ### passing on arguments to bertin function via ... # grey cell borders in bertin display bertinCluster(bell2010, border = \"grey\")  # omit printing of grid scores, i.e. colors only bertinCluster(bell2010, showvalues = FALSE)   ### changing the layout # making the vertical dendrogram bigger bertinCluster(bell2010, xsegs = c(0, .2, .5, .7, 1))  # making the horizontal dendrogram bigger bertinCluster(bell2010, ysegs = c(0, .3, .8, 1))"},{"path":"https://docs.openrepgrid.org/reference/bind.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate the constructs of two grids. — bind","title":"Concatenate the constructs of two grids. — bind","text":".e. constructs combined form one long grid. function can used order analyze multiple grids one 'big grid' (eg. Slater, 1977, chap. 11).","code":""},{"path":"https://docs.openrepgrid.org/reference/bind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate the constructs of two grids. — bind","text":"","code":"bind(x, y, match = TRUE, index = TRUE)"},{"path":"https://docs.openrepgrid.org/reference/bind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate the constructs of two grids. — bind","text":"x repgrid object y repgrid object match elements order reordered match element order first grid 'x' (test=TRUE, default). set FALSE error occurs element order identical grids. index TODO. Logical (default TRUE). Whether add index end construct name remains clear grid construct came.","code":""},{"path":"https://docs.openrepgrid.org/reference/bind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate the constructs of two grids. — bind","text":"repgrid object","code":""},{"path":"https://docs.openrepgrid.org/reference/bind.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Concatenate the constructs of two grids. — bind","text":"Slater, P. (1977). measurement intrapersonal space grid technique. London: Wiley.","code":""},{"path":"https://docs.openrepgrid.org/reference/bind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate the constructs of two grids. — bind","text":"","code":"if (FALSE) { # \\dontrun{  a <- randomGrid() b <- randomGrid() elements(b) <- rev(elements(a)) # reverse elements bindConstructs(a, b)  bindConstructs(a, b, m = F) # no binding } # }"},{"path":"https://docs.openrepgrid.org/reference/bindConstructs.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate the constructs of two or more grids. — bindConstructs","title":"Concatenate the constructs of two or more grids. — bindConstructs","text":".e. constructs combined form one long grid. girds must set elements identical scale range. order elements may differ.","code":""},{"path":"https://docs.openrepgrid.org/reference/bindConstructs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate the constructs of two or more grids. — bindConstructs","text":"","code":"bindConstructs(..., index = FALSE)"},{"path":"https://docs.openrepgrid.org/reference/bindConstructs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate the constructs of two or more grids. — bindConstructs","text":"... One repgrid objects list containing repgrid object. index TODO. Logical (default TRUE). Whether add index end construct name remains clear grid construct came.","code":""},{"path":"https://docs.openrepgrid.org/reference/bindConstructs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate the constructs of two or more grids. — bindConstructs","text":"repgrid object concatenated constructs.","code":""},{"path":"https://docs.openrepgrid.org/reference/bindConstructs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Concatenate the constructs of two or more grids. — bindConstructs","text":"function can used order analyze multiple grids one 'big grid' (eg. Slater, 1977, chap. 11).","code":""},{"path":"https://docs.openrepgrid.org/reference/bindConstructs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Concatenate the constructs of two or more grids. — bindConstructs","text":"Slater, P. (1977). measurement intrapersonal space grid technique. London: Wiley.","code":""},{"path":"https://docs.openrepgrid.org/reference/bindConstructs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate the constructs of two or more grids. — bindConstructs","text":"","code":"a <- randomGrid() b <- randomGrid() elements(b) <- rev(elements(a)) # reverse elements bindConstructs(a, b) #>  #> META DATA: #> Number of constructs:  20  #> Number of elements:  15  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 5 (right pole) #>  #> RATINGS: #>                                    8 - the charter to by of            #>   the an without airplane back - 7 | 9 - good away                     #> onomic before has initially  - 6 | | | 10 - slipping then beyond       #>                    without - 5 | | | | | 11 - Johnson Johnson the      #> nitially who slipping he - 4 | | | | | | | 12 - is customer paying nov #> lly slipping he an man - 3 | | | | | | | | | 13 - him depicts the Harr #> rter initially Brown - 2 | | | | | | | | | | | 14 - the money an initi #>  Harry the without - 1 | | | | | | | | | | | | | 15 - beyond happened  #>                      | | | | | | | | | | | | | | |                     #> alizes blackma (1)   2 1 5 3 2 5 2 4 4 3 4 1 1 5 4   (1) airplane econ #>             as (2)   2 1 1 2 1 3 1 3 5 1 5 1 4 3 3   (2) control any t #> orced mainland (3)   4 3 4 4 3 4 2 2 2 4 1 5 2 2 1   (3) essentially m #> away away into (4)   1 3 1 4 3 4 3 1 4 1 1 5 2 3 4   (4) Mr. forced mo #> as what is awa (5)   4 2 2 2 2 2 2 5 3 4 2 5 5 3 1   (5) him he        #>            any (6)   3 2 4 4 3 2 5 2 5 3 4 1 5 1 5   (6) realizes      #> ssentially his (7)   2 5 3 2 3 1 1 1 2 2 3 5 2 2 3   (7) mainland then #> ishing without (8)   2 4 5 4 4 5 4 4 4 3 5 5 3 4 4   (8) before activi #> e owes she the (9)   4 1 5 2 5 4 3 3 2 2 3 2 1 5 5   (9) I tricks who  #> er he paying  (10)   4 4 1 5 4 1 1 1 4 2 3 2 5 2 1   (10) depicts any  #>     then back (11)   4 5 2 4 2 5 5 1 1 2 3 2 1 5 5   (11) his beyond   #> lees mainland (12)   5 5 4 2 1 4 4 3 2 2 4 3 2 2 2   (12) man him happ #> f is the esse (13)   4 4 2 4 1 3 3 4 5 4 4 4 5 5 5   (13) the has by i #>  what has the (14)   1 1 4 3 4 3 5 2 5 3 2 2 5 4 1   (14) depicts as t #>  activity Joh (15)   2 3 3 5 3 2 1 1 1 2 5 3 5 2 5   (15) back man bef #> e control man (16)   3 5 4 3 2 3 1 2 1 3 5 5 5 5 4   (16) initially    #>      customer (17)   4 4 1 2 2 5 4 1 1 3 4 1 3 1 1   (17) an economic  #>         Harry (18)   3 3 1 3 4 4 4 1 2 3 4 3 1 3 4   (18) mainland Mar #>            is (19)   5 1 2 3 3 1 3 1 1 1 2 1 3 4 2   (19) I by mainlan #> ack initially (20)   4 3 1 4 2 4 4 2 1 2 3 1 4 5 3   (20) Mr.          #>  bindConstructs(a, b, a) #>  #> META DATA: #> Number of constructs:  30  #> Number of elements:  15  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 5 (right pole) #>  #> RATINGS: #>                                    8 - the charter to by of            #>   the an without airplane back - 7 | 9 - good away                     #> onomic before has initially  - 6 | | | 10 - slipping then beyond       #>                    without - 5 | | | | | 11 - Johnson Johnson the      #> nitially who slipping he - 4 | | | | | | | 12 - is customer paying nov #> lly slipping he an man - 3 | | | | | | | | | 13 - him depicts the Harr #> rter initially Brown - 2 | | | | | | | | | | | 14 - the money an initi #>  Harry the without - 1 | | | | | | | | | | | | | 15 - beyond happened  #>                      | | | | | | | | | | | | | | |                     #> alizes blackma (1)   2 1 5 3 2 5 2 4 4 3 4 1 1 5 4   (1) airplane econ #>             as (2)   2 1 1 2 1 3 1 3 5 1 5 1 4 3 3   (2) control any t #> orced mainland (3)   4 3 4 4 3 4 2 2 2 4 1 5 2 2 1   (3) essentially m #> away away into (4)   1 3 1 4 3 4 3 1 4 1 1 5 2 3 4   (4) Mr. forced mo #> as what is awa (5)   4 2 2 2 2 2 2 5 3 4 2 5 5 3 1   (5) him he        #>            any (6)   3 2 4 4 3 2 5 2 5 3 4 1 5 1 5   (6) realizes      #> ssentially his (7)   2 5 3 2 3 1 1 1 2 2 3 5 2 2 3   (7) mainland then #> ishing without (8)   2 4 5 4 4 5 4 4 4 3 5 5 3 4 4   (8) before activi #> e owes she the (9)   4 1 5 2 5 4 3 3 2 2 3 2 1 5 5   (9) I tricks who  #> er he paying  (10)   4 4 1 5 4 1 1 1 4 2 3 2 5 2 1   (10) depicts any  #>     then back (11)   4 5 2 4 2 5 5 1 1 2 3 2 1 5 5   (11) his beyond   #> lees mainland (12)   5 5 4 2 1 4 4 3 2 2 4 3 2 2 2   (12) man him happ #> f is the esse (13)   4 4 2 4 1 3 3 4 5 4 4 4 5 5 5   (13) the has by i #>  what has the (14)   1 1 4 3 4 3 5 2 5 3 2 2 5 4 1   (14) depicts as t #>  activity Joh (15)   2 3 3 5 3 2 1 1 1 2 5 3 5 2 5   (15) back man bef #> e control man (16)   3 5 4 3 2 3 1 2 1 3 5 5 5 5 4   (16) initially    #>      customer (17)   4 4 1 2 2 5 4 1 1 3 4 1 3 1 1   (17) an economic  #>         Harry (18)   3 3 1 3 4 4 4 1 2 3 4 3 1 3 4   (18) mainland Mar #>            is (19)   5 1 2 3 3 1 3 1 1 1 2 1 3 4 2   (19) I by mainlan #> ack initially (20)   4 3 1 4 2 4 4 2 1 2 3 1 4 5 3   (20) Mr.          #> lizes blackma (21)   2 1 5 3 2 5 2 4 4 3 4 1 1 5 4   (21) airplane eco #>            as (22)   2 1 1 2 1 3 1 3 5 1 5 1 4 3 3   (22) control any  #> rced mainland (23)   4 3 4 4 3 4 2 2 2 4 1 5 2 2 1   (23) essentially  #> way away into (24)   1 3 1 4 3 4 3 1 4 1 1 5 2 3 4   (24) Mr. forced m #> s what is awa (25)   4 2 2 2 2 2 2 5 3 4 2 5 5 3 1   (25) him he       #>           any (26)   3 2 4 4 3 2 5 2 5 3 4 1 5 1 5   (26) realizes     #> sentially his (27)   2 5 3 2 3 1 1 1 2 2 3 5 2 2 3   (27) mainland the #> shing without (28)   2 4 5 4 4 5 4 4 4 3 5 5 3 4 4   (28) before activ #>  owes she the (29)   4 1 5 2 5 4 3 3 2 2 3 2 1 5 5   (29) I tricks who #> er he paying  (30)   4 4 1 5 4 1 1 1 4 2 3 2 5 2 1   (30) depicts any  #>   # using lists of repgrid objects bindConstructs(a, list(a, b)) #>  #> META DATA: #> Number of constructs:  30  #> Number of elements:  15  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 5 (right pole) #>  #> RATINGS: #>                                    8 - the charter to by of            #>   the an without airplane back - 7 | 9 - good away                     #> onomic before has initially  - 6 | | | 10 - slipping then beyond       #>                    without - 5 | | | | | 11 - Johnson Johnson the      #> nitially who slipping he - 4 | | | | | | | 12 - is customer paying nov #> lly slipping he an man - 3 | | | | | | | | | 13 - him depicts the Harr #> rter initially Brown - 2 | | | | | | | | | | | 14 - the money an initi #>  Harry the without - 1 | | | | | | | | | | | | | 15 - beyond happened  #>                      | | | | | | | | | | | | | | |                     #> alizes blackma (1)   2 1 5 3 2 5 2 4 4 3 4 1 1 5 4   (1) airplane econ #>             as (2)   2 1 1 2 1 3 1 3 5 1 5 1 4 3 3   (2) control any t #> orced mainland (3)   4 3 4 4 3 4 2 2 2 4 1 5 2 2 1   (3) essentially m #> away away into (4)   1 3 1 4 3 4 3 1 4 1 1 5 2 3 4   (4) Mr. forced mo #> as what is awa (5)   4 2 2 2 2 2 2 5 3 4 2 5 5 3 1   (5) him he        #>            any (6)   3 2 4 4 3 2 5 2 5 3 4 1 5 1 5   (6) realizes      #> ssentially his (7)   2 5 3 2 3 1 1 1 2 2 3 5 2 2 3   (7) mainland then #> ishing without (8)   2 4 5 4 4 5 4 4 4 3 5 5 3 4 4   (8) before activi #> e owes she the (9)   4 1 5 2 5 4 3 3 2 2 3 2 1 5 5   (9) I tricks who  #> er he paying  (10)   4 4 1 5 4 1 1 1 4 2 3 2 5 2 1   (10) depicts any  #> lizes blackma (11)   2 1 5 3 2 5 2 4 4 3 4 1 1 5 4   (11) airplane eco #>            as (12)   2 1 1 2 1 3 1 3 5 1 5 1 4 3 3   (12) control any  #> rced mainland (13)   4 3 4 4 3 4 2 2 2 4 1 5 2 2 1   (13) essentially  #> way away into (14)   1 3 1 4 3 4 3 1 4 1 1 5 2 3 4   (14) Mr. forced m #> s what is awa (15)   4 2 2 2 2 2 2 5 3 4 2 5 5 3 1   (15) him he       #>           any (16)   3 2 4 4 3 2 5 2 5 3 4 1 5 1 5   (16) realizes     #> sentially his (17)   2 5 3 2 3 1 1 1 2 2 3 5 2 2 3   (17) mainland the #> shing without (18)   2 4 5 4 4 5 4 4 4 3 5 5 3 4 4   (18) before activ #>  owes she the (19)   4 1 5 2 5 4 3 3 2 2 3 2 1 5 5   (19) I tricks who #> er he paying  (20)   4 4 1 5 4 1 1 1 4 2 3 2 5 2 1   (20) depicts any  #>     then back (21)   4 5 2 4 2 5 5 1 1 2 3 2 1 5 5   (21) his beyond   #> lees mainland (22)   5 5 4 2 1 4 4 3 2 2 4 3 2 2 2   (22) man him happ #> f is the esse (23)   4 4 2 4 1 3 3 4 5 4 4 4 5 5 5   (23) the has by i #>  what has the (24)   1 1 4 3 4 3 5 2 5 3 2 2 5 4 1   (24) depicts as t #>  activity Joh (25)   2 3 3 5 3 2 1 1 1 2 5 3 5 2 5   (25) back man bef #> e control man (26)   3 5 4 3 2 3 1 2 1 3 5 5 5 5 4   (26) initially    #>      customer (27)   4 4 1 2 2 5 4 1 1 3 4 1 3 1 1   (27) an economic  #>         Harry (28)   3 3 1 3 4 4 4 1 2 3 4 3 1 3 4   (28) mainland Mar #>            is (29)   5 1 2 3 3 1 3 1 1 1 2 1 3 4 2   (29) I by mainlan #> ack initially (30)   4 3 1 4 2 4 4 2 1 2 3 1 4 5 3   (30) Mr.          #>"},{"path":"https://docs.openrepgrid.org/reference/biplot2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw a two-dimensional biplot. — biplot2d","title":"Draw a two-dimensional biplot. — biplot2d","text":"biplot central way create joint plot elements constructs. Depending parameters chosen contains information distances elements constructs. Also relative values elements construct can read projection element onto construct vector. lot parameters can changed rendering different types biplots (ESA, Slater's) different looks (colors, text size). See example section get started.","code":""},{"path":"https://docs.openrepgrid.org/reference/biplot2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw a two-dimensional biplot. — biplot2d","text":"","code":"biplot2d(   x,   dim = c(1, 2),   map.dim = 3,   center = 1,   normalize = 0,   g = 0,   h = 1 - g,   col.active = NA,   col.passive = NA,   e.point.col = \"black\",   e.point.cex = 0.9,   e.label.col = \"black\",   e.label.cex = 0.7,   e.color.map = c(0.4, 1),   c.point.col = \"black\",   c.point.cex = 0,   c.label.col = \"black\",   c.label.col.left = NULL,   c.label.col.right = NULL,   c.label.cex = 0.7,   c.color.map = c(0.4, 1),   c.points.devangle = 91,   c.labels.devangle = 91,   c.points.show = TRUE,   c.labels.show = TRUE,   e.points.show = TRUE,   e.labels.show = TRUE,   inner.positioning = TRUE,   outer.positioning = TRUE,   c.labels.inside = FALSE,   c.lines = TRUE,   col.c.lines = grey(0.9),   flipaxes = c(FALSE, FALSE),   strokes.x = 0.1,   strokes.y = 0.1,   offsetting = TRUE,   offset.labels = 0,   offset.e = 1,   axis.ext = 0.1,   mai = c(0.2, 1.5, 0.2, 1.5),   rect.margins = c(0.01, 0.01),   srt = 45,   cex.pos = 0.7,   xpd = TRUE,   unity = FALSE,   unity3d = FALSE,   scale.e = 0.9,   zoom = 1,   var.show = TRUE,   var.cex = 0.7,   var.col = grey(0.1),   ... )"},{"path":"https://docs.openrepgrid.org/reference/biplot2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw a two-dimensional biplot. — biplot2d","text":"x repgrid object. dim Dimensions (.e. principal components) used biplot (default c(1,2)). map.dim Third dimension (depth) used map aesthetic attributes (default 3). center Numeric. type centering performed. 0= centering, 1= row mean centering (construct), 2= column mean centering (elements), 3= double-centering (construct element means), 4= midpoint centering rows (constructs). default 1 (row centering). normalize numeric value indicating along direction (rows, columns) normalize standard deviations. 0 = none, 1= rows, 2 = columns (default 0). g Power singular value matrix assigned left singular vectors, .e. constructs. h Power singular value matrix assigned right singular vectors, .e. elements. col.active Columns (elements) supplementary points, .e. used SVD find principal components. default use elements. col.passive Columns (elements) supplementary points, .e. used SVD projected component space afterwards. determine solution. Default NA, .e. elements set supplementary. e.point.col Color element symbols. default \"black\". Two values can entered create color ramp. values map.dim mapped onto ramp. one color color value supplied (e.g. \"black\") mapping occurs elements color irrespective value map.dim dimension. e.point.cex Size element symbols. default .9. Two values can entered create size ramp. values map.dim mapped onto ramp. one color size value supplied (e.g. .8) mapping occurs elements size irrespective value map.dim dimension. e.label.col Color element label. default \"black\". Two values can entered create color ramp. values map.dim mapped onto ramp. one color color value supplied (e.g. \"black\") mapping occurs labels color irrespective value map.dim dimension. e.label.cex Size element labels. default .7. Two values can entered create size ramp. values map.dim mapped onto ramp. one color size value supplied (e.g. .7) mapping occurs labels size irrespective value map.dim dimension. e.color.map Value range determine range color ramp defined e.color used mapping colors. Default c(.4, ,1). Usually important user. c.point.col Color construct symbols. default \"black\". Two values can entered create color ramp. values map.dim mapped onto ramp. one color color value supplied (e.g. \"black\") mapping occurs construct color irrespective value map.dim dimension. c.point.cex Size construct symbols. default .8. Two values can entered create size ramp. values map.dim mapped onto ramp. one color size value supplied (e.g. .8) mapping occurs construct size irrespective value map.dim dimension. c.label.col Color construct label. default \"black\". Two values can entered create color ramp. values map.dim mapped onto ramp. one color color value supplied (e.g. \"black\") mapping occurs labels color irrespective value map.dim dimension. c.label.col.left, c.label.col.right Explicit color values left right construct poles. NULL default. overwrite c.label.col. c.label.cex Size construct labels. default .7. Two values can entered create size ramp. values map.dim mapped onto ramp. one color size value supplied (e.g. .7) mapping occurs labels size irrespective value map.dim dimension. c.color.map Value range determine range color ramp defined c.color used mapping. Default c(.4, ,1). Usually important user. c.points.devangle deviation angle x-y plane degrees. can calculated third dimension map.dim specified. constructs depart specified degrees x-y plane printed. facilitates visual interpretation, vectors represented near current plane shown. Set value 91 (default) show vectors. c.labels.devangle deviation angle x-y plane degrees. can calculated third dimension map.dim specified. labels constructs depart specified degrees x-y plane printed. Set value 91 (default) show construct labels. c.points.show Whether constructs printed (default TRUE). FALSE suppress printing constructs. print certain constructs numeric vector can provided (e.g. c(1:10)). c.labels.show Whether construct labels printed (default TRUE). FALSE suppress printing labels. print certain construct labels numeric vector can provided (e.g. c(1:10)). e.points.show Whether elements printed (default TRUE). FALSE suppress printing elements. print certain elements numeric vector can provided (e.g. c(1:10)). e.labels.show Whether element labels printed (default TRUE). FALSE suppress printing labels. print certain element labels numeric vector can provided (e.g. c(1:10)). inner.positioning Logical. Whether calculate positions minimize overplotting elements construct labels (default isTRUE). Note positioning may slow plotting. outer.positioning Logical. Whether calculate positions minimize overplotting construct labels outer borders (default isTRUE). Note positioning may slow plotting. c.labels.inside Logical. Whether print construct labels next points. Can useful inspection plot (default FALSE). c.lines Logical. Whether construct lines center biplot surrounding box drawn (default FALSE). col.c.lines color construct lines center borders plot (default gray(.9)). flipaxes Logical vector length two. Whether x y axes reversed (default c(F,F)). strokes.x Length outer strokes x direction NDC. strokes.y Length outer strokes y direction NDC. offsetting offsetting? (TODO) offset.labels Offsetting parameter labels (TODO). offset.e offsetting parameter elements (TODO). axis.ext Axis extension factor (default .1). bigger value zoom plot. mai Margins available plotting labels inch (default c(.2, 1.5, .2, 1.5)). rect.margins Vector length two (default c(.07, .07)). Two values specifying additional horizontal vertical margin around label. srt Angle rotate construct label text. used case offsetting=FALSE. cex.pos Cex parameter used positioning labels prompted. usually changed user. xpd Logical (default TRUE). Whether extend text labels figure region. Usually needed user. unity Scale elements constructs coordinates unit scale 2D (maximum 1) printed neatly (default TRUE). unity3d Scale elements constructs coordinates unit scale 3D (maximum 1) printed neatly (default TRUE). scale.e Scaling factor element vectors. cause element points move bit center. (unity unity3d TRUE). argument visual appeal . zoom Scaling factor vectors. Can used zoom plot (default 1). var.show Show explained sum--squares biplot? (default TRUE). var.cex cex value percentages shown plot. var.col color value percentages shown plot. ... parameters passed  come.","code":""},{"path":"https://docs.openrepgrid.org/reference/biplot2d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw a two-dimensional biplot. — biplot2d","text":"construction biplot grid matrix first centered normalized according prompted options. Next, matrix decomposed singular value decomposition (SVD) $$X = UDV^T$$ biplot made two matrices $$X = GH^T$$ matrices construed basis SVD results. $$\\hat{X} = UD^gD^hV^T$$ Note grid matrix values recovered projection property given \\(g + h = 1\\)","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/biplot2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw a two-dimensional biplot. — biplot2d","text":"","code":"if (FALSE) { # \\dontrun{  biplot2d(boeker) # biplot of boeker data biplot2d(boeker, c.lines = T) # add construct lines biplot2d(boeker, center = 2) # with column centering biplot2d(boeker, center = 4) # midpoint centering biplot2d(boeker, normalize = 1) # normalization of constructs  biplot2d(boeker, dim = 2:3) # plot 2nd and 3rd dimension biplot2d(boeker, dim = c(1, 4)) # plot 1st and 4th dimension  biplot2d(boeker, g = 1, h = 1) # assign singular values to con. & elem. biplot2d(boeker, g = 1, h = 1, center = 1) # row centering (Slater) biplot2d(boeker, g = 1, h = 1, center = 4) # midpoint centering (ESA)  biplot2d(boeker, e.color = \"red\", c.color = \"blue\") # change colors biplot2d(boeker, c.color = c(\"white\", \"darkred\")) # mapped onto color range  biplot2d(boeker, unity = T) # scale con. & elem. to equal length biplot2d(boeker, unity = T, scale.e = .5) # scaling factor for element vectors  biplot2d(boeker, e.labels.show = F) # do not show element labels biplot2d(boeker, e.labels.show = c(1, 2, 4)) # show labels for elements 1, 2 and 4 biplot2d(boeker, e.points.show = c(1, 2, 4)) # only show elements 1, 2 and 4 biplot2d(boeker, c.labels.show = c(1:4)) # show constructs labels 1 to 4 biplot2d(boeker, c.labels.show = c(1:4)) # show constructs labels except 1 to 4  biplot2d(boeker, e.cex.map = 1) # change size of texts for elements biplot2d(boeker, c.cex.map = 1) # change size of texts for constructs  biplot2d(boeker, g = 1, h = 1, c.labels.inside = T) # constructs inside the plot biplot2d(boeker,   g = 1, h = 1, c.labels.inside = T, # different margins and elem. color   mai = c(0, 0, 0, 0), e.color = \"red\" )  biplot2d(boeker, strokes.x = .3, strokes.y = .05) # change length of strokes  biplot2d(boeker, flipaxes = c(T, F)) # flip x axis biplot2d(boeker, flipaxes = c(T, T)) # flip x and y axis  biplot2d(boeker, outer.positioning = F) # no positioning of con.-labels  biplot2d(boeker, c.labels.devangle = 20) # only con. within 20 degree angle } # }"},{"path":"https://docs.openrepgrid.org/reference/biplot3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw grid in rgl (3D device). — biplot3d","title":"Draw grid in rgl (3D device). — biplot3d","text":"3D biplot opens interactive 3D device can rotated zoomed using mouse. 3D device facilitates exploration grid data significant proportions sum--squares often represented beyond first two dimensions. Also, lot cases may interest explore grid space certain angle, e.g. gain optimal view onto set elements investigation (e.g. Raeithel, 1998).","code":""},{"path":"https://docs.openrepgrid.org/reference/biplot3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw grid in rgl (3D device). — biplot3d","text":"","code":"biplot3d(   x,   dim = 1:3,   labels.e = TRUE,   labels.c = TRUE,   lines.c = TRUE,   lef = 1.3,   center = 1,   normalize = 0,   g = 0,   h = 1,   col.active = NA,   col.passive = NA,   c.sphere.col = grey(0.4),   c.cex = 0.6,   c.text.col = grey(0.4),   e.sphere.col = grey(0),   e.cex = 0.6,   e.text.col = grey(0),   alpha.sphere = 0.05,   col.sphere = \"black\",   unity = FALSE,   unity3d = FALSE,   scale.e = 0.9,   zoom = 1,   ... )"},{"path":"https://docs.openrepgrid.org/reference/biplot3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw grid in rgl (3D device). — biplot3d","text":"x repgrid object. dim Dimensions display. labels.e Logical. whether element labels displayed. labels.c Logical. whether construct labels displayed. lines.c Numeric. way lines drawn construct vectors. 0 = lines, 1 = lines constructs outer frame, 2 = lines center outer frame. lef Construct lines extension factor center Numeric. type centering performed. 0= centering, 1= row mean centering (construct), 2= column mean centering (elements), 3= double-centering (construct element means), 4= midpoint centering rows (constructs). Default 1 (row centering). normalize numeric value indicating along direction (rows, columns) normalize standard deviations. 0 = none, 1= rows, 2 = columns (default 0). g Power singular value matrix assigned left singular vectors, .e. constructs. h Power singular value matrix assigned right singular vectors, .e. elements. col.active Columns (elements) supplementary points, .e. used SVD find principal components. default use elements. col.passive Columns (elements) supplementary points, .e. used SVD projected component space afterwards. determine solution. Default NA, .e. elements set supplementary. c.sphere.col Color construct spheres. c.cex Size construct text. c.text.col Color construct text. e.sphere.col Color elements. e.cex Size element labels. e.text.col Color element labels. alpha.sphere Numeric. alpha blending surrounding sphere (default\".05\"). col.sphere Color surrounding sphere (default\"black\"). unity Scale elements constructs coordinates unit scale (maximum 1) printed neatly (default TRUE). unity3d come. scale.e Scaling factor element vectors. cause element points move bit center (unity unity3d TRUE). argument visual appeal . zoom yet used. Scaling factor vectors. Can used zoom plot (default 1). ... Parameters passed .","code":""},{"path":"https://docs.openrepgrid.org/reference/biplot3d.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Draw grid in rgl (3D device). — biplot3d","text":"Raeithel, . (1998). Kooperative Modellproduktion von Professionellen und Klienten - erlauetert Beispiel des Repertory Grid. Selbstorganisation, Kooperation, Zeichenprozess: Arbeiten zu einer kulturwissenschaftlichen, anwendungsbezogenen Psychologie (pp. 209-254). Opladen: Westdeutscher Verlag.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/biplot3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw grid in rgl (3D device). — biplot3d","text":"","code":"if (FALSE) { # \\dontrun{  biplot3d(boeker) biplot3d(boeker, unity3d = T)  biplot3d(boeker,   e.sphere.col = \"red\",   c.text.col = \"blue\" ) biplot3d(boeker, e.cex = 1) biplot3d(boeker, col.sphere = \"red\")  biplot3d(boeker, g = 1, h = 1) # INGRID biplot biplot3d(boeker,   g = 1, h = 1, # ESA biplot   center = 4 ) } # }"},{"path":"https://docs.openrepgrid.org/reference/biplotDraw.html","id":null,"dir":"Reference","previous_headings":"","what":"biplotDraw is the workhorse doing the drawing of a 2D biplot. — biplotDraw","title":"biplotDraw is the workhorse doing the drawing of a 2D biplot. — biplotDraw","text":"number elements constructs differs large extent, absolute values coordinates either constructs elements much smaller greater. inherent property biplot. case necessary able read original data entries plot, axes elements constructs can scaled separately. proportional projection values stay unaffected. absolute change though. grid interpretation absolute values usually oh importance. Thus, optional argument normalize FALSE default rescales axes longest construct element vector set length 1.","code":""},{"path":"https://docs.openrepgrid.org/reference/biplotDraw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"biplotDraw is the workhorse doing the drawing of a 2D biplot. — biplotDraw","text":"","code":"biplotDraw(   x,   inner.positioning = TRUE,   outer.positioning = TRUE,   c.labels.inside = F,   flipaxes = c(F, F),   strokes.x = 0.1,   strokes.y = 0.1,   offsetting = TRUE,   offset.labels = 0,   offset.e = 1,   axis.ext = 0.1,   mai = c(0.2, 1.5, 0.2, 1.5),   rect.margins = c(0.01, 0.01),   srt = 45,   cex.pos = 0.7,   xpd = TRUE,   c.lines = TRUE,   col.c.lines = grey(0.9),   zoom = 1,   ... )"},{"path":"https://docs.openrepgrid.org/reference/biplotDraw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"biplotDraw is the workhorse doing the drawing of a 2D biplot. — biplotDraw","text":"x repgrid object. inner.positioning Logical. Whether calculate positions minimize overplotting elements construct labels (default isTRUE). Note positioning may slow plotting. outer.positioning Logical. Whether calculate positions minimize overplotting construct labels outer borders (default isTRUE). Note positioning may slow plotting. c.labels.inside Logical. Whether print construct labels next points. Can useful inspection plot (default FALSE). flipaxes Logical vector length two. Whether x y axes reversed (default c(F,F)). strokes.x Length outer strokes x direction NDC. strokes.y Length outer strokes y direction NDC. offsetting offsetting? (TODO) offset.labels Offsetting parameter labels (TODO). offset.e offsetting parameter elements (TODO). axis.ext Axis extension factor (default .1). bigger value zoom plot. mai Margins available plotting labels inch (default c(.2, 1.5, .2, 1.5)). rect.margins Vector length two (default c(.07, .07)). Two values specifying additional horizontal vertical margin around label. srt Angle rotate construct label text. used case offsetting=FALSE. cex.pos Cex parameter used positioning labels prompted. usually changed user. xpd Logical (default TRUE). Whether extend text labels figure region. Usually needed user. c.lines Logical. Whether construct lines center biplot surrounding box drawn (default FALSE). col.c.lines color construct lines center borders plot (default gray(.9)). zoom Scaling factor vectors. Can used zoom plot (default 1). ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/biplotDraw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"biplotDraw is the workhorse doing the drawing of a 2D biplot. — biplotDraw","text":"Invisible return dataframe used construction plot (useful developers).","code":""},{"path":"https://docs.openrepgrid.org/reference/biplotEsa2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an eigenstructure analysis (ESA) biplot in 2D. — biplotEsa2d","title":"Plot an eigenstructure analysis (ESA) biplot in 2D. — biplotEsa2d","text":"ESA special type biplot suggested Raeithel (e.g. 1998). uses midpoint centering default. Note eigenstructure analysis just special case biplot can also produced using biplot2d() function arguments center=4, g=1, h=1. , arguments modified ESA biplot described. see parameters can changed see biplot2d().","code":""},{"path":"https://docs.openrepgrid.org/reference/biplotEsa2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an eigenstructure analysis (ESA) biplot in 2D. — biplotEsa2d","text":"","code":"biplotEsa2d(x, center = 4, g = 1, h = 1, ...)"},{"path":"https://docs.openrepgrid.org/reference/biplotEsa2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an eigenstructure analysis (ESA) biplot in 2D. — biplotEsa2d","text":"x repgrid object. center Numeric. type centering performed. 0= centering, 1= row mean centering (construct), 2= column mean centering (elements), 3= double-centering (construct element means), 4= midpoint centering rows (constructs). Eigenstructure analysis uses midpoint centering (4). g Power singular value matrix assigned left singular vectors, .e. constructs. Eigenstructure analysis uses g=1. h Power singular value matrix assigned right singular vectors, .e. elements. Eigenstructure analysis uses h=1. ... Additional parameters passed biplot2d().","code":""},{"path":"https://docs.openrepgrid.org/reference/biplotEsa2d.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot an eigenstructure analysis (ESA) biplot in 2D. — biplotEsa2d","text":"Raeithel, . (1998). Kooperative Modellproduktion von Professionellen und Klienten. Erlaeutert Beispiel des Repertory Grid. . Raeithel (1998). Selbstorganisation, Kooperation, Zeichenprozess. Arbeiten zu einer kulturwissenschaftlichen, anwendungsbezogenen Psychologie (p. 209-254). Opladen: Westdeutscher Verlag.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/biplotEsa2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot an eigenstructure analysis (ESA) biplot in 2D. — biplotEsa2d","text":"","code":"if (FALSE) { # \\dontrun{ # See examples in [biplot2d()] as the same arguments # can used for this function. } # }"},{"path":"https://docs.openrepgrid.org/reference/biplotEsa3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw the eigenstructure analysis (ESA) biplot in rgl (3D device). — biplotEsa3d","title":"Draw the eigenstructure analysis (ESA) biplot in rgl (3D device). — biplotEsa3d","text":"3D biplot opens interactive 3D device can rotated zoomed using mouse. 3D device facilitates exploration grid data significant proportions sum--squares often represented beyond first two dimensions. Also, lot cases may interest explore grid space certain angle, e.g. gain optimal view onto set elements investigation (e.g. Raeithel, 1998). Note eigenstructure analysis just special case biplot can also produced using biplot3d() function arguments center=4, g=1, h=1.","code":""},{"path":"https://docs.openrepgrid.org/reference/biplotEsa3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw the eigenstructure analysis (ESA) biplot in rgl (3D device). — biplotEsa3d","text":"","code":"biplotEsa3d(x, center = 1, g = 1, h = 1, ...)"},{"path":"https://docs.openrepgrid.org/reference/biplotEsa3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw the eigenstructure analysis (ESA) biplot in rgl (3D device). — biplotEsa3d","text":"x repgrid object. center Numeric. type centering performed. 0= centering, 1= row mean centering (construct), 2= column mean centering (elements), 3= double-centering (construct element means), 4= midpoint centering rows (constructs). Default 4 (scale midpoint centering). g Power singular value matrix assigned left singular vectors, .e. constructs. h Power singular value matrix assigned right singular vectors, .e. elements. ... Additional arguments passed biplot3d().","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/biplotEsa3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw the eigenstructure analysis (ESA) biplot in rgl (3D device). — biplotEsa3d","text":"","code":"if (FALSE) { # \\dontrun{  biplotEsa3d(boeker) biplotEsa3d(boeker, unity3d = T)  biplotEsa3d(boeker,   e.sphere.col = \"red\",   c.text.col = \"blue\" ) biplotEsa3d(boeker, e.cex = 1) biplotEsa3d(boeker, col.sphere = \"red\") } # }"},{"path":"https://docs.openrepgrid.org/reference/biplotEsaPseudo3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an eigenstructure analysis (ESA) in 2D grid with 3D impression (pseudo 3D). — biplotEsaPseudo3d","title":"Plot an eigenstructure analysis (ESA) in 2D grid with 3D impression (pseudo 3D). — biplotEsaPseudo3d","text":"ESA special type biplot suggested Raeithel (e.g. 1998). uses midpoint centering default. Note eigenstructure analysis just special case biplot can also produced using biplot2d() function arguments center=4, g=1, h=1. , arguments modified ESA biplot described. see parameters can changed see biplot2d() biplotPseudo3d().","code":""},{"path":"https://docs.openrepgrid.org/reference/biplotEsaPseudo3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an eigenstructure analysis (ESA) in 2D grid with 3D impression (pseudo 3D). — biplotEsaPseudo3d","text":"","code":"biplotEsaPseudo3d(x, center = 4, g = 1, h = 1, ...)"},{"path":"https://docs.openrepgrid.org/reference/biplotEsaPseudo3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an eigenstructure analysis (ESA) in 2D grid with 3D impression (pseudo 3D). — biplotEsaPseudo3d","text":"x repgrid object. center Numeric. type centering performed. 0= centering, 1= row mean centering (construct), 2= column mean centering (elements), 3= double-centering (construct element means), 4= midpoint centering rows (constructs). Eigenstructure analysis uses midpoint centering (4). g Power singular value matrix assigned left singular vectors, .e. constructs. Eigenstructure analysis uses g=1. h Power singular value matrix assigned right singular vectors, .e. elements. Eigenstructure analysis uses h=1. ... Additional parameters passed biplotPseudo3d().","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/biplotEsaPseudo3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot an eigenstructure analysis (ESA) in 2D grid with 3D impression (pseudo 3D). — biplotEsaPseudo3d","text":"","code":"if (FALSE) { # \\dontrun{ # See examples in [biplotPseudo3d()] as the same arguments # can used for this function. } # }"},{"path":"https://docs.openrepgrid.org/reference/biplotPseudo3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Draws a biplot of the grid in 2D with depth impression (pseudo 3D). — biplotPseudo3d","title":"Draws a biplot of the grid in 2D with depth impression (pseudo 3D). — biplotPseudo3d","text":"version basically 2D biplot. modifies color size symbols order create 3D impression data points. function call standard biplot2d() function modified arguments. whole set arguments can used see biplot2d(). arguments special biplotPseudo3d outlined.","code":""},{"path":"https://docs.openrepgrid.org/reference/biplotPseudo3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draws a biplot of the grid in 2D with depth impression (pseudo 3D). — biplotPseudo3d","text":"","code":"biplotPseudo3d(   x,   dim = 1:2,   map.dim = 3,   e.point.col = c(\"white\", \"black\"),   e.point.cex = c(0.6, 1.2),   e.label.col = c(\"white\", \"black\"),   e.label.cex = c(0.6, 0.8),   e.color.map = c(0.4, 1),   c.point.col = c(\"white\", \"darkred\"),   c.point.cex = c(0.6, 1.2),   c.label.col = c(\"white\", \"darkred\"),   c.label.cex = c(0.6, 0.8),   c.color.map = c(0.4, 1),   ... )"},{"path":"https://docs.openrepgrid.org/reference/biplotPseudo3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draws a biplot of the grid in 2D with depth impression (pseudo 3D). — biplotPseudo3d","text":"x repgrid object. dim Dimensions (.e. principal components) used biplot (default c(1,2)). map.dim Third dimension (depth) used map aesthetic attributes (default 3). e.point.col Color(s) element symbols. Two values can entered create color ramp. values map.dim mapped onto ramp. default c(\"white\", \"black\"). one color color value supplied (e.g. \"black\") mapping occurs elements color irrespective value map.dim dimension. e.point.cex Size element symbols. Two values can entered represents lower upper size range cex values map.dim mapped onto. default c(.6, 1.2). one cex value supplied (e.g. .7) mapping occurs elements size irrespective value map.dim dimension. e.label.col Color(s) element labels. Two values can entered create color ramp. values map.dim mapped onto ramp. default c(\"white\", \"black\"). one color color value supplied (e.g. \"black\") mapping occurs element labels color irrespective value map.dim dimension. e.label.cex Size element labels. Two values can entered represents lower upper size range cex values map.dim mapped onto. default c(.6, .8). one cex value supplied (e.g. .7) mapping occurs element labels size irrespective value map.dim dimension. e.color.map Value range determine range color ramp defined e.color used mapping colors. Default c(.4, ,1). Usually important user. c.point.col Color(s) construct symbols. Two values can entered create color ramp. values map.dim mapped onto ramp. default c(\"white\", \"darkred\"). one color color value supplied (e.g. \"black\") mapping occurs elements color irrespective value map.dim dimension. c.point.cex Size construct symbols. Two values can entered represents lower upper size range cex values map.dim mapped onto. default c(.6, 1.2). one cex value supplied (e.g. .7) mapping occurs elements size irrespective value map.dim dimension. c.label.col Color(s) construct labels. Two values can entered create color ramp. values map.dim mapped onto ramp. default c(\"white\", \"black\"). one color color value supplied (e.g. \"black\") mapping occurs construct labels color irrespective value map.dim dimension. c.label.cex Size construct labels. Two values can entered represents lower upper size range cex values map.dim mapped onto. default c(.6, .9). one cex value supplied (e.g. .7) mapping occurs construct labels size irrespective value map.dim dimension. c.color.map Value range determine range color ramp defined c.color used mapping. Default c(.4, ,1). Usually important user. ... Additional parameters passed biplot2d().","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/biplotPseudo3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draws a biplot of the grid in 2D with depth impression (pseudo 3D). — biplotPseudo3d","text":"","code":"if (FALSE) { # \\dontrun{ # biplot with 3D impression biplotPseudo3d(boeker) # Slater's biplot with 3D impression biplotPseudo3d(boeker, g = 1, h = 1, center = 1)  # show 2nd and 3rd dim. and map 4th biplotPseudo3d(boeker, dim = 2:3, map.dim = 4)  # change elem. colors biplotPseudo3d(boeker, e.color = c(\"white\", \"darkgreen\")) # change con. colors biplotPseudo3d(boeker, c.color = c(\"white\", \"darkgreen\")) # change color mapping range biplotPseudo3d(boeker, c.colors.map = c(0, 1))  # set uniform con. text size biplotPseudo3d(boeker, c.cex = 1) # change text size mapping range biplotPseudo3d(boeker, c.cex = c(.4, 1.2)) } # }"},{"path":"https://docs.openrepgrid.org/reference/biplotSimple.html","id":null,"dir":"Reference","previous_headings":"","what":"A graphically unsophisticated version of a biplot. — biplotSimple","title":"A graphically unsophisticated version of a biplot. — biplotSimple","text":"draw elements constructs vectors using similar arguments biplot2d(). version quick exploration used development.","code":""},{"path":"https://docs.openrepgrid.org/reference/biplotSimple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A graphically unsophisticated version of a biplot. — biplotSimple","text":"","code":"biplotSimple(   x,   dim = 1:2,   center = 1,   normalize = 0,   g = 0,   h = 1 - g,   unity = T,   col.active = NA,   col.passive = NA,   scale.e = 0.9,   zoom = 1,   e.point.col = \"black\",   e.point.cex = 1,   e.label.col = \"black\",   e.label.cex = 0.7,   c.point.col = grey(0.6),   c.label.col = grey(0.6),   c.label.cex = 0.6,   ... )"},{"path":"https://docs.openrepgrid.org/reference/biplotSimple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A graphically unsophisticated version of a biplot. — biplotSimple","text":"x repgrid object. dim Dimensions (.e. principal components) used biplot (default c(1,2)). center Numeric. type centering performed. 0= centering, 1= row mean centering (construct), 2= column mean centering (elements), 3= double-centering (construct element means), 4= midpoint centering rows (constructs). default 1 (row centering). normalize numeric value indicating along direction (rows, columns) normalize standard deviations. 0 = none, 1= rows, 2 = columns (default 0). g Power singular value matrix assigned left singular vectors, .e. constructs. h Power singular value matrix assigned right singular vectors, .e. elements. unity Scale elements constructs coordinates unit scale 2D (maximum 1) printed neatly (default TRUE). col.active Columns (elements) supplementary points, .e. used SVD find principal components. default use elements. col.passive Columns (elements) supplementary points, .e. used SVD projected component space afterwards. determine solution. Default NA, .e. elements set supplementary. scale.e Scaling factor element vectors. cause element points move bit center. argument visual appeal . zoom Scaling factor vectors. Can used zoom plot (default 1). e.point.col Color element symbols (default \"black\". e.point.cex Size element symbol (default 1. e.label.col Color element labels (default \"black\". e.label.cex Size element labels (default .7. c.point.col Color construct lines (default grey(.6). c.label.col Color construct labels (default grey(.6). c.label.cex Size construct labels (default .6. ... Parameters passed center() normalize.","code":""},{"path":"https://docs.openrepgrid.org/reference/biplotSimple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A graphically unsophisticated version of a biplot. — biplotSimple","text":"repgrid object.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/biplotSimple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A graphically unsophisticated version of a biplot. — biplotSimple","text":"","code":"if (FALSE) { # \\dontrun{  biplotSimple(boeker) biplotSimple(boeker, unity = F)  biplotSimple(boeker, g = 1, h = 1) # INGRID biplot biplotSimple(boeker, g = 1, h = 1, center = 4) # ESA biplot  biplotSimple(boeker, zoom = .9) # zooming out biplotSimple(boeker, scale.e = .6) # scale element vectors  biplotSimple(boeker, e.point.col = \"brown\") # change colors biplotSimple(boeker,   e.point.col = \"brown\",   c.label.col = \"darkblue\" ) } # }"},{"path":"https://docs.openrepgrid.org/reference/biplotSlater2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Draws Slater's INGRID biplot in 2D. — biplotSlater2d","title":"Draws Slater's INGRID biplot in 2D. — biplotSlater2d","text":"default use row centering normalization. Note Slater's biplot just special case biplot can produced using biplot2d() function arguments center=1, g=1, h=1. arguments can used function biplot2d(). , arguments set Slater's biplot described. see parameters can changed see biplot2d().","code":""},{"path":"https://docs.openrepgrid.org/reference/biplotSlater2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draws Slater's INGRID biplot in 2D. — biplotSlater2d","text":"","code":"biplotSlater2d(x, center = 1, g = 1, h = 1, ...)"},{"path":"https://docs.openrepgrid.org/reference/biplotSlater2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draws Slater's INGRID biplot in 2D. — biplotSlater2d","text":"x repgrid object. center Numeric. type centering performed. 0= centering, 1= row mean centering (construct), 2= column mean centering (elements), 3= double-centering (construct element means), 4= midpoint centering rows (constructs). Slater's biplot uses 1 (row centering). g Power singular value matrix assigned left singular vectors, .e. constructs. h Power singular value matrix assigned right singular vectors, .e. elements. ... Additional parameters passed biplot2d().","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/biplotSlater2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draws Slater's INGRID biplot in 2D. — biplotSlater2d","text":"","code":"if (FALSE) { # \\dontrun{ # See examples in [biplot2d()] as the same arguments # can used for this function. } # }"},{"path":"https://docs.openrepgrid.org/reference/biplotSlater3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw the Slater's INGRID biplot in rgl (3D device). — biplotSlater3d","title":"Draw the Slater's INGRID biplot in rgl (3D device). — biplotSlater3d","text":"3D biplot opens interactive 3D device can rotated zoomed using mouse. 3D device facilitates exploration grid data significant proportions sum--squares often represented beyond first two dimensions. Also, lot cases may interest explore grid space certain angle, e.g. gain optimal view onto set elements investigation (e.g. Raeithel, 1998). Note Slater's biplot just special case biplot can produced using biplot3d() function arguments center=1, g=1, h=1.","code":""},{"path":"https://docs.openrepgrid.org/reference/biplotSlater3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw the Slater's INGRID biplot in rgl (3D device). — biplotSlater3d","text":"","code":"biplotSlater3d(x, center = 1, g = 1, h = 1, ...)"},{"path":"https://docs.openrepgrid.org/reference/biplotSlater3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw the Slater's INGRID biplot in rgl (3D device). — biplotSlater3d","text":"x repgrid object. center Numeric. type centering performed. 0= centering, 1= row mean centering (construct), 2= column mean centering (elements), 3= double-centering (construct element means), 4= midpoint centering rows (constructs). Default 1 (row .e. construct centering). g Power singular value matrix assigned left singular vectors, .e. constructs. h Power singular value matrix assigned right singular vectors, .e. elements. ... Additional arguments passed biplot3d.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/biplotSlater3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw the Slater's INGRID biplot in rgl (3D device). — biplotSlater3d","text":"","code":"if (FALSE) { # \\dontrun{  biplotSlater3d(boeker) biplotSlater3d(boeker, unity3d = T)  biplotSlater3d(boeker,   e.sphere.col = \"red\",   c.text.col = \"blue\" ) biplotSlater3d(boeker, e.cex = 1) biplotSlater3d(boeker, col.sphere = \"red\") } # }"},{"path":"https://docs.openrepgrid.org/reference/biplotSlaterPseudo3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Draws Slater's biplot in 2D with depth impression (pseudo 3D). — biplotSlaterPseudo3d","title":"Draws Slater's biplot in 2D with depth impression (pseudo 3D). — biplotSlaterPseudo3d","text":"default use row centering normalization. Note Slater's biplot just special case biplot can produced using biplotPseudo3d() function arguments center=1, g=1, h=1. , arguments modified Slater's biplot described. see parameters can changed see biplot2d() biplotPseudo3d().","code":""},{"path":"https://docs.openrepgrid.org/reference/biplotSlaterPseudo3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draws Slater's biplot in 2D with depth impression (pseudo 3D). — biplotSlaterPseudo3d","text":"","code":"biplotSlaterPseudo3d(x, center = 1, g = 1, h = 1, ...)"},{"path":"https://docs.openrepgrid.org/reference/biplotSlaterPseudo3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draws Slater's biplot in 2D with depth impression (pseudo 3D). — biplotSlaterPseudo3d","text":"x repgrid object. center Numeric. type centering performed. 0= centering, 1= row mean centering (construct), 2= column mean centering (elements), 3= double-centering (construct element means), 4= midpoint centering rows (constructs). Slater's biplot uses 1 (row centering). g Power singular value matrix assigned left singular vectors, .e. constructs. h Power singular value matrix assigned right singular vectors, .e. elements. ... Additional parameters passed biplotPseudo3d().","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/biplotSlaterPseudo3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draws Slater's biplot in 2D with depth impression (pseudo 3D). — biplotSlaterPseudo3d","text":"","code":"if (FALSE) { # \\dontrun{ # See examples in [biplotPseudo3d()] as the same arguments # can used for this function. } # }"},{"path":"https://docs.openrepgrid.org/reference/calcAngles.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate angles for points in first two columns. — calcAngles","title":"Calculate angles for points in first two columns. — calcAngles","text":"angles points given values first second column matrix seen origin calculated degrees.","code":""},{"path":"https://docs.openrepgrid.org/reference/calcAngles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate angles for points in first two columns. — calcAngles","text":"","code":"calcAngles(x, dim = c(1, 2), clockwise = TRUE)"},{"path":"https://docs.openrepgrid.org/reference/calcAngles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate angles for points in first two columns. — calcAngles","text":"x matrix. dim Dimensions used calculating angles. clockwise Logical. Positive angles clockwise x axis basis.","code":""},{"path":"https://docs.openrepgrid.org/reference/calcAngles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate angles for points in first two columns. — calcAngles","text":"vector. angles row point origin reference.","code":""},{"path":"https://docs.openrepgrid.org/reference/calcAngles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate angles for points in first two columns. — calcAngles","text":"","code":"if (FALSE) { # \\dontrun{ m <- matrix(rnorm(9), 3) calcAngles() } # }"},{"path":"https://docs.openrepgrid.org/reference/calcBiplotCoords.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate coordinates for biplot. — calcBiplotCoords","title":"Calculate coordinates for biplot. — calcBiplotCoords","text":"Calculate coordinates biplot.","code":""},{"path":"https://docs.openrepgrid.org/reference/calcBiplotCoords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate coordinates for biplot. — calcBiplotCoords","text":"","code":"calcBiplotCoords(x, g = 0, h = 1 - g, col.active = NA, col.passive = NA, ...)"},{"path":"https://docs.openrepgrid.org/reference/calcBiplotCoords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate coordinates for biplot. — calcBiplotCoords","text":"x repgrid object. g Power singular value matrix assigned left singular vectors, .e. constructs. h Power singular value matrix assigned right singular vectors, .e. elements. col.active Columns (elements) supplementary points, .e. used SVD find principal components. default use elements. col.passive Columns (elements) supplementary points, .e. used SVD projected component space afterwards. determine solution. Default NA, .e. elements set supplementary. ... Parameters passed center() normalize.","code":""},{"path":"https://docs.openrepgrid.org/reference/calcBiplotCoords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate coordinates for biplot. — calcBiplotCoords","text":"list.","code":""},{"path":"https://docs.openrepgrid.org/reference/calcCoordsBorders.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinates of a surrounding rectangle in direction of a given vector. — calcCoordsBorders","title":"Coordinates of a surrounding rectangle in direction of a given vector. — calcCoordsBorders","text":"arbitrary numeric vector 2D extended end borders surrounding rectangle given size. Currently vector supposed start origin c(0,0).","code":""},{"path":"https://docs.openrepgrid.org/reference/calcCoordsBorders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinates of a surrounding rectangle in direction of a given vector. — calcCoordsBorders","text":"","code":"calcCoordsBorders(x, y, xmax = 1, ymax = 1, cx = 0, cy = 0)"},{"path":"https://docs.openrepgrid.org/reference/calcCoordsBorders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinates of a surrounding rectangle in direction of a given vector. — calcCoordsBorders","text":"x numeric vector x coordinates x coordinates. y numeric vector y coordinates x coordinates. xmax maximal x value surrounding rectangle (default 1). ymax maximal y value surrounding rectangle (default 1). cx center rectangle x direction (yet supported). cy center rectangle x direction (yet supported).","code":""},{"path":"https://docs.openrepgrid.org/reference/calcCoordsBorders.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinates of a surrounding rectangle in direction of a given vector. — calcCoordsBorders","text":"dataframe containing x y coordinates extended vectors.","code":""},{"path":"https://docs.openrepgrid.org/reference/calcCoordsBorders.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinates of a surrounding rectangle in direction of a given vector. — calcCoordsBorders","text":"","code":"if (FALSE) { # \\dontrun{ calcCoordsBorders(1:10, 10:1)  x <- c(-100:0, 0:100, 100:0, 0:-100) / 10 y <- c(0:100, 100:0, -(0:100), -(100:0)) / 10 xy1 <- calcCoordsBorders(x, y) xy2 <- calcCoordsBorders(x, y, xm = 1.2, ym = 1.2) plot(xy2[, 1], xy2[, 2], type = \"n\") segments(xy1[, 1], xy1[, 2], xy2[, 1], xy2[, 2]) } # }"},{"path":"https://docs.openrepgrid.org/reference/cascade.html","id":null,"dir":"Reference","previous_headings":"","what":"make ascending and descending vector — cascade","title":"make ascending and descending vector — cascade","text":"along given length n make ascending indices reaching midpoint descend afterwards .","code":""},{"path":"https://docs.openrepgrid.org/reference/cascade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make ascending and descending vector — cascade","text":"","code":"cascade(n, type = 1)"},{"path":"https://docs.openrepgrid.org/reference/cascade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make ascending and descending vector — cascade","text":"n integer length indexes type (integer, default=1). 1 cascade index returned. 2 returns index left right side, 3 returns length left right index vector","code":""},{"path":"https://docs.openrepgrid.org/reference/cascade.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"make ascending and descending vector — cascade","text":"vector (type 1 3) list (type 2)","code":""},{"path":"https://docs.openrepgrid.org/reference/cascade.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"make ascending and descending vector — cascade","text":"","code":"if (FALSE) { # \\dontrun{ for (n in 1:10) {   print(cascade(n)) } } # }"},{"path":"https://docs.openrepgrid.org/reference/cbind.repgrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate the elements of two grids — cbind.repgrid","title":"Concatenate the elements of two grids — cbind.repgrid","text":"Concatenate elements two grids","code":""},{"path":"https://docs.openrepgrid.org/reference/cbind.repgrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate the elements of two grids — cbind.repgrid","text":"","code":"# S3 method for class 'repgrid' cbind(..., .reorder = TRUE, .unique = FALSE)"},{"path":"https://docs.openrepgrid.org/reference/cbind.repgrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate the elements of two grids — cbind.repgrid","text":"... repgrid objects list objects. .reorder TRUE (default), matches construct order y x. .unique FALSE (default), x y may common elements. FALSE, must mutually exclusive.","code":""},{"path":"https://docs.openrepgrid.org/reference/cbind.repgrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate the elements of two grids — cbind.repgrid","text":"repgrid combined elements.","code":""},{"path":"https://docs.openrepgrid.org/reference/cbind.repgrid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate the elements of two grids — cbind.repgrid","text":"","code":"x <- boeker[, 1:2] y <- boeker[, 5:7] cbind(x, y) #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  5  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                          3 - kurt                  #>           ideal self - 2 | 4 - karl                #>               self - 1 | | | 5 - george            #>                      | | | | |                     #>       balanced (1)   1 4 3 5 2   (1) get along wit #>       isolated (2)   3 6 5 4 5   (2) sociable      #> ely integrated (3)   2 2 5 3 2   (3) excluded      #>     discursive (4)   4 1 2 4 2   (4) passive       #>    open minded (5)   2 1 2 4 4   (5) indifferent   #>         dreamy (6)   4 5 4 5 4   (6) dispassionate #> cally oriented (7)   2 1 3 3 3   (7) depressed     #>        playful (8)   4 5 4 3 2   (8) serious       #> ocially minded (9)   2 1 4 5 4   (9) selfish       #>   quarrelsome (10)   5 5 5 2 5   (10) peaceful     #>      artistic (11)   5 1 3 5 3   (11) technical    #>    scientific (12)   2 1 4 4 5   (12) emotional    #>     introvert (13)   4 5 5 3 5   (13) extrovert    #>    wanderlust (14)   1 1 4 5 2   (14) home oriente #>  x / y #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  5  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                          3 - kurt                  #>           ideal self - 2 | 4 - karl                #>               self - 1 | | | 5 - george            #>                      | | | | |                     #>       balanced (1)   1 4 3 5 2   (1) get along wit #>       isolated (2)   3 6 5 4 5   (2) sociable      #> ely integrated (3)   2 2 5 3 2   (3) excluded      #>     discursive (4)   4 1 2 4 2   (4) passive       #>    open minded (5)   2 1 2 4 4   (5) indifferent   #>         dreamy (6)   4 5 4 5 4   (6) dispassionate #> cally oriented (7)   2 1 3 3 3   (7) depressed     #>        playful (8)   4 5 4 3 2   (8) serious       #> ocially minded (9)   2 1 4 5 4   (9) selfish       #>   quarrelsome (10)   5 5 5 2 5   (10) peaceful     #>      artistic (11)   5 1 3 5 3   (11) technical    #>    scientific (12)   2 1 4 4 5   (12) emotional    #>     introvert (13)   4 5 5 3 5   (13) extrovert    #>    wanderlust (14)   1 1 4 5 2   (14) home oriente #>  y_reordered <- y[sample(nrow(y)), ] cbind(x, y, y_reordered) #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  8  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                     karl - 4 5 - george                  #>                   kurt - 3 | | 6 - kurt                  #>           ideal self - 2 | | | | 7 - karl                #>               self - 1 | | | | | | 8 - george            #>                      | | | | | | | |                     #>       balanced (1)   1 4 3 5 2 3 5 2   (1) get along wit #>       isolated (2)   3 6 5 4 5 5 4 5   (2) sociable      #> ely integrated (3)   2 2 5 3 2 5 3 2   (3) excluded      #>     discursive (4)   4 1 2 4 2 2 4 2   (4) passive       #>    open minded (5)   2 1 2 4 4 2 4 4   (5) indifferent   #>         dreamy (6)   4 5 4 5 4 4 5 4   (6) dispassionate #> cally oriented (7)   2 1 3 3 3 3 3 3   (7) depressed     #>        playful (8)   4 5 4 3 2 4 3 2   (8) serious       #> ocially minded (9)   2 1 4 5 4 4 5 4   (9) selfish       #>   quarrelsome (10)   5 5 5 2 5 5 2 5   (10) peaceful     #>      artistic (11)   5 1 3 5 3 3 5 3   (11) technical    #>    scientific (12)   2 1 4 4 5 4 4 5   (12) emotional    #>     introvert (13)   4 5 5 3 5 5 3 5   (13) extrovert    #>    wanderlust (14)   1 1 4 5 2 4 5 2   (14) home oriente #>"},{"path":"https://docs.openrepgrid.org/reference/center.html","id":null,"dir":"Reference","previous_headings":"","what":"Centering of rows (constructs) and/or columns (elements). — center","title":"Centering of rows (constructs) and/or columns (elements). — center","text":"Centering rows (constructs) /columns (elements).","code":""},{"path":"https://docs.openrepgrid.org/reference/center.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Centering of rows (constructs) and/or columns (elements). — center","text":"","code":"center(x, center = 1, ...)"},{"path":"https://docs.openrepgrid.org/reference/center.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Centering of rows (constructs) and/or columns (elements). — center","text":"x repgrid object. center Numeric. type centering performed. 0= centering, 1= row mean centering (construct), 2= column mean centering (elements), 3= double-centering (construct element means), 4= midpoint centering rows (constructs). scale(default FALSE). Default 1 (row centering). ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/center.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Centering of rows (constructs) and/or columns (elements). — center","text":"matrix containing transformed values.","code":""},{"path":"https://docs.openrepgrid.org/reference/center.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Centering of rows (constructs) and/or columns (elements). — center","text":"scale midpoint centering applied row column centering can applied simultaneously. TODO: centering standard representation mode work remains unclear color values attach centered values.","code":""},{"path":"https://docs.openrepgrid.org/reference/center.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Centering of rows (constructs) and/or columns (elements). — center","text":"","code":"center(bell2010) # no centering #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>  [1,] -0.3 -0.3  1.7  0.7 -1.3  1.7  0.7 -2.3 -2.3   1.7 #>  [2,]  0.1  1.1  0.1 -0.9  1.1 -1.9  0.1  1.1 -1.9   1.1 #>  [3,]  1.6 -1.4  2.6  1.6 -0.4 -0.4 -2.4 -1.4  1.6  -1.4 #>  [4,]  0.1  1.1 -0.9  0.1  0.1 -0.9  0.1  1.1  1.1  -1.9 #>  [5,]  0.8 -1.2 -0.2  1.8 -2.2  1.8  0.8 -0.2  0.8  -2.2 #>  [6,] -0.3  1.7  0.7 -0.3 -0.3  1.7  0.7 -1.3 -0.3  -2.3 #>  [7,]  0.2 -0.8 -0.8  1.2  0.2 -1.8  0.2  1.2  0.2   0.2 #>  [8,] -0.4  0.6  0.6 -1.4 -0.4  1.6  1.6 -2.4 -0.4   0.6 #>  [9,] -0.4 -0.4  0.6  1.6 -1.4 -1.4  0.6  1.6 -0.4  -0.4 center(bell2010, rows = T) # row centering of grid #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>  [1,] -0.3 -0.3  1.7  0.7 -1.3  1.7  0.7 -2.3 -2.3   1.7 #>  [2,]  0.1  1.1  0.1 -0.9  1.1 -1.9  0.1  1.1 -1.9   1.1 #>  [3,]  1.6 -1.4  2.6  1.6 -0.4 -0.4 -2.4 -1.4  1.6  -1.4 #>  [4,]  0.1  1.1 -0.9  0.1  0.1 -0.9  0.1  1.1  1.1  -1.9 #>  [5,]  0.8 -1.2 -0.2  1.8 -2.2  1.8  0.8 -0.2  0.8  -2.2 #>  [6,] -0.3  1.7  0.7 -0.3 -0.3  1.7  0.7 -1.3 -0.3  -2.3 #>  [7,]  0.2 -0.8 -0.8  1.2  0.2 -1.8  0.2  1.2  0.2   0.2 #>  [8,] -0.4  0.6  0.6 -1.4 -0.4  1.6  1.6 -2.4 -0.4   0.6 #>  [9,] -0.4 -0.4  0.6  1.6 -1.4 -1.4  0.6  1.6 -0.4  -0.4 center(bell2010, cols = T) # column centering of grid #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>  [1,] -0.3 -0.3  1.7  0.7 -1.3  1.7  0.7 -2.3 -2.3   1.7 #>  [2,]  0.1  1.1  0.1 -0.9  1.1 -1.9  0.1  1.1 -1.9   1.1 #>  [3,]  1.6 -1.4  2.6  1.6 -0.4 -0.4 -2.4 -1.4  1.6  -1.4 #>  [4,]  0.1  1.1 -0.9  0.1  0.1 -0.9  0.1  1.1  1.1  -1.9 #>  [5,]  0.8 -1.2 -0.2  1.8 -2.2  1.8  0.8 -0.2  0.8  -2.2 #>  [6,] -0.3  1.7  0.7 -0.3 -0.3  1.7  0.7 -1.3 -0.3  -2.3 #>  [7,]  0.2 -0.8 -0.8  1.2  0.2 -1.8  0.2  1.2  0.2   0.2 #>  [8,] -0.4  0.6  0.6 -1.4 -0.4  1.6  1.6 -2.4 -0.4   0.6 #>  [9,] -0.4 -0.4  0.6  1.6 -1.4 -1.4  0.6  1.6 -0.4  -0.4 center(bell2010, rows = T, cols = T) # row and column centering #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>  [1,] -0.3 -0.3  1.7  0.7 -1.3  1.7  0.7 -2.3 -2.3   1.7 #>  [2,]  0.1  1.1  0.1 -0.9  1.1 -1.9  0.1  1.1 -1.9   1.1 #>  [3,]  1.6 -1.4  2.6  1.6 -0.4 -0.4 -2.4 -1.4  1.6  -1.4 #>  [4,]  0.1  1.1 -0.9  0.1  0.1 -0.9  0.1  1.1  1.1  -1.9 #>  [5,]  0.8 -1.2 -0.2  1.8 -2.2  1.8  0.8 -0.2  0.8  -2.2 #>  [6,] -0.3  1.7  0.7 -0.3 -0.3  1.7  0.7 -1.3 -0.3  -2.3 #>  [7,]  0.2 -0.8 -0.8  1.2  0.2 -1.8  0.2  1.2  0.2   0.2 #>  [8,] -0.4  0.6  0.6 -1.4 -0.4  1.6  1.6 -2.4 -0.4   0.6 #>  [9,] -0.4 -0.4  0.6  1.6 -1.4 -1.4  0.6  1.6 -0.4  -0.4"},{"path":"https://docs.openrepgrid.org/reference/clearRatings.html","id":null,"dir":"Reference","previous_headings":"","what":"clear ratings — clearRatings","title":"clear ratings — clearRatings","text":"set certain ratings grid NA (unknown)","code":""},{"path":"https://docs.openrepgrid.org/reference/clearRatings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clear ratings — clearRatings","text":"","code":"clearRatings(x, rows = NA, cols = NA, layer = 1)"},{"path":"https://docs.openrepgrid.org/reference/clearRatings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"clear ratings — clearRatings","text":"x repgrid object rows rows set NA cols columns set NA layer layer ratings set NA. Usually important user (default = 1).","code":""},{"path":"https://docs.openrepgrid.org/reference/clearRatings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"clear ratings — clearRatings","text":"repgrid object","code":""},{"path":"https://docs.openrepgrid.org/reference/clearRatings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"clear ratings — clearRatings","text":"","code":"if (FALSE) { # \\dontrun{  ####  TODO  #### } # }"},{"path":"https://docs.openrepgrid.org/reference/cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster analysis (of constructs or elements). — cluster","title":"Cluster analysis (of constructs or elements). — cluster","text":"cluster preliminary implementation cluster function. supports various distance measures well cluster methods. come.","code":""},{"path":"https://docs.openrepgrid.org/reference/cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster analysis (of constructs or elements). — cluster","text":"","code":"cluster(   x,   along = 0,   dmethod = \"euclidean\",   cmethod = \"ward.D\",   p = 2,   align = TRUE,   trim = NA,   main = NULL,   mar = c(4, 2, 3, 15),   cex = 0,   lab.cex = 0.8,   cex.main = 0.9,   print = TRUE,   ... )"},{"path":"https://docs.openrepgrid.org/reference/cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster analysis (of constructs or elements). — cluster","text":"x repgrid object. along Along dimension cluster. 1 = constructs , 2= elements , 0=(default). dmethod distance measure used. must one \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\" \"minkowski\". unambiguous substring can given. additional information different types type ?dist. cmethod agglomeration method used. (unambiguous abbreviation ) one \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\", \"mcquitty\", \"median\" \"centroid\". p power Minkowski distance, case \"minkowski\" used argument dmethod. align Whether constructs aligned clustering (default TRUE). , grid matrix clustered . See Details section information. trim number characters construct trimmed . NA (default), trimming done. Trimming simply saves space displaying output. main Title plot. default name indicating distance function cluster method. mar Define plot region (bottom, left, upper, right). cex Size parameter nodes. Usually needed. lab.cex Size parameter constructs right side. cex.main Size parameter plot title (default .9). print Logical. Whether print dendrogram (default TRUE). ... Additional parameters passed plotting function .dendrogram. Type ?.dendrogram information. option usually needed, except special designs needed.","code":""},{"path":"https://docs.openrepgrid.org/reference/cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster analysis (of constructs or elements). — cluster","text":"Reordered repgrid object.","code":""},{"path":"https://docs.openrepgrid.org/reference/cluster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cluster analysis (of constructs or elements). — cluster","text":"align: Aligning reverse constructs necessary yield maximal similarity constructs. first step constructs clustered including directions. second step direction construct yields smaller distances adjacent constructs preserved used final clustering. result, every construct included orientation guarantees optimal clustering. approach akin procedure used FOCUS (Jankowicz & Thomas, 1982).","code":""},{"path":"https://docs.openrepgrid.org/reference/cluster.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cluster analysis (of constructs or elements). — cluster","text":"Jankowicz, D., & Thomas, L. (1982). Algorithm Cluster Analysis Repertory Grids Human Resource Development. Personnel Review, 11(4), 15-22. doi:10.1108/eb055464.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster analysis (of constructs or elements). — cluster","text":"","code":"cluster(bell2010)  cluster(bell2010, main = \"My cluster analysis\") # new title  cluster(bell2010, type = \"t\") # different drawing style  cluster(bell2010, dmethod = \"manhattan\") # using manhattan metric  cluster(bell2010, cmethod = \"single\") # do single linkage clustering  cluster(bell2010, cex = 1, lab.cex = 1) # change appearance  cluster(bell2010, lab.cex = .7, edgePar = list(lty = 1:2, col = 2:1)) # advanced appearance changes"},{"path":"https://docs.openrepgrid.org/reference/clusterBoot.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiscale bootstrap cluster analysis. — clusterBoot","title":"Multiscale bootstrap cluster analysis. — clusterBoot","text":"p-values calculated branch cluster dendrogram indicate stability specific partition. clusterBoot yield clusters cluster() function (.e. standard hierarchical clustering) additional p-values. Two kinds p-values reported: bootstrap probabilities (BP) approximately unbiased (AU) probabilities (see Details section information).","code":""},{"path":"https://docs.openrepgrid.org/reference/clusterBoot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiscale bootstrap cluster analysis. — clusterBoot","text":"","code":"clusterBoot(   x,   along = 1,   align = TRUE,   dmethod = \"euclidean\",   cmethod = \"ward.D\",   p = 2,   nboot = 1000,   r = seq(0.8, 1.4, by = 0.1),   seed = NULL,   trim = NA,   ... )"},{"path":"https://docs.openrepgrid.org/reference/clusterBoot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiscale bootstrap cluster analysis. — clusterBoot","text":"x grid object along Along dimension cluster. 1 = constructs, 2= elements. align Whether constructs aligned clustering (default TRUE). , grid matrix clustered . See Details section information. dmethod distance measure used. must one \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\" \"minkowski\". unambiguous substring can given. additional information different types type ?dist. cmethod agglomeration method used. (unambiguous abbreviation ) one \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\", \"mcquitty\", \"median\" \"centroid\". p Power Minkowski metric. yet passed pvclust! nboot number bootstrap replications. default     1000. r numeric vector specifies relative sample sizes     bootstrap replications. original sample size \\(n\\)     bootstrap sample size \\(n'\\), defined \\(r=n'/n\\). seed Random seed bootstrapping. Can set reproducibility (see set.seed()). Usually needed. trim number characters construct trimmed . NA (default), trimming done. Trimming simply saves space displaying output. ... Arguments pass pvclust::pvclust().","code":""},{"path":"https://docs.openrepgrid.org/reference/clusterBoot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiscale bootstrap cluster analysis. — clusterBoot","text":"pvclust object returned function pvclust::pvclust()","code":""},{"path":"https://docs.openrepgrid.org/reference/clusterBoot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiscale bootstrap cluster analysis. — clusterBoot","text":"standard (hierarchical) cluster analysis question arises identified structures significant just emerged chance. last decade several methods developed test structures robustness. One line research area based resampling. idea resample rows columns data matrix build dendrogram bootstrap sample (Felsenstein, 1985). p-values indicates percentage times specific structure identified across bootstrap samples. shown p-value biased (Hillis & Bull, 1993; Zharkikh & Li, 1995). literature several methods bias correction proposed. clusterBoot method based multiscale bootstrap used derive corrected (approximately unbiased) p-values (Shimodaira, 2002, 2004). conventional bootstrap analysis size bootstrap sample identical original sample size. Multiscale bootstrap varies bootstrap sample size order infer correction formula biased p-value basis variation results different sample sizes (Suzuki & Shimodaira, 2006). align: Aligning reverse constructs necessary yield maximal similarity constructs. first step constructs clustered including directions. second step direction construct yields smaller distances adjacent constructs preserved used final clustering. result, every construct included orientation guarantees optimal clustering. approach akin procedure used FOCUS (Jankowicz & Thomas, 1982).","code":""},{"path":"https://docs.openrepgrid.org/reference/clusterBoot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multiscale bootstrap cluster analysis. — clusterBoot","text":"Felsenstein, J. (1985). Confidence Limits Phylogenies: Approach Using Bootstrap. Evolution, 39(4), 783. doi:10.2307/2408678 Hillis, D. M., & Bull, J. J. (1993). Empirical Test Bootstrapping Method Assessing Confidence Phylogenetic Analysis. Systematic Biology, 42(2), 182-192. Jankowicz, D., & Thomas, L. (1982). Algorithm Cluster Analysis Repertory Grids Human Resource Development. Personnel Review, 11(4), 15-22. doi:10.1108/eb055464. Shimodaira, H. (2002) approximately unbiased test phylogenetic tree selection. Syst, Biol., 51, 492-508. Shimodaira,H. (2004) Approximately unbiased tests regions using multistep- multiscale bootstrap resampling. Ann. Stat., 32, 2616-2614. Suzuki, R., & Shimodaira, H. (2006). Pvclust: R package assessing uncertainty hierarchical clustering. Bioinformatics, 22(12), 1540-1542. doi:10.1093/bioinformatics/btl117 Zharkikh, ., & Li, W.-H. (1995). Estimation confidence phylogeny: complete--partial bootstrap technique. Molecular Phylogenetic Evolution, 4(1), 44-63.","code":""},{"path":"https://docs.openrepgrid.org/reference/clusterBoot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiscale bootstrap cluster analysis. — clusterBoot","text":"","code":"if (FALSE) { # \\dontrun{  # pvclust must be loaded library(pvclust)  # p-values for construct dendrogram s <- clusterBoot(boeker) plot(s) pvrect(s, max.only = FALSE)  # p-values for element dendrogram s <- clusterBoot(boeker, along = 2) plot(s) pvrect(s, max.only = FALSE) } # }"},{"path":"https://docs.openrepgrid.org/reference/colorize_matrix_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Colorize matrix cell rows using crayon colors — colorize_matrix_rows","title":"Colorize matrix cell rows using crayon colors — colorize_matrix_rows","text":"Atomic matrices can wrapped crayon color codes without destroying structure alignment. Used indicate preferred poles.","code":""},{"path":"https://docs.openrepgrid.org/reference/colorize_matrix_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colorize matrix cell rows using crayon colors — colorize_matrix_rows","text":"","code":"colorize_matrix_rows(m, colors = \"white\", na.val = \"white\")"},{"path":"https://docs.openrepgrid.org/reference/colorize_matrix_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Colorize matrix cell rows using crayon colors — colorize_matrix_rows","text":"m matrix. colors crayon colors string. One black, red, green, yellow, blue, magenta, cyan, white, silver.","code":""},{"path":"https://docs.openrepgrid.org/reference/colorize_matrix_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Colorize matrix cell rows using crayon colors — colorize_matrix_rows","text":"","code":"m <- as.matrix(mtcars) colorize_matrix_rows(m, \"red\") #> Error in get(as.character(FUN), mode = \"function\", envir = envir): object 'red' of mode 'function' was not found"},{"path":"https://docs.openrepgrid.org/reference/constructCor.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate correlations between constructs. — constructCor","title":"Calculate correlations between constructs. — constructCor","text":"Different types correlations can requested: PMC, Kendall tau rank correlation, Spearman rank correlation.","code":""},{"path":"https://docs.openrepgrid.org/reference/constructCor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate correlations between constructs. — constructCor","text":"","code":"constructCor(   x,   method = c(\"pearson\", \"kendall\", \"spearman\"),   trim = 20,   index = FALSE )"},{"path":"https://docs.openrepgrid.org/reference/constructCor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate correlations between constructs. — constructCor","text":"x repgrid object. method character string indicating correlation coefficient computed. One \"pearson\" (default), \"kendall\" \"spearman\", can abbreviated. default \"pearson\". trim number characters construct trimmed (default 20). NA trimming occurs. Trimming simply saves space displaying correlation constructs long names. index Whether print number construct.","code":""},{"path":"https://docs.openrepgrid.org/reference/constructCor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate correlations between constructs. — constructCor","text":"Returns matrix construct correlations.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/constructCor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate correlations between constructs. — constructCor","text":"","code":"# three different types of correlations constructCor(mackay1992) #>  #> ############################## #> Correlation between constructs #> ############################## #>  #> Type of correlation:  pearson  #>  #>                         1    2    3    4    5    6 #> Quick - *Slow       1     0.38 0.77 0.13 0.52 0.29 #> *Satisfied - Bitter 2          0.18 0.82 0.56 0.29 #> Talkative - *Quiet  3               0.14 0.72 0.58 #> *Succesful - Loser  4                    0.64 0.47 #> Emotional - *Calm   5                         0.92 #> *Caring - Selfish   6                              constructCor(mackay1992, method = \"kendall\") #>  #> ############################## #> Correlation between constructs #> ############################## #>  #> Type of correlation:  kendall  #>  #>                         1    2    3    4    5    6 #> Quick - *Slow       1     0.38 0.77 0.00 0.46 0.15 #> *Satisfied - Bitter 2          0.08 0.40 0.54 0.15 #> Talkative - *Quiet  3               0.00 0.38 0.15 #> *Succesful - Loser  4                    0.64 0.39 #> Emotional - *Calm   5                         0.74 #> *Caring - Selfish   6                              constructCor(mackay1992, method = \"spearman\") #>  #> ############################## #> Correlation between constructs #> ############################## #>  #> Type of correlation:  spearman  #>  #>                         1    2    3    4    5    6 #> Quick - *Slow       1     0.50 0.83 0.00 0.56 0.19 #> *Satisfied - Bitter 2          0.09 0.56 0.64 0.13 #> Talkative - *Quiet  3               0.00 0.39 0.21 #> *Succesful - Loser  4                    0.69 0.49 #> Emotional - *Calm   5                         0.81 #> *Caring - Selfish   6                               # format output constructCor(mackay1992, trim = 6) #>  #> ############################## #> Correlation between constructs #> ############################## #>  #> Type of correlation:  pearson  #>  #>               1    2    3    4    5    6 #> Qui - *Sl 1     0.38 0.77 0.13 0.52 0.29 #> *Sa - Bit 2          0.18 0.82 0.56 0.29 #> Tal - *Qu 3               0.14 0.72 0.58 #> *Su - Los 4                    0.64 0.47 #> Emo - *Ca 5                         0.92 #> *Ca - Sel 6                              constructCor(mackay1992, index = TRUE, trim = 6) #>  #> ############################## #> Correlation between constructs #> ############################## #>  #> Type of correlation:  pearson  #>  #>                   1    2    3    4    5    6 #> (1) Qui - *Sl 1     0.38 0.77 0.13 0.52 0.29 #> (2) *Sa - Bit 2          0.18 0.82 0.56 0.29 #> (3) Tal - *Qu 3               0.14 0.72 0.58 #> (4) *Su - Los 4                    0.64 0.47 #> (5) Emo - *Ca 5                         0.92 #> (6) *Ca - Sel 6                               # save correlation matrix for further processing r <- constructCor(mackay1992) r #>  #> ############################## #> Correlation between constructs #> ############################## #>  #> Type of correlation:  pearson  #>  #>                         1    2    3    4    5    6 #> Quick - *Slow       1     0.38 0.77 0.13 0.52 0.29 #> *Satisfied - Bitter 2          0.18 0.82 0.56 0.29 #> Talkative - *Quiet  3               0.14 0.72 0.58 #> *Succesful - Loser  4                    0.64 0.47 #> Emotional - *Calm   5                         0.92 #> *Caring - Selfish   6                              print(r, digits = 5) #>  #> ############################## #> Correlation between constructs #> ############################## #>  #> Type of correlation:  pearson  #>  #>                            1       2       3       4       5       6 #> Quick - *Slow       1        0.37709 0.77226 0.12913 0.51682 0.28911 #> *Satisfied - Bitter 2                0.18383 0.81969 0.56239 0.28917 #> Talkative - *Quiet  3                        0.13771 0.71984 0.57656 #> *Succesful - Loser  4                                0.63623 0.47133 #> Emotional - *Calm   5                                        0.92394 #> *Caring - Selfish   6                                                 # accessing the correlation matrix r[1, 3] #> [1] 0.7722623"},{"path":"https://docs.openrepgrid.org/reference/constructD.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Somers' d for the constructs. — constructD","title":"Calculate Somers' d for the constructs. — constructD","text":"Somer's d  asymmetric association measure depends variable set dependent independent. direction dependency needs specified.","code":""},{"path":"https://docs.openrepgrid.org/reference/constructD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Somers' d for the constructs. — constructD","text":"","code":"constructD(x, dependent = \"columns\", trim = 30, index = TRUE)"},{"path":"https://docs.openrepgrid.org/reference/constructD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Somers' d for the constructs. — constructD","text":"x repgrid object. dependent string denoting direction dependency output table (d asymmetrical). Possible values \"columns\" (default) setting columns dependent, \"rows\" setting rows dependent variable \"symmetric\" symmetrical Somers' d measure (mean two directional values \"columns\" \"rows\"). trim number characters construct trimmed (default 30). NA trimming occurs. Trimming simply saves space displaying correlation constructs long names. index Whether print number construct (default TRUE).","code":""},{"path":"https://docs.openrepgrid.org/reference/constructD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Somers' d for the constructs. — constructD","text":"matrix construct correlations.","code":""},{"path":"https://docs.openrepgrid.org/reference/constructD.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate Somers' d for the constructs. — constructD","text":"","code":"Thanks to Marc Schwartz for supplying the code to calculate                Somers' d."},{"path":"https://docs.openrepgrid.org/reference/constructD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Somers' d for the constructs. — constructD","text":"Somers, R. H. (1962). New Asymmetric Measure Association Ordinal Variables. American Sociological Review, 27(6), 799-811.","code":""},{"path":"https://docs.openrepgrid.org/reference/constructD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Somers' d for the constructs. — constructD","text":"","code":"if (FALSE) { # \\dontrun{  constructD(fbb2003) # columns as dependent (default) constructD(fbb2003, \"c\") # row as dependent constructD(fbb2003, \"s\") # symmetrical index  # suppress printing d <- constructD(fbb2003, out = 0, trim = 5) d  # more digits constructD(fbb2003, dig = 3)  # add index column, no trimming constructD(fbb2003, col.index = TRUE, index = F, trim = NA) } # }"},{"path":"https://docs.openrepgrid.org/reference/constructPca.html","id":null,"dir":"Reference","previous_headings":"","what":"Principal component analysis (PCA) of inter-construct correlations. — constructPca","title":"Principal component analysis (PCA) of inter-construct correlations. — constructPca","text":"Various methods rotation methods calculation correlations available. Note number factors specified. information PCA function type ?principal.","code":""},{"path":"https://docs.openrepgrid.org/reference/constructPca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Principal component analysis (PCA) of inter-construct correlations. — constructPca","text":"","code":"constructPca(   x,   nfactors = 3,   rotate = \"varimax\",   method = \"pearson\",   trim = NA )"},{"path":"https://docs.openrepgrid.org/reference/constructPca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Principal component analysis (PCA) of inter-construct correlations. — constructPca","text":"x repgrid object. nfactors Number components extract (default 3). rotate \"none\", \"varimax\", \"promax\" \"cluster\" possible rotations (default none). method character string indicating correlation coefficient computed. One \"pearson\" (default), \"kendall\" \"spearman\", can abbreviated. default \"pearson\". trim number characters construct trimmed (default 7). NA trimming occurs. Trimming simply saves space displaying correlation constructs long names.","code":""},{"path":"https://docs.openrepgrid.org/reference/constructPca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Principal component analysis (PCA) of inter-construct correlations. — constructPca","text":"Returns object class constructPca.","code":""},{"path":"https://docs.openrepgrid.org/reference/constructPca.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Principal component analysis (PCA) of inter-construct correlations. — constructPca","text":"Fransella, F., Bell, R. & Bannister, D. (2003). Manual Repertory Grid Technique (2. Ed.). Chichester: John Wiley & Sons.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/constructPca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Principal component analysis (PCA) of inter-construct correlations. — constructPca","text":"","code":"constructPca(bell2010) #>  #> ################# #> PCA of constructs #> ################# #>  #> Number of components extracted: 3 #> Type of rotation: varimax  #>  #> Loadings: #>                                                    RC1   RC2   RC3   #> relaxed - worried & tense                          -0.26  0.14 -0.90 #> not so smart (academically) - smart (academically)  0.26 -0.87  0.01 #> dislikes sports - loves sports                      0.20  0.67 -0.10 #> not interactive - loves people                      0.06  0.09  0.98 #> not transparent - transparent                      -0.04  0.92  0.08 #> insensitive - sensitive                            -0.81  0.36  0.17 #> fearful&timid - fearless                            0.90 -0.10  0.29 #> rough - gentle                                     -0.79 -0.03 -0.49 #> accept as it is - loves to argue                    0.72  0.26  0.10 #>  #>                 RC1  RC2  RC3 #> SS loadings    2.79 2.27 2.14 #> Proportion Var 0.31 0.25 0.24 #> Cumulative Var 0.31 0.56 0.80  # data from grid manual by Fransella et al. (2003, p. 87) # note that the construct order is different constructPca(fbb2003, nfactors = 2) #> Warning: Matrix was not positive definite, smoothing was done #>  #> ################# #> PCA of constructs #> ################# #>  #> Number of components extracted: 2 #> Type of rotation: varimax  #>  #> Loadings: #>                                    RC1   RC2   #> clever - not bright                 0.98  0.13 #> disorganized - organized           -0.79 -0.40 #> listens - doesn't hear              0.95 -0.17 #> no clear view - clear view of life -0.57 -0.54 #> understands me - no understanding   0.84 -0.13 #> ambitious - no ambition             0.20  0.64 #> respected - not respected           0.93  0.09 #> distant - warm                     -0.16  0.75 #> rather aggressive - not aggressive -0.03  0.79 #>  #>                 RC1  RC2 #> SS loadings    4.47 2.13 #> Proportion Var 0.50 0.24 #> Cumulative Var 0.50 0.73  # no rotation constructPca(fbb2003, rotate = \"none\") #> Warning: Matrix was not positive definite, smoothing was done #>  #> ################# #> PCA of constructs #> ################# #>  #> Number of components extracted: 3 #> Type of rotation: none  #>  #> Loadings: #>                                    PC1   PC2   PC3   #> clever - not bright                 0.99 -0.09  0.03 #> disorganized - organized           -0.86 -0.22 -0.28 #> listens - doesn't hear              0.89 -0.37 -0.03 #> no clear view - clear view of life -0.68 -0.41  0.42 #> understands me - no understanding   0.79 -0.31  0.22 #> ambitious - no ambition             0.33  0.58 -0.68 #> respected - not respected           0.93 -0.12  0.02 #> distant - warm                      0.01  0.77  0.18 #> rather aggressive - not aggressive  0.15  0.78  0.55 #>  #>                 PC1  PC2  PC3 #> SS loadings    4.60 2.00 1.10 #> Proportion Var 0.51 0.22 0.12 #> Cumulative Var 0.51 0.73 0.86  # use a different type of correlation (Spearman) constructPca(fbb2003, method = \"spearman\") #> Warning: NaNs produced #> Warning: NaNs produced #>  #> ################# #> PCA of constructs #> ################# #>  #> Number of components extracted: 3 #> Type of rotation: varimax  #>  #> Loadings: #>                                    RC1   RC2   RC3   #> clever - not bright                 0.97 -0.02  0.21 #> disorganized - organized           -0.82 -0.47 -0.09 #> listens - doesn't hear              0.95 -0.16  0.17 #> no clear view - clear view of life -0.47 -0.23 -0.75 #> understands me - no understanding   0.82 -0.23  0.00 #> ambitious - no ambition             0.06  0.09  0.95 #> respected - not respected           0.89 -0.02  0.21 #> distant - warm                     -0.10  0.76  0.23 #> rather aggressive - not aggressive -0.04  0.97  0.01 #>  #>                 RC1  RC2  RC3 #> SS loadings    4.20 1.87 1.65 #> Proportion Var 0.47 0.21 0.18 #> Cumulative Var 0.47 0.67 0.86  # save output to object m <- constructPca(fbb2003, nfactors = 2) #> Warning: Matrix was not positive definite, smoothing was done m #>  #> ################# #> PCA of constructs #> ################# #>  #> Number of components extracted: 2 #> Type of rotation: varimax  #>  #> Loadings: #>                                    RC1   RC2   #> clever - not bright                 0.98  0.13 #> disorganized - organized           -0.79 -0.40 #> listens - doesn't hear              0.95 -0.17 #> no clear view - clear view of life -0.57 -0.54 #> understands me - no understanding   0.84 -0.13 #> ambitious - no ambition             0.20  0.64 #> respected - not respected           0.93  0.09 #> distant - warm                     -0.16  0.75 #> rather aggressive - not aggressive -0.03  0.79 #>  #>                 RC1  RC2 #> SS loadings    4.47 2.13 #> Proportion Var 0.50 0.24 #> Cumulative Var 0.50 0.73  # different printing options print(m, digits = 5) #>  #> ################# #> PCA of constructs #> ################# #>  #> Number of components extracted: 2 #> Type of rotation: varimax  #>  #> Loadings: #>                                    RC1      RC2      #> clever - not bright                 0.98491  0.13119 #> disorganized - organized           -0.79127 -0.40068 #> listens - doesn't hear              0.95289 -0.16812 #> no clear view - clear view of life -0.57148 -0.54458 #> understands me - no understanding   0.83965 -0.12645 #> ambitious - no ambition             0.19932  0.63501 #> respected - not respected           0.93351  0.08899 #> distant - warm                     -0.15730  0.75377 #> rather aggressive - not aggressive -0.02937  0.79235 #>  #>                    RC1     RC2 #> SS loadings    4.47254 2.12573 #> Proportion Var 0.49695 0.23619 #> Cumulative Var 0.49695 0.73314 print(m, cutoff = .3) #>  #> ################# #> PCA of constructs #> ################# #>  #> Number of components extracted: 2 #> Type of rotation: varimax  #>  #> Loadings: #>                                    RC1   RC2   #> clever - not bright                 0.98       #> disorganized - organized           -0.79 -0.40 #> listens - doesn't hear              0.95       #> no clear view - clear view of life -0.57 -0.54 #> understands me - no understanding   0.84       #> ambitious - no ambition                   0.64 #> respected - not respected           0.93       #> distant - warm                            0.75 #> rather aggressive - not aggressive        0.79 #>  #>                 RC1  RC2 #> SS loadings    4.47 2.13 #> Proportion Var 0.50 0.24 #> Cumulative Var 0.50 0.73"},{"path":"https://docs.openrepgrid.org/reference/constructPcaLoadings.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract loadings from PCA of constructs. — constructPcaLoadings","title":"Extract loadings from PCA of constructs. — constructPcaLoadings","text":"Extract loadings PCA constructs.","code":""},{"path":"https://docs.openrepgrid.org/reference/constructPcaLoadings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract loadings from PCA of constructs. — constructPcaLoadings","text":"","code":"constructPcaLoadings(x)"},{"path":"https://docs.openrepgrid.org/reference/constructPcaLoadings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract loadings from PCA of constructs. — constructPcaLoadings","text":"x repgrid object. object returned function constructPca().","code":""},{"path":"https://docs.openrepgrid.org/reference/constructPcaLoadings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract loadings from PCA of constructs. — constructPcaLoadings","text":"matrix containing factor loadings.","code":""},{"path":"https://docs.openrepgrid.org/reference/constructPcaLoadings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract loadings from PCA of constructs. — constructPcaLoadings","text":"","code":"p <- constructPca(bell2010) l <- constructPcaLoadings(p) l[1, ] #>        RC1        RC2        RC3  #> -0.2601269  0.1385807 -0.9003533  l[, 1] #>                          relaxed - worried & tense  #>                                        -0.26012690  #> not so smart (academically) - smart (academically)  #>                                         0.25510372  #>                     dislikes sports - loves sports  #>                                         0.19979791  #>                     not interactive - loves people  #>                                         0.05781657  #>                      not transparent - transparent  #>                                        -0.04299511  #>                            insensitive - sensitive  #>                                        -0.80601096  #>                           fearful&timid - fearless  #>                                         0.89788685  #>                                     rough - gentle  #>                                        -0.79351946  #>                   accept as it is - loves to argue  #>                                         0.72444964  l[1, 1] #> [1] -0.2601269"},{"path":"https://docs.openrepgrid.org/reference/constructRmsCor.html","id":null,"dir":"Reference","previous_headings":"","what":"Root mean square (RMS) of inter-construct correlations. — constructRmsCor","title":"Root mean square (RMS) of inter-construct correlations. — constructRmsCor","text":"RMS also known 'quadratic mean' inter-construct correlations. RMS serves simplification correlation table. reflects average relation one construct constructs. Note correlations squared calculation, RMS affected sign correlation (cf. Fransella, Bell & Bannister, 2003, p. 86).","code":""},{"path":"https://docs.openrepgrid.org/reference/constructRmsCor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Root mean square (RMS) of inter-construct correlations. — constructRmsCor","text":"","code":"constructRmsCor(x, method = \"pearson\", trim = NA)"},{"path":"https://docs.openrepgrid.org/reference/constructRmsCor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Root mean square (RMS) of inter-construct correlations. — constructRmsCor","text":"x repgrid object method character string indicating correlation coefficient computed. One \"pearson\" (default), \"kendall\" \"spearman\", can abbreviated. default \"pearson\". trim number characters construct trimmed (default NA). NA trimming occurs. Trimming simply saves space displaying correlation constructs long names.","code":""},{"path":"https://docs.openrepgrid.org/reference/constructRmsCor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Root mean square (RMS) of inter-construct correlations. — constructRmsCor","text":"dataframe RMS inter-construct correlations","code":""},{"path":"https://docs.openrepgrid.org/reference/constructRmsCor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Root mean square (RMS) of inter-construct correlations. — constructRmsCor","text":"Fransella, F., Bell, R. C., & Bannister, D. (2003). Manual Repertory Grid Technique (2. Ed.). Chichester: John Wiley & Sons.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/constructRmsCor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Root mean square (RMS) of inter-construct correlations. — constructRmsCor","text":"","code":"# data from grid manual by Fransella, Bell and Bannister constructRmsCor(fbb2003) #>  #> ########################################## #> Root-mean-square correlation of constructs #> ########################################## #>  #>                                         RMS #> (1) clever - not bright                0.66 #> (2) disorganized - organized           0.58 #> (3) listens - doesn't hear             0.61 #> (4) no clear view - clear view of life 0.46 #> (5) understands me - no understanding  0.53 #> (6) ambitious - no ambition            0.30 #> (7) respected - not respected          0.62 #> (8) distant - warm                     0.25 #> (9) rather aggressive - not aggressive 0.29 #>  #> Average of statistic 0.48  #> Standard deviation of statistic 0.15  constructRmsCor(fbb2003, trim = 20) #>  #> ########################################## #> Root-mean-square correlation of constructs #> ########################################## #>  #>                              RMS #> (1) clever - not bright     0.66 #> (2) disorganiz - organized  0.58 #> (3) listens - doesn't he    0.61 #> (4) no clear v - clear view 0.46 #> (5) understand - no underst 0.53 #> (6) ambitious - no ambitio  0.30 #> (7) respected - not respec  0.62 #> (8) distant - warm          0.25 #> (9) rather agg - not aggres 0.29 #>  #> Average of statistic 0.48  #> Standard deviation of statistic 0.15   # modify output r <- constructRmsCor(fbb2003) print(r, digits = 5) #>  #> ########################################## #> Root-mean-square correlation of constructs #> ########################################## #>  #>                                            RMS #> (1) clever - not bright                0.66354 #> (2) disorganized - organized           0.57855 #> (3) listens - doesn't hear             0.61088 #> (4) no clear view - clear view of life 0.46125 #> (5) understands me - no understanding  0.53241 #> (6) ambitious - no ambition            0.29853 #> (7) respected - not respected          0.61928 #> (8) distant - warm                     0.24817 #> (9) rather aggressive - not aggressive 0.29197 #>  #> Average of statistic 0.47829  #> Standard deviation of statistic 0.15093     # access calculation results    r[2, 1] #> [1] 0.5785465"},{"path":"https://docs.openrepgrid.org/reference/constructs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or replace construct poles — constructs","title":"Get or replace construct poles — constructs","text":"Allows get set construct poles. Replaces older functions getConstructNames, getConstructNames2, eNames deprecated.","code":""},{"path":"https://docs.openrepgrid.org/reference/constructs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or replace construct poles — constructs","text":"","code":"constructs(x, collapse = FALSE, sep = \" - \")  constructs(x, i, j) <- value  leftpoles(x)  leftpoles(x, position) <- value  rightpoles(x)  rightpoles(x, position) <- value"},{"path":"https://docs.openrepgrid.org/reference/constructs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or replace construct poles — constructs","text":"x repgrid object. collapse Return vector poles instead. sep Separator collapse = TRUE, default \" - \". , j Row column Index repgrid matrix. value Character vector construct poles names. position Index insert construct","code":""},{"path":"https://docs.openrepgrid.org/reference/constructs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get or replace construct poles — constructs","text":"","code":"# shorten object name x <- boeker  ## get construct poles constructs(x) # both left and right poles #>                leftpole                rightpole #> 1              balanced get along with conflicts #> 2              isolated                 sociable #> 3    closely integrated                 excluded #> 4            discursive                  passive #> 5           open minded              indifferent #> 6                dreamy            dispassionate #> 7  practically oriented                depressed #> 8               playful                  serious #> 9       socially minded                  selfish #> 10          quarrelsome                 peaceful #> 11             artistic                technical #> 12           scientific                emotional #> 13            introvert                extrovert #> 14           wanderlust            home oriented leftpoles(x) # left poles only #>  [1] \"balanced\"             \"isolated\"             \"closely integrated\"   #>  [4] \"discursive\"           \"open minded\"          \"dreamy\"               #>  [7] \"practically oriented\" \"playful\"              \"socially minded\"      #> [10] \"quarrelsome\"          \"artistic\"             \"scientific\"           #> [13] \"introvert\"            \"wanderlust\"           rightpoles(x) #>  [1] \"get along with conflicts\" \"sociable\"                 #>  [3] \"excluded\"                 \"passive\"                  #>  [5] \"indifferent\"              \"dispassionate\"            #>  [7] \"depressed\"                \"serious\"                  #>  [9] \"selfish\"                  \"peaceful\"                 #> [11] \"technical\"                \"emotional\"                #> [13] \"extrovert\"                \"home oriented\"            constructs(x, collapse = TRUE) #>  [1] \"balanced - get along with conflicts\" \"isolated - sociable\"                 #>  [3] \"closely integrated - excluded\"       \"discursive - passive\"                #>  [5] \"open minded - indifferent\"           \"dreamy - dispassionate\"              #>  [7] \"practically oriented - depressed\"    \"playful - serious\"                   #>  [9] \"socially minded - selfish\"           \"quarrelsome - peaceful\"              #> [11] \"artistic - technical\"                \"scientific - emotional\"              #> [13] \"introvert - extrovert\"               \"wanderlust - home oriented\"           ## replace construct poles constructs(x)[1, 1] <- \"left pole 1\" constructs(x)[1, \"leftpole\"] <- \"left pole 1\" # alternative constructs(x)[1:3, 2] <- paste(\"right pole\", 1:3) constructs(x)[1:3, \"rightpole\"] <- paste(\"right pole\", 1:3) # alternative constructs(x)[4, 1:2] <- c(\"left pole 4\", \"right pole 4\")  l <- leftpoles(x) leftpoles(x) <- sample(l) # brind poles into random order leftpoles(x)[1] <- \"new left pole 1\" # replace name of first left pole  # replace left poles of constructs 1 and 3 leftpoles(x)[c(1, 3)] <- c(\"new left pole 1\", \"new left pole 3\")"},{"path":"https://docs.openrepgrid.org/reference/convertImportObjectToRepGridObject.html","id":null,"dir":"Reference","previous_headings":"","what":"convertImportObjectToRepGridObject. — convertImportObjectToRepGridObject","title":"convertImportObjectToRepGridObject. — convertImportObjectToRepGridObject","text":"Convert returned object import function repgrid object. Works importXInternal functions (except scivesco).","code":""},{"path":"https://docs.openrepgrid.org/reference/convertImportObjectToRepGridObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convertImportObjectToRepGridObject. — convertImportObjectToRepGridObject","text":"","code":"convertImportObjectToRepGridObject(import)"},{"path":"https://docs.openrepgrid.org/reference/convertImportObjectToRepGridObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convertImportObjectToRepGridObject. — convertImportObjectToRepGridObject","text":"import List relevant entries.","code":""},{"path":"https://docs.openrepgrid.org/reference/convertScivescoImportObjectToRepGridObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the returned object from the sci:vesco import function into a repgrid object. — convertScivescoImportObjectToRepGridObject","title":"Convert the returned object from the sci:vesco import function into a repgrid object. — convertScivescoImportObjectToRepGridObject","text":"Convert returned object sci:vesco import function repgrid object.","code":""},{"path":"https://docs.openrepgrid.org/reference/convertScivescoImportObjectToRepGridObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the returned object from the sci:vesco import function into a repgrid object. — convertScivescoImportObjectToRepGridObject","text":"","code":"convertScivescoImportObjectToRepGridObject(import)"},{"path":"https://docs.openrepgrid.org/reference/convertScivescoImportObjectToRepGridObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the returned object from the sci:vesco import function into a repgrid object. — convertScivescoImportObjectToRepGridObject","text":"import List relevant entries.","code":""},{"path":"https://docs.openrepgrid.org/reference/data-bell2010.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid data from Bell (2010). — data-bell2010","title":"Grid data from Bell (2010). — data-bell2010","text":"Grid data originated (shown paper) study Haritos, Gindinis, Doan Bell (2004) element role titles. used demonstrate effects construct alignment Bell (2010, p. 46).","code":""},{"path":"https://docs.openrepgrid.org/reference/data-bell2010.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Grid data from Bell (2010). — data-bell2010","text":"Bell, R. C. (2010).\tnote aligning constructs. Personal Construct Theory Practice, 7, 43-48. Haritos, ., Gindidis, ., Doan, C., & Bell, R. C. (2004). effect element role titles construct structure content. Journal constructivist psychology, 17(3), 221-236.","code":""},{"path":"https://docs.openrepgrid.org/reference/data-bell2010.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid data from Bell (2010). — data-bell2010","text":"","code":"bell2010 #>  #> META DATA: #> Number of constructs:  9  #> Number of elements:  10  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 7 (right pole) #>  #> RATINGS: #>    A teacher you respected - 5 6 - Mother (or the person who #> on of the opposite sex t - 4 | | 7 - A person of the opposit #> ppiest person you know - 3 | | | | 8 - The most confident pe #> iend of the same sex - 2 | | | | | | 9 - A person you work w #>               self - 1 | | | | | | | | 10 - A teacher you di #>                      | | | | | | | | | |                     #>        relaxed (1)   4 4 6 5 3 6 5 2 2 6   (1) worried & ten #> (academically) (2)   6 7 6 5 7 4 6 7 4 7   (2) smart (academ #> islikes sports (3)   6 3 7 6 4 4 2 3 6 3   (3) loves sports  #> ot interactive (4)   6 7 5 6 6 5 6 7 7 4   (4) loves people  #> ot transparent (5)   6 4 5 7 3 7 6 5 6 3   (5) transparent   #>    insensitive (6)   4 6 5 4 4 6 5 3 4 2   (6) sensitive     #>  fearful&timid (7)   5 4 4 6 5 3 5 6 5 5   (7) fearless      #>          rough (8)   5 6 6 4 5 7 7 3 5 6   (8) gentle        #> ccept as it is (9)   5 5 6 7 4 4 6 7 5 5   (9) loves to argu #>"},{"path":"https://docs.openrepgrid.org/reference/data-bellmcgorry1992.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid data from Bell and McGorry (1992). — data-bellmcgorry1992","title":"Grid data from Bell and McGorry (1992). — data-bellmcgorry1992","text":"grid data set used Bell's technical report \"Using SPSS Analyse Repertory Grid Data\" (1997, p. 6). Originally, data comes study Bell McGorry (1992).","code":""},{"path":"https://docs.openrepgrid.org/reference/data-bellmcgorry1992.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Grid data from Bell and McGorry (1992). — data-bellmcgorry1992","text":"Bell, R. C. (1977). Using SPSS Analyse Repertory Grid Data. Technical Report, University Melbourne. Bell, R. C., & McGorry, P. (1992). analysis repertory grids used monitor perceptions recovering psychotic patients. . Thomson & P. Cummins (Eds.), European Perspectives Personal Construct Psychology (p. 137-150). Lincoln, UK: European Personal Construct Association.","code":""},{"path":"https://docs.openrepgrid.org/reference/data-bellmcgorry1992.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid data from Bell and McGorry (1992). — data-bellmcgorry1992","text":"","code":"bellmcgorry1992 #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  14  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 7 (right pole) #>  #> RATINGS: #>           person with diabetes - 7 8 - person with cancer            #>                 AIDS patient - 6 | | 9 - person under stress         #>             average person - 5 | | | | 10 - myself as I usually am   #>       convicted criminal - 4 | | | | | | 11 - myself as I am now     #>    psychiatric patient - 3 | | | | | | | | 12 - myself as I will be  #> n with schizophrenia - 2 | | | | | | | | | | 13 - myself as the staf #> manic depressive i - 1 | | | | | | | | | | | | 14 - my ideal self    #>                      | | | | | | | | | | | | | |                     #>           good (1)   3 5 3 7 4 2 1 1 7 1 1 1 2 1   (1)               #>     dependable (2)   4 5 4 7 3 3 1 2 7 2 1 1 3 1   (2)               #>           safe (3)   6 7 4 7 3 7 1 2 6 1 1 1 2 1   (3)               #>    clearheaded (4)   7 7 4 7 2 7 2 4 7 1 1 1 2 1   (4)               #>         stable (5)   7 7 5 7 2 7 1 4 7 2 2 1 3 1   (5)               #>    predictable (6)   7 7 5 7 6 5 4 4 7 7 7 3 7 7   (6)               #>    intelligent (7)   4 5 4 7 2 1 2 2 7 1 1 1 2 1   (7)               #>           free (8)   7 7 5 7 1 7 1 1 1 1 7 1 7 1   (8)               #>        healthy (9)   6 7 4 7 1 7 7 7 7 1 4 1 4 1   (9)               #>        honest (10)   5 5 4 7 1 1 3 4 4 1 1 1 3 1   (10)              #>      rational (11)   5 7 5 6 1 2 2 4 5 1 1 1 3 1   (11)              #>   independent (12)   5 6 5 7 1 5 3 4 5 1 1 1 2 1   (12)              #>          calm (13)   6 5 5 7 2 7 3 4 7 1 1 1 1 1   (13)              #>    understood (14)   6 7 6 7 1 7 3 4 7 3 7 1 7 1   (14)              #>"},{"path":"https://docs.openrepgrid.org/reference/data-boeker.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid data from Boeker (1996). — data-boeker","title":"Grid data from Boeker (1996). — data-boeker","text":"Grid data schizophrenic patient undergoing psychoanalytically oriented psychotherapy. data taken last stage therapy (Boeker, 1996, p. 163).","code":""},{"path":"https://docs.openrepgrid.org/reference/data-boeker.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Grid data from Boeker (1996). — data-boeker","text":"Boeker, H. (1996). reconstruction self psychotherapy chronic schizophrenia: case study Repertory Grid Technique. : Scheer, J. W., Catina, . (Eds.): Empirical Constructivism Europe - Personal Construct Approach (p. 160-167). Giessen: Psychosozial-Verlag.","code":""},{"path":"https://docs.openrepgrid.org/reference/data-boeker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid data from Boeker (1996). — data-boeker","text":"","code":"boeker #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  15  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                                    8 - martin                          #>                         george - 7 | 9 - elizabeth                     #>                         karl - 6 | | | 10 - therapist                  #>                       kurt - 5 | | | | | 11 - irene                    #>                   father - 4 | | | | | | | 12 - childhood self         #>                 mother - 3 | | | | | | | | | 13 - self before illness  #>           ideal self - 2 | | | | | | | | | | | 14 - self with delusion #>               self - 1 | | | | | | | | | | | | | 15 - self as dreamer  #>                      | | | | | | | | | | | | | | |                     #>       balanced (1)   1 4 2 2 3 5 2 5 4 2 6 2 2 3 3   (1) get along wit #>       isolated (2)   3 6 3 5 5 4 5 4 5 4 4 4 2 2 3   (2) sociable      #> ely integrated (3)   2 2 2 3 5 3 2 3 2 3 3 4 4 5 3   (3) excluded      #>     discursive (4)   4 1 3 1 2 4 2 3 3 2 3 3 3 5 4   (4) passive       #>    open minded (5)   2 1 2 1 2 4 4 2 4 2 6 3 2 2 3   (5) indifferent   #>         dreamy (6)   4 5 3 5 4 5 4 5 4 4 6 3 3 3 2   (6) dispassionate #> cally oriented (7)   2 1 3 2 3 3 3 2 2 3 2 3 3 3 3   (7) depressed     #>        playful (8)   4 5 4 3 4 3 2 3 4 4 5 3 2 4 3   (8) serious       #> ocially minded (9)   2 1 3 2 4 5 4 1 3 2 6 3 3 3 3   (9) selfish       #>   quarrelsome (10)   5 5 5 5 5 2 5 2 4 4 1 6 5 5 5   (10) peaceful     #>      artistic (11)   5 1 2 4 3 5 3 2 4 3 3 4 4 4 4   (11) technical    #>    scientific (12)   2 1 5 3 4 4 5 3 4 1 6 4 2 3 3   (12) emotional    #>     introvert (13)   4 5 4 6 5 3 5 3 5 2 5 2 2 2 3   (13) extrovert    #>    wanderlust (14)   1 1 4 2 4 5 2 5 5 3 6 1 1 2 1   (14) home oriente #>   # data is also available as Excel file path <- system.file(\"extdata\", \"boeker.xlsx\", package = \"OpenRepGrid\") x <- importExcel(path)"},{"path":"https://docs.openrepgrid.org/reference/data-fbb2003.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid data from Fransella, Bell and Bannister (2003). — data-fbb2003","title":"Grid data from Fransella, Bell and Bannister (2003). — data-fbb2003","text":"dataset used throughout book \"Manual Repertory Grid Technique\" (Fransella, Bell Bannister, 2003, p. 60).","code":""},{"path":"https://docs.openrepgrid.org/reference/data-fbb2003.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Grid data from Fransella, Bell and Bannister (2003). — data-fbb2003","text":"Fransella, F., Bell, R. & Bannister, D. (2003). Manual Repertory Grid Technique (2. Ed.). Chichester: John Wiley & Sons.","code":""},{"path":"https://docs.openrepgrid.org/reference/data-fbb2003.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid data from Fransella, Bell and Bannister (2003). — data-fbb2003","text":"","code":"fbb2003 #>  #> META DATA: #> Number of constructs:  9  #> Number of elements:  8  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 7 (right pole) #>  #> RATINGS: #>        an ethical person - 4 5 - my mother               #>           an old flame - 3 | | 6 - a rejected teacher    #>            my father - 2 | | | | 7 - as I would love to  #>               self - 1 | | | | | | 8 - a pitied person   #>                      | | | | | | | |                     #>         clever (1)   2 1 6 3 5 7 1 5   (1) not bright    #>   disorganized (2)   6 6 4 5 2 2 5 2   (2) organized     #>        listens (3)   3 1 6 3 3 7 1 4   (3) doesn't hear  #>  no clear view (4)   5 6 3 3 3 5 7 3   (4) clear view of #> understands me (5)   3 2 6 2 2 6 2 5   (5) no understand #>      ambitious (6)   6 3 5 4 7 3 3 5   (6) no ambition   #>      respected (7)   2 2 4 2 5 6 1 4   (7) not respected #>        distant (8)   3 3 7 3 5 1 6 5   (8) warm          #> her aggressive (9)   1 3 3 3 5 2 5 7   (9) not aggressiv #>"},{"path":"https://docs.openrepgrid.org/reference/data-feixas2004.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid data from Feixas and Saul (2004). — data-feixas2004","title":"Grid data from Feixas and Saul (2004). — data-feixas2004","text":"description authors: \"Teresa, 22 years old, seen second author (LAS) psychological services University Salamanca, final year studies chemical sciences. Although Teresa proves excellent student, reveals serious doubts self worth. cries frequently, great difficulty meeting others, even though boyfriend extremely supportive. Teresa anxiously hesitant accepting new job involve moving another city 600 Km away home.\" (Feixas & Saul, 2004, p. 77).","code":""},{"path":"https://docs.openrepgrid.org/reference/data-feixas2004.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Grid data from Feixas and Saul (2004). — data-feixas2004","text":"Feixas, G., & Saul, L. . (2004). Multi-Center Dilemma Project: investigation role cognitive conflicts health. Spanish Journal Psychology, 7(1), 69-78.","code":""},{"path":"https://docs.openrepgrid.org/reference/data-feixas2004.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid data from Feixas and Saul (2004). — data-feixas2004","text":"","code":"feixas2004 #>  #> META DATA: #> Number of constructs:  20  #> Number of elements:  13  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 7 (right pole) #>  #> RATINGS: #>                                  7 - Friend 2                      #>                     Friend 1 - 6 | 8 - Non-grata                   #>                  Boyfriend - 5 | | | 9 - Friend 3                  #>                  Brother - 4 | | | | | 10 - Cousin                 #>                 Father - 3 | | | | | | | 11 - Godmother            #>               Mother - 2 | | | | | | | | | 12 - Friend 4           #>           Self now - 1 | | | | | | | | | | | 13 - Ideal Self       #>                      | | | | | | | | | | | | |                     #>    Pessimistic (1)   1 1 5 2 7 3 6 2 6 4 3 2 7   (1) Optimistic    #> Self-demanding (2)   1 6 6 2 2 5 6 3 5 6 4 5 4   (2) Takes it easy #>        Fearful (3)   2 2 6 2 4 5 6 5 2 3 4 5 5   (3) Enterprising  #>  Lives to work (4)   5 1 2 2 6 6 6 1 6 7 6 6 7   (4) Works to live #> his/her wishes (5)   6 2 1 1 4 3 6 1 7 3 4 2 7   (5) Tolerant with #>        Teasing (6)   2 7 1 6 4 3 4 6 3 3 5 6 3   (6) Touchy        #> eciates others (7)   2 6 6 6 1 5 4 7 4 2 2 5 1   (7) Does not appr #>     Aggressive (8)   6 4 2 2 7 4 6 2 6 6 6 3 7   (8) Calm          #> d about others (9)   2 2 6 7 2 3 5 7 3 3 2 2 2   (9) Selfish       #>    Avaricious (10)   6 1 1 1 7 5 5 1 6 3 3 6 7   (10) Generous     #>     Sensitive (11)   1 5 7 7 1 4 5 7 1 4 3 4 1   (11) Materialisti #>        Cheeky (12)   6 6 5 4 6 6 6 1 6 5 6 5 7   (12) Respectful   #>  Hypocritical (13)   5 4 4 2 6 5 5 1 6 6 5 4 7   (13) Sincere      #>   Blackmailer (14)   3 2 2 1 5 6 6 1 6 6 6 3 7   (14) Non blackmai #> onger than is (15)   6 3 1 2 5 2 4 2 7 6 6 5 6   (15) Natural      #> er the friend (16)   6 3 3 3 6 2 1 2 4 4 6 4 7   (16) Looks after  #> on Accessible (17)   5 2 2 1 4 2 4 1 6 3 5 2 7   (17) Accessible   #>   Introverted (18)   1 2 6 2 4 5 7 5 2 6 6 5 5   (18) Extroverted  #> ressed easily (19)   1 2 6 3 6 3 7 6 1 3 3 3 6   (19) Does not get #>  good in thin (20)   6 6 4 6 1 5 2 7 6 3 3 5 1   (20) Sees only th #>"},{"path":"https://docs.openrepgrid.org/reference/data-leach2001.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre- and post therapy dataset from Leach et al. (2001). — data-leach2001","title":"Pre- and post therapy dataset from Leach et al. (2001). — data-leach2001","text":"Case described authors: \"Sarah, aged 32, referred problems depression sexual difficulties relating childhood sexual abuse. three children living male partner. age 9, brother, adult, sexually abused Sarah. attended group survivors child sexual abuse completed repertory grids prior group, immediately group 3- 6-month follow-.\" (Leach et al. 2001, p. 230).","code":""},{"path":"https://docs.openrepgrid.org/reference/data-leach2001.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pre- and post therapy dataset from Leach et al. (2001). — data-leach2001","text":"leach2001a pre-therapy, leach2001b post-therapy therapy dataset. construct elements identical.","code":""},{"path":"https://docs.openrepgrid.org/reference/data-leach2001.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pre- and post therapy dataset from Leach et al. (2001). — data-leach2001","text":"Leach, C., Freshwater, K., Aldridge, J., & Sunderland, J. (2001). Analysis repertory grids clinical practice. British Journalof Clinical Psychology, 40, 225-248.","code":""},{"path":"https://docs.openrepgrid.org/reference/data-leach2001.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pre- and post therapy dataset from Leach et al. (2001). — data-leach2001","text":"","code":"leach2001a #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  9  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 7 (right pole) #>  #> RATINGS: #>                              5 - Father                    #>           Men in general - 4 | 6 - Partner                 #>       Women in general - 3 | | | 7 - Ideal self            #>             Self now - 2 | | | | | 8 - Mother              #>         Child self - 1 | | | | | | | 9 - Abuser in childho #>                      | | | | | | | | |                     #>      assertive (1)   2 7 4 2 3 5 3 1 1   (1) not assertive #>      confident (2)   1 7 3 2 2 4 2 1 1   (2) unconfident   #> ot feel guilty (3)   1 6 4 2 1 1 1 1 1   (3) feels guilty  #>        abusive (4)   7 7 4 6 7 6 7 3 1   (4) not abusive   #>    frightening (5)   7 7 4 5 7 7 7 3 2   (5) not frighteni #>  untrustworthy (6)   7 7 6 5 7 7 7 3 1   (6) trustworthy   #>       powerful (7)   7 5 4 2 3 5 2 1 1   (7) powerless     #>     big headed (8)   7 5 4 2 6 6 4 2 1   (8) not big heade #>    independent (9)   5 6 3 2 2 4 1 3 1   (9) dependent     #>     confusing (10)   7 2 4 4 7 6 7 1 2   (10) not confusin #>        guilty (11)   7 3 4 4 7 6 7 4 1   (11) not guilty   #>          cold (12)   7 3 5 4 7 7 6 2 6   (12) shows feelin #>     masculine (13)   7 7 5 1 1 2 5 2 1   (13) feminine     #> rested in sex (14)   7 5 3 1 1 1 2 7 1   (14) not interest #>  leach2001b #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  9  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 7 (right pole) #>  #> RATINGS: #>                              5 - Father                    #>           Men in general - 4 | 6 - Partner                 #>       Women in general - 3 | | | 7 - Ideal self            #>             Self now - 2 | | | | | 8 - Mother              #>         Child self - 1 | | | | | | | 9 - Abuser in childho #>                      | | | | | | | | |                     #>      assertive (1)   4 5 5 3 6 6 2 1 1   (1) not assertive #>      confident (2)   3 6 4 3 3 5 1 1 1   (2) unconfident   #> ot feel guilty (3)   2 4 4 2 1 2 1 1 1   (3) feels guilty  #>        abusive (4)   7 5 4 4 7 7 7 3 1   (4) not abusive   #>  untrustworthy (5)   7 7 6 5 7 7 7 3 1   (5) trustworthy   #>         guilty (6)   7 7 4 4 7 7 7 5 1   (6) not guilty    #>     big headed (7)   6 6 4 4 7 5 7 4 1   (7) not big heade #>    frightening (8)   7 6 4 4 7 7 7 2 4   (8) not frighteni #>           cold (9)   5 6 6 4 7 7 7 2 5   (9) shows feeling #>      powerful (10)   6 3 3 2 3 5 1 1 1   (10) powerless    #>     confusing (11)   7 3 6 6 6 6 7 1 3   (11) not confusin #> rested in sex (12)   1 4 4 4 5 6 6 1 7   (12) interested i #>     dependent (13)   3 2 6 5 5 4 6 3 6   (13) independent  #>     masculine (14)   6 6 7 1 2 1 7 4 1   (14) feminine     #>"},{"path":"https://docs.openrepgrid.org/reference/data-mackay1992.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid data from Mackay (1992). — data-mackay1992","title":"Grid data from Mackay (1992). — data-mackay1992","text":"Data set 'Grid C' used Mackay's paper inter-element correlation (1992, p. 65).","code":""},{"path":"https://docs.openrepgrid.org/reference/data-mackay1992.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Grid data from Mackay (1992). — data-mackay1992","text":"Mackay, N. (1992). Identification, reflection, correlation: Problems bases repertory grid measures. International Journal Personal Construct Psychology, 5(1), 57-75.","code":""},{"path":"https://docs.openrepgrid.org/reference/data-mackay1992.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid data from Mackay (1992). — data-mackay1992","text":"","code":"mackay1992 #>  #> META DATA: #> Number of constructs:  6  #> Number of elements:  6  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 7 (right pole) #>  #> RATINGS: #>             Mother - 3 4 - Father               #>       Ideal self - 2 | | 5 - Spouse             #>           Self - 1 | | | | 6 - Disliked person  #>                  | | | | | |                    #>      Quick (1)   7 4 7 5 3 3   (1) *Slow        #> *Satisfied (2)   7 7 3 5 2 3   (2) Bitter       #>  Talkative (3)   6 4 6 5 5 2   (3) *Quiet       #> *Succesful (4)   6 7 2 2 3 2   (4) Loser        #>  Emotional (5)   5 6 5 4 4 1   (5) *Calm        #>    *Caring (6)   4 7 6 4 5 1   (6) Selfish      #>"},{"path":"https://docs.openrepgrid.org/reference/data-raeithel.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid data from Raeithel (1998). — data-raeithel","title":"Grid data from Raeithel (1998). — data-raeithel","text":"Grid data demonstrate use Bertin diagrams (Raeithel, 1998, p. 223). context administration unknown.","code":""},{"path":"https://docs.openrepgrid.org/reference/data-raeithel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Grid data from Raeithel (1998). — data-raeithel","text":"Raeithel, . (1998). Kooperative Modellproduktion von Professionellen und Klienten. Erlaeutert Beispiel des Repertory Grid. . Raeithel (1998). Selbstorganisation, Kooperation, Zeichenprozess. Arbeiten zu einer kulturwissenschaftlichen, anwendungsbezogenen Psychologie (p. 209-254). Opladen: Westdeutscher Verlag.","code":""},{"path":"https://docs.openrepgrid.org/reference/data-raeithel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid data from Raeithel (1998). — data-raeithel","text":"","code":"raeithel #>  #> META DATA: #> Number of constructs:  13  #> Number of elements:  13  #>  #> SCALE INFO: #> The grid is rated on a scale from -1 (left pole) to 1 (right pole) #>  #> RATINGS: #>                                        7 - Mutter                               #>                             Virus - 6  |  8 - Schwester                         #>                     Ich vorher - 5  |  |  |  9 - Partner                        #>                        Arzt - 4  |  |  |  |  |  10 - Vater                      #>                    Ideal - 3  |  |  |  |  |  |  |  11 - Neg. Person             #>             Therapeut - 2  |  |  |  |  |  |  |  |  |  12 - Ich                  #>             Freund - 1  |  |  |  |  |  |  |  |  |  |  |  13 - Freundin          #>                      |  |  |  |  |  |  |  |  |  |  |  |  |                      #>   charakterlos (1)    1  1  1  1  1 -1 -1 -1  1 -1 -1  1  1   (1) Charakter hab #> uninteressiert (2)    1  1  1  1  1  1 -1 -1  1  1 -1  1  1   (2) interessiert  #> h gehen lassen (3)    1  1  1  1  1  1 -1 -1  1 -1 -1  1  1   (3) zielstrebig   #>     unerfahren (4)    1  1  1  1  1  1 -1 -1 -1  0 -1  1  1   (4) erfahren      #>   abschaetzbar (5)   -1  1  1  1  1  1  1 -1 -1 -1 -1  1  0   (5) unberechenbar #>          mutig (6)   -1 -1 -1 -1  1  1  1  1 -1  1  1  1 -1   (6) feige         #>  leichtfuessig (7)   -1 -1 -1 -1 -1 -1  1  1 -1  1  0  1 -1   (7) schwerfaellig #>          kuehl (8)    1  1  1  0 -1 -1 -1  1  1  1  1  0 -1   (8) warmherzig    #> h eigennuetzig (9)    1  1  1  1 -1 -1 -1  0  1  1 -1 -1  0   (9) lebensbejahen #>     angepasst (10)    1 -1  1  0  1  1 -1 -1 -1 -1 -1 -1 -1   (10) unangepasst  #>         offen (11)   -1 -1 -1 -1  1  1  1 -1 -1 -1  1 -1 -1   (11) hinterhaelti #>  unvorsichtig (12)   -1 -1  1  1 -1  1  0  1 -1  1 -1  1 -1   (12) disziplinier #> undschaftlich (13)    0 -1 -1  1 -1  0  0 -1  0  1  0  0 -1   (13) vaeterlich a #>"},{"path":"https://docs.openrepgrid.org/reference/data-slater1977a.html","id":null,"dir":"Reference","previous_headings":"","what":"Drug addict's grid data set from Slater (1977, p. 32). — data-slater1977a","title":"Drug addict's grid data set from Slater (1977, p. 32). — data-slater1977a","text":"Drug addict's grid data set Slater (1977, p. 32).","code":""},{"path":"https://docs.openrepgrid.org/reference/data-slater1977a.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Drug addict's grid data set from Slater (1977, p. 32). — data-slater1977a","text":"Slater, P. (1977). measurement intrapersonal space grid technique. London: Wiley.","code":""},{"path":"https://docs.openrepgrid.org/reference/data-slater1977a.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drug addict's grid data set from Slater (1977, p. 32). — data-slater1977a","text":"","code":"slater1977a #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  9  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 5 (right pole) #>  #> RATINGS: #>                      5 - Drynomil                  #>           Cocain - 4 | 6 - Heroin                  #>       Cannabis - 3 | | | 7 - L.S.D.                #> Barbiturates - 2 | | | | | 8 - Madryx              #>    Alcohol - 1 | | | | | | | 9 - Methedrine (injec #>              | | | | | | | | |                     #>        (1)   2 2 4 1 1 4 5 2 1   (1) Makes me talk #>        (2)   3 1 2 1 1 2 1 1 2   (2) Makes me feel #>        (3)   3 1 2 1 1 2 1 1 2   (3) Makes me feel #>        (4)   3 1 2 5 5 2 5 1 5   (4) Makes me feel #>        (5)   2 1 2 1 4 2 3 1 3   (5) Gives me a wa #>        (6)   2 1 2 5 5 2 5 1 4   (6) Makes me feel #>        (7)   3 3 1 3 2 2 1 3 2   (7) Makes me imag #>        (8)   3 3 2 3 3 3 3 3 3   (8) Makes me feel #>        (9)   3 1 4 3 2 3 4 2 2   (9) Makes me do t #>       (10)   3 2 2 2 1 2 1 2 4   (10) Hepls me enj #>       (11)   3 1 1 1 3 1 1 1 3   (11) Gives me a g #>       (12)   3 5 2 1 1 5 3 5 1   (12) Makes me ten #>       (13)   2 5 2 4 3 5 3 5 4   (13) Makes me fee #>       (14)   3 3 3 2 1 3 2 3 2   (14) After taking #>"},{"path":"https://docs.openrepgrid.org/reference/data-slater1977b.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid data from Slater (1977). — data-slater1977b","title":"Grid data from Slater (1977). — data-slater1977b","text":"Grid data (ranked) seventeen year old female psychiatric patient (Slater, 1977, p. 110). depressed, anxious took cutting . data originally reported Watson (1970).","code":""},{"path":"https://docs.openrepgrid.org/reference/data-slater1977b.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Grid data from Slater (1977). — data-slater1977b","text":"Slater, P. (1977). measurement intrapersonal space grid technique. London: Wiley. Watson, J. P. (1970). relationship self-mutilating patient doctor. Psychotherapy Psychosomatics, 18(1), 67-73.","code":""},{"path":"https://docs.openrepgrid.org/reference/data-slater1977b.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid data from Slater (1977). — data-slater1977b","text":"","code":"slater1977b #>  #> META DATA: #> Number of constructs:  10  #> Number of elements:  10  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 10 (right pole) #>  #> RATINGS: #>               Being at home - 5 6 - Being in hospital            #>                 Seeing G. - 4 | | 7 - Being with my mother       #>       Being in a crowd - 3  | | | |  8 - Being with Dr. W.       #>  same thoughts for a - 2 |  | | | |  |  9 - Being with Mrs. M.   #> alk to someone and - 1 | |  | | | |  |  |  10 - Being with my fa #>                      | | |  | | | |  |  |  |                     #>                (1)   2 1  3 6 4 5  7  8 10 9   (1) Make me cut m #>                (2)   1 3  6 2 4 7  5  8 10 9   (2) Make me think #>                (3)   2 5  3 1 4 6  7 10  9 8   (3) Make me feel  #>                (4)   1 2  4 3 7 6 10  5  8 9   (4) Make me feel  #>                (5)   2 3  5 1 9 7 10  4  6 8   (5) Make me feel  #>                (6)   5 4  7 1 2 6  3  9 10 8   (6) Make me feel  #>                (7)   2 7  5 9 1 8  3  6 10 4   (7) Make me feel  #>                (8)   9 8  7 1 5 6  4  2 10 3   (8) Make me feel  #>                (9)   5 9 10 1 8 2  6  3  4 7   (9) Help me in th #>               (10)   9 8 10 1 5 6  3  4  7 2   (10) Make me feel #>"},{"path":"https://docs.openrepgrid.org/reference/decouple.html","id":null,"dir":"Reference","previous_headings":"","what":"decouple a grid — decouple","title":"decouple a grid — decouple","text":"decouple grid","code":""},{"path":"https://docs.openrepgrid.org/reference/decouple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"decouple a grid — decouple","text":"","code":"decouple(x)"},{"path":"https://docs.openrepgrid.org/reference/decouple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"decouple a grid — decouple","text":"x repgrid object","code":""},{"path":"https://docs.openrepgrid.org/reference/dim.gridlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of constructs and elements all repgrids in gridlist — dim.gridlist","title":"Number of constructs and elements all repgrids in gridlist — dim.gridlist","text":"Number constructs elements repgrids gridlist","code":""},{"path":"https://docs.openrepgrid.org/reference/dim.gridlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of constructs and elements all repgrids in gridlist — dim.gridlist","text":"","code":"# S3 method for class 'gridlist' dim(x)"},{"path":"https://docs.openrepgrid.org/reference/dim.gridlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of constructs and elements all repgrids in gridlist — dim.gridlist","text":"x gridlist object.","code":""},{"path":"https://docs.openrepgrid.org/reference/dim.gridlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of constructs and elements all repgrids in gridlist — dim.gridlist","text":"list length 2.","code":""},{"path":"https://docs.openrepgrid.org/reference/dim.gridlist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Number of constructs and elements all repgrids in gridlist — dim.gridlist","text":"nrow ncol also covered approach access dim method. others generic making introduces warnings, try avoid.","code":""},{"path":"https://docs.openrepgrid.org/reference/dim.repgrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Return size of a grid. — dim.repgrid","title":"Return size of a grid. — dim.repgrid","text":"dim returns numeric vector length two containing number constructs elements.","code":""},{"path":"https://docs.openrepgrid.org/reference/dim.repgrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return size of a grid. — dim.repgrid","text":"","code":"# S3 method for class 'repgrid' dim(x)"},{"path":"https://docs.openrepgrid.org/reference/dim.repgrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return size of a grid. — dim.repgrid","text":"x repgrid object.","code":""},{"path":"https://docs.openrepgrid.org/reference/dim.repgrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return size of a grid. — dim.repgrid","text":"Numeric vector length two number constructs elements.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/dim.repgrid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return size of a grid. — dim.repgrid","text":"","code":"if (FALSE) { # \\dontrun{  dim(bell2010) } # }"},{"path":"https://docs.openrepgrid.org/reference/dist_minmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate minimal and maximal possible distance — dist_minmax","title":"Calculate minimal and maximal possible distance — dist_minmax","text":"minimal distance usually zero, maximal distance can used normalize arbitrary distances.","code":""},{"path":"https://docs.openrepgrid.org/reference/dist_minmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate minimal and maximal possible distance — dist_minmax","text":"","code":"dist_minmax(x, along = 1, dmethod = \"euclidean\", p = 2, max.only = FALSE)"},{"path":"https://docs.openrepgrid.org/reference/distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance measures (between constructs or elements). — distance","title":"Distance measures (between constructs or elements). — distance","text":"Various distance measures elements constructs calculated.","code":""},{"path":"https://docs.openrepgrid.org/reference/distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance measures (between constructs or elements). — distance","text":"","code":"distance(   x,   along = 1,   dmethod = \"euclidean\",   p = 2,   normalize = FALSE,   trim = 20,   index = TRUE,   ... )"},{"path":"https://docs.openrepgrid.org/reference/distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance measures (between constructs or elements). — distance","text":"x repgrid object. along Whether calculate distance 1 = constructs (default) 2= elements. dmethod distance measure used. must one \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\" \"minkowski\". unambiguous substring can given. additional information different types type ?dist. p power Minkowski distance, case \"minkowski\" used argument dmethod. normalize Use normalized distances. distances divided highest possible value given rating scale fo grid, distances interval [0,1]. trim number characters construct element trimmed (default 20). NA trimming occurs. Trimming simply saves space displaying correlation constructs long names. index Whether print number construct element front name (default TRUE). useful avoid identical row names, may cause error. ... Additional parameters passed function dist. Type dist information.","code":""},{"path":"https://docs.openrepgrid.org/reference/distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance measures (between constructs or elements). — distance","text":"matrix object.","code":""},{"path":"https://docs.openrepgrid.org/reference/distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance measures (between constructs or elements). — distance","text":"","code":"# between constructs distance(bell2010, along = 1) #>  #> ############################ #> Distances between constructs #> ############################ #>  #> Distance method:  euclidean #> Normalized: FALSE #>                                  1    2    3    4    5    6    7    8    9 #> (1) relaxed - worried &     1      8.00 6.86 8.94 6.71 5.29 6.71 5.00 6.86 #> (2) not so sma - smart (aca 2           8.89 4.69 7.94 7.87 5.20 5.92 4.80 #> (3) dislikes s - loves spor 3                7.68 6.00 6.24 6.00 7.75 6.63 #> (4) not intera - loves peop 4                     5.39 6.63 4.80 6.08 4.12 #> (5) not transp - transparen 5                          5.39 5.48 5.83 4.69 #> (6) insensitiv - sensitive  6                               6.24 5.00 6.56 #> (7) fearful&ti - fearless   7                                    6.48 3.16 #> (8) rough - gentle          8                                         6.16 #> (9) accept as  - loves to a 9                                              #>  distance(bell2010, along = 1, normalize = TRUE) #>  #> ############################ #> Distances between constructs #> ############################ #>  #> Distance method:  euclidean #> Normalized: TRUE #>                                  1    2    3    4    5    6    7    8    9 #> (1) relaxed - worried &     1      0.42 0.36 0.47 0.35 0.28 0.35 0.26 0.36 #> (2) not so sma - smart (aca 2           0.47 0.25 0.42 0.41 0.27 0.31 0.25 #> (3) dislikes s - loves spor 3                0.40 0.32 0.33 0.32 0.41 0.35 #> (4) not intera - loves peop 4                     0.28 0.35 0.25 0.32 0.22 #> (5) not transp - transparen 5                          0.28 0.29 0.31 0.25 #> (6) insensitiv - sensitive  6                               0.33 0.26 0.35 #> (7) fearful&ti - fearless   7                                    0.34 0.17 #> (8) rough - gentle          8                                         0.32 #> (9) accept as  - loves to a 9                                              #>   # between elements distance(bell2010, along = 2) #>  #> ########################## #> Distances between elements #> ########################## #>  #> Distance method:  euclidean #> Normalized: FALSE #>                                 1    2    3    4    5    6    7    8    9   10 #> (1) self                   1      4.58 3.32 3.00 4.00 5.20 4.80 5.10 3.00 5.66 #> (2) closest friend of th   2           5.29 6.32 3.32 5.48 3.46 5.57 5.66 5.57 #> (3) the unhappiest perso   3                4.24 5.57 4.90 5.48 7.42 5.48 5.74 #> (4) A person of the oppo   4                     6.24 6.16 5.48 5.39 4.24 6.86 #> (5) A teacher you respec   5                          6.86 5.20 4.69 5.00 4.47 #> (6) Mother (or the perso   6                               4.47 8.77 6.16 7.00 #> (7) A person of the oppo   7                                    5.92 6.00 5.20 #> (8) The most confident p   8                                         5.39 6.63 #> (9) A person you work we   9                                              7.55 #> (10) A teacher you did no 10                                                   #>   # several distance methods distance(bell2010, dm = \"man\") # manhattan distance #>  #> ############################ #> Distances between constructs #> ############################ #>  #> Distance method:  manhattan #> Normalized: FALSE #>                                   1     2     3     4     5     6     7     8 #> (1) relaxed - worried &     1       20.00 19.00 24.00 17.00 12.00 17.00 13.00 #> (2) not so sma - smart (aca 2             23.00 10.00 21.00 20.00 15.00 15.00 #> (3) dislikes s - loves spor 3                   19.00 14.00 17.00 16.00 20.00 #> (4) not intera - loves peop 4                         13.00 18.00 13.00 17.00 #> (5) not transp - transparen 5                               15.00 14.00 16.00 #> (6) insensitiv - sensitive  6                                     17.00 11.00 #> (7) fearful&ti - fearless   7                                           16.00 #> (8) rough - gentle          8                                                 #> (9) accept as  - loves to a 9                                                 #>                                 9 #> (1) relaxed - worried &     17.00 #> (2) not so sma - smart (aca 11.00 #> (3) dislikes s - loves spor 16.00 #> (4) not intera - loves peop 11.00 #> (5) not transp - transparen 12.00 #> (6) insensitiv - sensitive  17.00 #> (7) fearful&ti - fearless    8.00 #> (8) rough - gentle          14.00 #> (9) accept as  - loves to a       #>  distance(bell2010, dm = \"mink\", p = 3) # minkowski metric to the power of 3 #>  #> ############################ #> Distances between constructs #> ############################ #>  #> Distance method:  minkowski #> Power p: 3 #> Normalized: FALSE #>                                  1    2    3    4    5    6    7    8    9 #> (1) relaxed - worried &     1      6.23 5.18 6.87 5.16 4.38 5.16 3.80 5.57 #> (2) not so sma - smart (aca 2           6.64 3.87 5.92 6.18 3.85 4.72 3.76 #> (3) dislikes s - loves spor 3                5.95 4.79 4.56 4.55 6.02 5.29 #> (4) not intera - loves peop 4                     4.18 5.01 3.66 4.66 3.07 #> (5) not transp - transparen 5                          3.98 4.41 4.34 3.63 #> (6) insensitiv - sensitive  6                               4.66 4.25 5.08 #> (7) fearful&ti - fearless   7                                    4.99 2.41 #> (8) rough - gentle          8                                         4.96 #> (9) accept as  - loves to a 9                                              #>   # to save the results without printing to the console d <- distance(bell2010, trim = 7) d #>  #> ############################ #> Distances between constructs #> ############################ #>  #> Distance method:  euclidean #> Normalized: FALSE #>                      1    2    3    4    5    6    7    8    9 #> (1) rela - worr 1      8.00 6.86 8.94 6.71 5.29 6.71 5.00 6.86 #> (2) not  - smar 2           8.89 4.69 7.94 7.87 5.20 5.92 4.80 #> (3) disl - love 3                7.68 6.00 6.24 6.00 7.75 6.63 #> (4) not  - love 4                     5.39 6.63 4.80 6.08 4.12 #> (5) not  - tran 5                          5.39 5.48 5.83 4.69 #> (6) inse - sens 6                               6.24 5.00 6.56 #> (7) fear - fear 7                                    6.48 3.16 #> (8) roug - gent 8                                         6.16 #> (9) acce - love 9                                              #>   # some more options when printing the distance matrix print(d, digits = 5) #>  #> ############################ #> Distances between constructs #> ############################ #>  #> Distance method:  euclidean #> Normalized: FALSE #>                         1       2       3       4       5       6       7 #> (1) rela - worr 1         8.00000 6.85565 8.94427 6.70820 5.29150 6.70820 #> (2) not  - smar 2                 8.88819 4.69042 7.93725 7.87401 5.19615 #> (3) disl - love 3                         7.68115 6.00000 6.24500 6.00000 #> (4) not  - love 4                                 5.38516 6.63325 4.79583 #> (5) not  - tran 5                                         5.38516 5.47723 #> (6) inse - sens 6                                                 6.24500 #> (7) fear - fear 7                                                         #> (8) roug - gent 8                                                         #> (9) acce - love 9                                                         #>                       8       9 #> (1) rela - worr 5.00000 6.85565 #> (2) not  - smar 5.91608 4.79583 #> (3) disl - love 7.74597 6.63325 #> (4) not  - love 6.08276 4.12311 #> (5) not  - tran 5.83095 4.69042 #> (6) inse - sens 5.00000 6.55744 #> (7) fear - fear 6.48074 3.16228 #> (8) roug - gent         6.16441 #> (9) acce - love                 #>  print(d, col.index = FALSE) #>  #> ############################ #> Distances between constructs #> ############################ #>  #> Distance method:  euclidean #> Normalized: FALSE #>                    1    2    3    4    5    6    7    8    9 #> (1) rela - worr      8.00 6.86 8.94 6.71 5.29 6.71 5.00 6.86 #> (2) not  - smar           8.89 4.69 7.94 7.87 5.20 5.92 4.80 #> (3) disl - love                7.68 6.00 6.24 6.00 7.75 6.63 #> (4) not  - love                     5.39 6.63 4.80 6.08 4.12 #> (5) not  - tran                          5.39 5.48 5.83 4.69 #> (6) inse - sens                               6.24 5.00 6.56 #> (7) fear - fear                                    6.48 3.16 #> (8) roug - gent                                         6.16 #> (9) acce - love                                              #>  print(d, upper = FALSE) #>  #> ############################ #> Distances between constructs #> ############################ #>  #> Distance method:  euclidean #> Normalized: FALSE #>                      1    2    3    4    5    6    7    8    9 #> (1) rela - worr 1 0.00 8.00 6.86 8.94 6.71 5.29 6.71 5.00 6.86 #> (2) not  - smar 2 8.00 0.00 8.89 4.69 7.94 7.87 5.20 5.92 4.80 #> (3) disl - love 3 6.86 8.89 0.00 7.68 6.00 6.24 6.00 7.75 6.63 #> (4) not  - love 4 8.94 4.69 7.68 0.00 5.39 6.63 4.80 6.08 4.12 #> (5) not  - tran 5 6.71 7.94 6.00 5.39 0.00 5.39 5.48 5.83 4.69 #> (6) inse - sens 6 5.29 7.87 6.24 6.63 5.39 0.00 6.24 5.00 6.56 #> (7) fear - fear 7 6.71 5.20 6.00 4.80 5.48 6.24 0.00 6.48 3.16 #> (8) roug - gent 8 5.00 5.92 7.75 6.08 5.83 5.00 6.48 0.00 6.16 #> (9) acce - love 9 6.86 4.80 6.63 4.12 4.69 6.56 3.16 6.16 0.00 #>   # accessing entries from the matrix d[1, 3] #> [1] 6.855655"},{"path":"https://docs.openrepgrid.org/reference/distanceHartmann.html","id":null,"dir":"Reference","previous_headings":"","what":"'Hartmann distance' (standardized Slater distances). — distanceHartmann","title":"'Hartmann distance' (standardized Slater distances). — distanceHartmann","text":"Calculate Hartmann distance","code":""},{"path":"https://docs.openrepgrid.org/reference/distanceHartmann.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'Hartmann distance' (standardized Slater distances). — distanceHartmann","text":"","code":"distanceHartmann(   x,   method = \"paper\",   reps = 10000,   prob = NULL,   progress = TRUE,   distributions = FALSE )"},{"path":"https://docs.openrepgrid.org/reference/distanceHartmann.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'Hartmann distance' (standardized Slater distances). — distanceHartmann","text":"x repgrid object. method method used distance calculation, \"paper\", \"simulate\", \"new\". \"paper\" uses parameters given Hartmann (1992) calculation. \"simulate\" (default) simulates Slater distribution calculation. future version time consuming simulation replaced accurate parameters Hartmann distances used Hartmann (1992). reps Number random grids generate sample distribution Slater distances (default 10000). Note lot samples may take calculate. prob probability rating value occur. NULL (default) distribution uniform. number values must match length rating scale. progress Whether show progress bar simulation (default TRUE) (method=\"simulate\"). May useful distribution estimated basis many quasis. distributions Whether additionally return values simulated distributions (Slater etc.) default FALSE quickly boost object size.","code":""},{"path":"https://docs.openrepgrid.org/reference/distanceHartmann.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'Hartmann distance' (standardized Slater distances). — distanceHartmann","text":"matrix containing Hartmann distances. attributes several additional parameters can found: arguments: list several parameters including mean sd Slater distribution. quantiles: Quantiles Slater Hartmann distance distribution. distributions: List values simulated distributions.","code":""},{"path":"https://docs.openrepgrid.org/reference/distanceHartmann.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"'Hartmann distance' (standardized Slater distances). — distanceHartmann","text":"Hartmann (1992) showed simulation study Slater distances (see distanceSlater()) based random grids, Slater coined expression quasis, skewed distribution, mean standard deviation depending number constructs elicited. suggested linear transformation (z-transformation) takes account estimated (expected) mean standard deviation derived distribution standardize Slater distance scores across different grid sizes. 'Hartmann distances' represent accurate version 'Slater distances'. Note Hartmann distances multiplied -1. Hence, negative Hartmann values represent dissimilarity, .e. big Slater distance. two ways use function. Hartmann distances can either calculated based reference values (.e. means standard deviations Slater distance distributions) given Hartmann paper. second option conduct instant simulation supplied grid size calculation. second option accurate big number quasis used simulation. also possible return quantiles sample distribution element distances considered 'significant' according quantiles defined.","code":""},{"path":"https://docs.openrepgrid.org/reference/distanceHartmann.html","id":"calculation","dir":"Reference","previous_headings":"","what":"Calculation","title":"'Hartmann distance' (standardized Slater distances). — distanceHartmann","text":"'Hartmann distance' calculated follows (Hartmann 1992, p. 49).   $$D = -1 (\\frac{D_{slater} - M_c}{sd_c})$$ \\(D_{slater}\\) denotes Slater distances grid, \\(M_c\\) sample distribution's mean value \\(sd_c\\) sample distribution's standard deviation.","code":""},{"path":"https://docs.openrepgrid.org/reference/distanceHartmann.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"'Hartmann distance' (standardized Slater distances). — distanceHartmann","text":"Hartmann, . (1992). Element comparisons repertory  grid technique: Results consequences Monte  Carlo study. International Journal Personal Construct Psychology, 5(1), 41-56.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/distanceHartmann.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'Hartmann distance' (standardized Slater distances). — distanceHartmann","text":"","code":"if (FALSE) { # \\dontrun{  ### basics  ###  distanceHartmann(bell2010) distanceHartmann(bell2010, method = \"simulate\") h <- distanceHartmann(bell2010, method = \"simulate\") h  # printing options print(h) print(h, digits = 6) # 'significant' distances only print(h, p = c(.05, .95))  # access cells of distance matrix h[1, 2]  ### advanced  ###  # histogram of Slater distances and indifference region h <- distanceHartmann(bell2010, distributions = TRUE) l <- attr(h, \"distributions\") hist(l$slater, breaks = 100) hist(l$hartmann, breaks = 100) } # }"},{"path":"https://docs.openrepgrid.org/reference/distanceNormalized.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate power-transformed Hartmann distances. — distanceNormalized","title":"Calculate power-transformed Hartmann distances. — distanceNormalized","text":"Hartmann (1992) suggested transformation Slater (1977) distances make independent size grid. Hartmann distances supposed yield stable cutoff values used determine 'significance' inter-element distances. can shown Hartmann distances still affected grid parameters like size range rating scale used (Heckmann, 2012). function distanceNormalize applies Box-Cox (1964) transformation Hartmann distances order remove skew Hartmann distance distribution. normalized values show stable cutoffs (quantiles) better properties comparison across grids different size scale range.","code":""},{"path":"https://docs.openrepgrid.org/reference/distanceNormalized.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate power-transformed Hartmann distances. — distanceNormalized","text":"","code":"distanceNormalized(   x,   reps = 1000,   prob = NULL,   progress = TRUE,   distributions = TRUE )"},{"path":"https://docs.openrepgrid.org/reference/distanceNormalized.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate power-transformed Hartmann distances. — distanceNormalized","text":"x repgrid object. reps Number random grids generate produce sample distribution Hartmann distances (default 1000). Note lot samples may take calculate. prob probability rating value occur. NULL (default) distribution uniform. number values must match length rating scale. progress Whether show progress bar simulation (default TRUE) (method=\"simulate\"). May useful distribution estimated basis many quasis. distributions Whether additionally return values simulated distributions (Slater etc.) default FALSE quickly boost object size.","code":""},{"path":"https://docs.openrepgrid.org/reference/distanceNormalized.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate power-transformed Hartmann distances. — distanceNormalized","text":"matrix containing standardized distances.  data contained object's attributes: \"arguments\" list several parameters including mean sd Slater distribution. \"quantiles\" Quantiles Slater, Hartmann power transformed distance distributions. \"distributions\" List values simulated distributions, distributions=TRUE.","code":""},{"path":"https://docs.openrepgrid.org/reference/distanceNormalized.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate power-transformed Hartmann distances. — distanceNormalized","text":"function distanceNormalize can also return quantiles sample distribution element distances considered 'significant' according quantiles defined.","code":""},{"path":"https://docs.openrepgrid.org/reference/distanceNormalized.html","id":"calculations","dir":"Reference","previous_headings":"","what":"Calculations","title":"Calculate power-transformed Hartmann distances. — distanceNormalized","text":"'power transformed Hartmann distance' calculated follows: simulated Hartmann distribution added constant Box-Cox transformation can applied positive values. range values lambda Box-Cox transformation (Box & Cox, 1964) tried . best lambda one maximizing correlation quantiles standard normal distribution. lambda value maximizing normality used transform Hartmann distances. resulting scale power transformation depends lambda, resulting values z-transformed derive common scaling. code calculation optimal lambda written Ioannis Kosmidis.","code":""},{"path":"https://docs.openrepgrid.org/reference/distanceNormalized.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate power-transformed Hartmann distances. — distanceNormalized","text":"Box, G. E. P., & Cox, D. R. (1964). Analysis Transformations. Journal Royal Statistical Society. Series B (Methodological), 26(2), 211-252. Hartmann, . (1992). Element comparisons repertory grid technique: Results consequences Monte Carlo study. International Journal Personal Construct Psychology, 5(1), 41-56. Heckmann, M. (2012). Standardizing inter-element distances grids - revision Hartmann's distances, 11th Biennal Conference European Personal Construct Association (EPCA), Dublin, Ireland, Paper presentation, July 2012. Slater, P. (1977). measurement intrapersonal space Grid technique. London: Wiley.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/distanceNormalized.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate power-transformed Hartmann distances. — distanceNormalized","text":"","code":"if (FALSE) { # \\dontrun{  ### basics  ###  distanceNormalized(bell2010) n <- distanceNormalized(bell2010) n  # printing options print(n) print(n, digits = 4) # 'significant' distances only print(n, p = c(.05, .95))  # access cells of distance matrix n[1, 2]  ### advanced  ###  # histogram of Slater distances and indifference region n <- distanceNormalized(bell2010, distributions = TRUE) l <- attr(n, \"distributions\") hist(l$bc, breaks = 100) } # }"},{"path":"https://docs.openrepgrid.org/reference/distanceSlater.html","id":null,"dir":"Reference","previous_headings":"","what":"Slater distances (standardized Euclidean distances). — distanceSlater","title":"Slater distances (standardized Euclidean distances). — distanceSlater","text":"euclidean distance often used measure similarity elements (see distance(). drawback measure depends range rating scale number constructs used, . e. size grid.  approach standardize euclidean distance make independent size range ratings proposed Slater (1977, pp. 94). 'Slater distance' Euclidean distance divided expected distance. Slater distances bigger 1 greater expected, lesser 1 smaller expected. minimum value 0 values bigger 2 rarely found. Slater distances used compare inter-element distances different grids, grids need constructs elements. Hartmann (1992) showed Slater distance independent grid size. Also distribution Slater distances asymmetric. Hence, upper lower limit infer 'significance' distance symmetric. practical relevance Hartmann's findings demonstrated Schoeneich Klapp (1998). calculate Hartmann's version standardized distances see distanceHartmann()","code":""},{"path":"https://docs.openrepgrid.org/reference/distanceSlater.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slater distances (standardized Euclidean distances). — distanceSlater","text":"","code":"distanceSlater(x, trim = 20, index = TRUE)"},{"path":"https://docs.openrepgrid.org/reference/distanceSlater.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slater distances (standardized Euclidean distances). — distanceSlater","text":"x repgrid object. trim number characters construct element trimmed (default 20). NA trimming occurs. Trimming simply saves space displaying correlation constructs long names. index Whether print number construct element front name (default TRUE). useful avoid identical row names, may cause error.","code":""},{"path":"https://docs.openrepgrid.org/reference/distanceSlater.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Slater distances (standardized Euclidean distances). — distanceSlater","text":"matrix Slater distances.","code":""},{"path":"https://docs.openrepgrid.org/reference/distanceSlater.html","id":"calculation","dir":"Reference","previous_headings":"","what":"Calculation","title":"Slater distances (standardized Euclidean distances). — distanceSlater","text":"Slater distance calculated follows. derivation see Slater (1977, p.94).        Let matrix \\(D\\) contain row centered ratings. $$P = D^TD$$ $$S = tr(P)$$ expected 'unit expected distance' results      $$U = (2S/(m-1))^{1/2}$$ \\(m\\) denotes number elements grid. standardized Slater distances matrix Euclidean distances \\(E\\) divided expected distance \\(U\\). $$E/U$$","code":""},{"path":"https://docs.openrepgrid.org/reference/distanceSlater.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Slater distances (standardized Euclidean distances). — distanceSlater","text":"Hartmann, . (1992). Element comparisons repertory grid technique: Results consequences Monte Carlo study. International Journal Personal Construct Psychology, 5(1), 41-56. Schoeneich, F., & Klapp, B. F. (1998). Standardization interelement distances repertory grid technique consequences psychological interpretation self-identity plots: empirical study. Journal Constructivist Psychology, 11(1), 49-58. Slater, P. (1977). measurement intrapersonal space Grid technique. Vol. II. London: Wiley.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/distanceSlater.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slater distances (standardized Euclidean distances). — distanceSlater","text":"","code":"distanceSlater(bell2010) #>  #> ########################## #> Distances between elements #> ########################## #>  #> Distance method:  Slater (standardized Euclidean) #> Normalized: #>                                 1    2    3    4    5    6    7    8    9   10 #> (1) self                   1      0.91 0.69 0.62 0.84 1.12 0.93 1.09 0.63 1.18 #> (2) closest friend of th   2           0.96 1.11 0.61 1.03 0.61 1.04 1.02 0.96 #> (3) the unhappiest perso   3                0.75 1.02 0.87 0.93 1.27 0.93 1.05 #> (4) A person of the oppo   4                     1.09 1.10 1.01 1.02 0.71 1.22 #> (5) A teacher you respec   5                          1.24 0.89 0.89 0.94 0.85 #> (6) Mother (or the perso   6                               0.86 1.44 1.12 1.18 #> (7) A person of the oppo   7                                    1.11 1.06 0.94 #> (8) The most confident p   8                                         0.96 1.12 #> (9) A person you work we   9                                              1.27 #> (10) A teacher you did no 10                                                   #>  #> Note that Slater distances cannot be compared across grids with a different number of constructs (see Hartmann, 1992). #>  distanceSlater(bell2010, trim = 40) #>  #> ########################## #> Distances between elements #> ########################## #>  #> Distance method:  Slater (standardized Euclidean) #> Normalized: #>                                 1    2    3    4    5    6    7    8    9   10 #> (1) self                   1      0.91 0.69 0.62 0.84 1.12 0.93 1.09 0.63 1.18 #> (2) closest friend of th   2           0.96 1.11 0.61 1.03 0.61 1.04 1.02 0.96 #> (3) the unhappiest perso   3                0.75 1.02 0.87 0.93 1.27 0.93 1.05 #> (4) A person of the oppo   4                     1.09 1.10 1.01 1.02 0.71 1.22 #> (5) A teacher you respec   5                          1.24 0.89 0.89 0.94 0.85 #> (6) Mother (or the perso   6                               0.86 1.44 1.12 1.18 #> (7) A person of the oppo   7                                    1.11 1.06 0.94 #> (8) The most confident p   8                                         0.96 1.12 #> (9) A person you work we   9                                              1.27 #> (10) A teacher you did no 10                                                   #>  #> Note that Slater distances cannot be compared across grids with a different number of constructs (see Hartmann, 1992). #>   d <- distanceSlater(bell2010) print(d) #>  #> ########################## #> Distances between elements #> ########################## #>  #> Distance method:  Slater (standardized Euclidean) #> Normalized: #>                                 1    2    3    4    5    6    7    8    9   10 #> (1) self                   1      0.91 0.69 0.62 0.84 1.12 0.93 1.09 0.63 1.18 #> (2) closest friend of th   2           0.96 1.11 0.61 1.03 0.61 1.04 1.02 0.96 #> (3) the unhappiest perso   3                0.75 1.02 0.87 0.93 1.27 0.93 1.05 #> (4) A person of the oppo   4                     1.09 1.10 1.01 1.02 0.71 1.22 #> (5) A teacher you respec   5                          1.24 0.89 0.89 0.94 0.85 #> (6) Mother (or the perso   6                               0.86 1.44 1.12 1.18 #> (7) A person of the oppo   7                                    1.11 1.06 0.94 #> (8) The most confident p   8                                         0.96 1.12 #> (9) A person you work we   9                                              1.27 #> (10) A teacher you did no 10                                                   #>  #> Note that Slater distances cannot be compared across grids with a different number of constructs (see Hartmann, 1992). #>  print(d, digits = 4) #>  #> ########################## #> Distances between elements #> ########################## #>  #> Distance method:  Slater (standardized Euclidean) #> Normalized: #>                                   1      2      3      4      5      6      7 #> (1) self                   1        0.9066 0.6901 0.6227 0.8440 1.1163 0.9290 #> (2) closest friend of th   2               0.9615 1.1134 0.6058 1.0347 0.6058 #> (3) the unhappiest perso   3                      0.7546 1.0158 0.8737 0.9310 #> (4) A person of the oppo   4                             1.0950 1.1032 1.0125 #> (5) A teacher you respec   5                                    1.2449 0.8887 #> (6) Mother (or the perso   6                                           0.8552 #> (7) A person of the oppo   7                                                  #> (8) The most confident p   8                                                  #> (9) A person you work we   9                                                  #> (10) A teacher you did no 10                                                  #>                                8      9     10 #> (1) self                  1.0925 0.6327 1.1782 #> (2) closest friend of th  1.0403 1.0219 0.9625 #> (3) the unhappiest perso  1.2735 0.9285 1.0482 #> (4) A person of the oppo  1.0174 0.7052 1.2188 #> (5) A teacher you respec  0.8852 0.9401 0.8500 #> (6) Mother (or the perso  1.4424 1.1248 1.1767 #> (7) A person of the oppo  1.1085 1.0559 0.9361 #> (8) The most confident p         0.9639 1.1205 #> (9) A person you work we                1.2726 #> (10) A teacher you did no                      #>  #> Note that Slater distances cannot be compared across grids with a different number of constructs (see Hartmann, 1992). #>   # using Norris and Makhlouf-Norris (problematic) cutoffs print(d, cutoffs = c(.8, 1.2)) #>  #> ########################## #> Distances between elements #> ########################## #>  #> Distance method:  Slater (standardized Euclidean) #> Normalized: #>                                 1    2    3    4    5    6    7    8    9   10 #> (1) self                   1           0.69 0.62                     0.63      #> (2) closest friend of th   2                     0.61      0.61                #> (3) the unhappiest perso   3                0.75                1.27           #> (4) A person of the oppo   4                                         0.71 1.22 #> (5) A teacher you respec   5                          1.24                     #> (6) Mother (or the perso   6                                    1.44           #> (7) A person of the oppo   7                                                   #> (8) The most confident p   8                                                   #> (9) A person you work we   9                                              1.27 #> (10) A teacher you did no 10                                                   #>  #> Note that Slater distances cannot be compared across grids with a different number of constructs (see Hartmann, 1992). #>"},{"path":"https://docs.openrepgrid.org/reference/doRectanglesOverlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect if two rectangles overlap. — doRectanglesOverlap","title":"Detect if two rectangles overlap. — doRectanglesOverlap","text":"overlap assessed x y.","code":""},{"path":"https://docs.openrepgrid.org/reference/doRectanglesOverlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect if two rectangles overlap. — doRectanglesOverlap","text":"","code":"doRectanglesOverlap(a, b, margin = 0)"},{"path":"https://docs.openrepgrid.org/reference/doRectanglesOverlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect if two rectangles overlap. — doRectanglesOverlap","text":"vector four coordinates c(x0,y0,x1,y1). b vector four coordinates c(x0,y0,x1,y1).","code":""},{"path":"https://docs.openrepgrid.org/reference/doRectanglesOverlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect if two rectangles overlap. — doRectanglesOverlap","text":"logical. TRUE rectangles overlap.","code":""},{"path":"https://docs.openrepgrid.org/reference/doRectanglesOverlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect if two rectangles overlap. — doRectanglesOverlap","text":"","code":"if (FALSE) { # \\dontrun{ # overlap in x and y a <- c(0, 0, 2, 2) b <- c(1, 1, 4, 3) plot(c(a, b), c(a, b), type = \"n\") rect(a[1], a[2], a[3], a[4]) rect(b[1], b[2], b[3], b[4]) doRectanglesOverlap(a, b)  # b contained in a vertically a <- c(5, 0, 20, 20) b <- c(0, 5, 15, 15) plot(c(a, b), c(a, b), type = \"n\") rect(a[1], a[2], a[3], a[4]) rect(b[1], b[2], b[3], b[4]) doRectanglesOverlap(a, b)  # overlap only in y a <- c(0, 0, 2, 2) b <- c(2.1, 1, 4, 3) plot(c(a, b), c(a, b), type = \"n\") rect(a[1], a[2], a[3], a[4]) rect(b[1], b[2], b[3], b[4]) doRectanglesOverlap(a, b) } # }"},{"path":"https://docs.openrepgrid.org/reference/doubleEntry.html","id":null,"dir":"Reference","previous_headings":"","what":"Join the constructs of a grid with the same reversed constructs. — doubleEntry","title":"Join the constructs of a grid with the same reversed constructs. — doubleEntry","text":"Join constructs grid reversed constructs.","code":""},{"path":"https://docs.openrepgrid.org/reference/doubleEntry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join the constructs of a grid with the same reversed constructs. — doubleEntry","text":"","code":"doubleEntry(x)"},{"path":"https://docs.openrepgrid.org/reference/doubleEntry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join the constructs of a grid with the same reversed constructs. — doubleEntry","text":"x repgrid object","code":""},{"path":"https://docs.openrepgrid.org/reference/doubleEntry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join the constructs of a grid with the same reversed constructs. — doubleEntry","text":"repgrid object","code":""},{"path":"https://docs.openrepgrid.org/reference/doubleEntry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join the constructs of a grid with the same reversed constructs. — doubleEntry","text":"","code":"if (FALSE) { # \\dontrun{  data(bell2010) doubleEntry(bell2010) } # }"},{"path":"https://docs.openrepgrid.org/reference/elementCor.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the correlations between elements. — elementCor","title":"Calculate the correlations between elements. — elementCor","text":"Note simple element correlations measure similarity flawed invariant construct reflection (Mackay, 1992; Bell, 2010). correlation index invariant construct reflection Cohen's rc measure (1969), can calculated using argument rc=TRUE default option.","code":""},{"path":"https://docs.openrepgrid.org/reference/elementCor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the correlations between elements. — elementCor","text":"","code":"elementCor(x, rc = TRUE, method = \"pearson\", trim = 20, index = TRUE)"},{"path":"https://docs.openrepgrid.org/reference/elementCor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the correlations between elements. — elementCor","text":"x repgrid object. rc Use Cohen's rc invariant construct reflection (see description ). used default. method character string indicating correlation coefficient computed. One \"pearson\" (default), \"kendall\" \"spearman\", can abbreviated. default \"pearson\". trim number characters construct trimmed (default 20). NA trimming occurs. Trimming simply saves space displaying correlation constructs long names. index Whether print number construct.","code":""},{"path":"https://docs.openrepgrid.org/reference/elementCor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the correlations between elements. — elementCor","text":"matrix element correlations","code":""},{"path":"https://docs.openrepgrid.org/reference/elementCor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the correlations between elements. — elementCor","text":"Bell, R. C. (2010). note aligning constructs. Personal Construct Theory & Practice, (7), 42-48. Cohen, J. (1969). rc: profile similarity coefficient invariant variable reflection. Psychological Bulletin, 71(4), 281-284. Mackay, N. (1992). Identification, Reflection, Correlation: Problems Bases Repertory Grid Measures. International Journal Personal Construct Psychology, 5(1), 57-75.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/elementCor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the correlations between elements. — elementCor","text":"","code":"elementCor(mackay1992) # Cohen's rc #>  #> ############################ #> Correlation between elements #> ############################ #>  #> Type of correlation:  Cohens's rc (invariant to scale reflection)  #>  #>                         1     2     3     4     5     6 #> (1) Self            1      0.59  0.28  0.29 -0.61 -0.62 #> (2) Ideal self      2           -0.04 -0.20 -0.38 -0.81 #> (3) Mother          3                  0.63  0.37 -0.43 #> (4) Father          4                        0.00  0.00 #> (5) Spouse          5                              0.00 #> (6) Disliked person 6                                   elementCor(mackay1992, rc = FALSE) # PM correlation #>  #> ############################ #> Correlation between elements #> ############################ #>  #> Type of correlation:  pearson  #> Note: Standard correlations are not invariant to scale reflection. #>  #>                         1     2     3     4     5     6 #> (1) Self            1     -0.37 -0.19  0.32 -0.75  0.96 #> (2) Ideal self      2           -0.71 -0.56 -0.26 -0.30 #> (3) Mother          3                  0.63  0.57 -0.12 #> (4) Father          4                        0.05  0.38 #> (5) Spouse          5                             -0.74 #> (6) Disliked person 6                                   elementCor(mackay1992, rc = FALSE, method = \"spearman\") # Spearman correlation #>  #> ############################ #> Correlation between elements #> ############################ #>  #> Type of correlation:  spearman  #> Note: Standard correlations are not invariant to scale reflection. #>  #>                         1     2     3     4     5     6 #> (1) Self            1     -0.25  0.01  0.64 -0.77  0.98 #> (2) Ideal self      2           -0.70 -0.57 -0.29 -0.19 #> (3) Mother          3                  0.55  0.45  0.06 #> (4) Father          4                       -0.14  0.65 #> (5) Spouse          5                             -0.74 #> (6) Disliked person 6                                    # format output elementCor(mackay1992, trim = 6) #>  #> ############################ #> Correlation between elements #> ############################ #>  #> Type of correlation:  Cohens's rc (invariant to scale reflection)  #>  #>                1     2     3     4     5     6 #> (1) Self   1      0.59  0.28  0.29 -0.61 -0.62 #> (2) Ideal  2           -0.04 -0.20 -0.38 -0.81 #> (3) Mother 3                  0.63  0.37 -0.43 #> (4) Father 4                        0.00  0.00 #> (5) Spouse 5                              0.00 #> (6) Dislik 6                                   elementCor(mackay1992, index = FALSE, trim = 6) #>  #> ############################ #> Correlation between elements #> ############################ #>  #> Type of correlation:  Cohens's rc (invariant to scale reflection)  #>  #>            1     2     3     4     5     6 #> Self   1      0.59  0.28  0.29 -0.61 -0.62 #> Ideal  2           -0.04 -0.20 -0.38 -0.81 #> Mother 3                  0.63  0.37 -0.43 #> Father 4                        0.00  0.00 #> Spouse 5                              0.00 #> Dislik 6                                    # save as object for further processing r <- elementCor(mackay1992) r #>  #> ############################ #> Correlation between elements #> ############################ #>  #> Type of correlation:  Cohens's rc (invariant to scale reflection)  #>  #>                         1     2     3     4     5     6 #> (1) Self            1      0.59  0.28  0.29 -0.61 -0.62 #> (2) Ideal self      2           -0.04 -0.20 -0.38 -0.81 #> (3) Mother          3                  0.63  0.37 -0.43 #> (4) Father          4                        0.00  0.00 #> (5) Spouse          5                              0.00 #> (6) Disliked person 6                                    # change output of object print(r, digits = 5) #>  #> ############################ #> Correlation between elements #> ############################ #>  #> Type of correlation:  Cohens's rc (invariant to scale reflection)  #>  #>                            1        2        3        4        5        6 #> (1) Self            1         0.58761  0.28090  0.29096 -0.61237 -0.61828 #> (2) Ideal self      2                 -0.03745 -0.20365 -0.38100 -0.81461 #> (3) Mother          3                           0.63049  0.36860 -0.43346 #> (4) Father          4                                    0.00000  0.00000 #> (5) Spouse          5                                             0.00000 #> (6) Disliked person 6                                                     print(r, col.index = FALSE) #>  #> ############################ #> Correlation between elements #> ############################ #>  #> Type of correlation:  Cohens's rc (invariant to scale reflection)  #>  #>                     (1) Self (2) Ideal self (3) Mother (4) Father (5) Spouse #> (1) Self                               0.59       0.28       0.29      -0.61 #> (2) Ideal self                                   -0.04      -0.20      -0.38 #> (3) Mother                                                   0.63       0.37 #> (4) Father                                                              0.00 #> (5) Spouse                                                                   #> (6) Disliked person                                                          #>                     (6) Disliked person #> (1) Self                          -0.62 #> (2) Ideal self                    -0.81 #> (3) Mother                        -0.43 #> (4) Father                         0.00 #> (5) Spouse                         0.00 #> (6) Disliked person                     print(r, upper = FALSE) #>  #> ############################ #> Correlation between elements #> ############################ #>  #> Type of correlation:  Cohens's rc (invariant to scale reflection)  #>  #>                           1     2     3     4     5     6 #> (1) Self            1  1.00  0.59  0.28  0.29 -0.61 -0.62 #> (2) Ideal self      2  0.59  1.00 -0.04 -0.20 -0.38 -0.81 #> (3) Mother          3  0.28 -0.04  1.00  0.63  0.37 -0.43 #> (4) Father          4  0.29 -0.20  0.63  1.00  0.00  0.00 #> (5) Spouse          5 -0.61 -0.38  0.37  0.00  1.00  0.00 #> (6) Disliked person 6 -0.62 -0.81 -0.43  0.00  0.00  1.00  # accessing elements of the correlation matrix r[1, 3] #> [1] 0.2809003"},{"path":"https://docs.openrepgrid.org/reference/elementRmsCor.html","id":null,"dir":"Reference","previous_headings":"","what":"Root mean square (RMS) of inter-element correlations. — elementRmsCor","title":"Root mean square (RMS) of inter-element correlations. — elementRmsCor","text":"RMS also known 'quadratic mean' inter-element correlations. RMS serves simplification correlation table. reflects average relation one element elements. Note correlations squared calculation, RMS affected sign correlation (cf. Fransella, Bell & Bannister, 2003, p. 86).","code":""},{"path":"https://docs.openrepgrid.org/reference/elementRmsCor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Root mean square (RMS) of inter-element correlations. — elementRmsCor","text":"","code":"elementRmsCor(x, rc = TRUE, method = \"pearson\", trim = NA)"},{"path":"https://docs.openrepgrid.org/reference/elementRmsCor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Root mean square (RMS) of inter-element correlations. — elementRmsCor","text":"x repgrid object. rc Whether use Cohen's rc invariant construct reflection (see description ). used default. method character string indicating correlation coefficient computed. One \"pearson\" (default), \"kendall\" \"spearman\", can abbreviated. default \"pearson\". trim number characters element trimmed (default NA). NA trimming occurs. Trimming simply saves space displaying correlation constructs long names.","code":""},{"path":"https://docs.openrepgrid.org/reference/elementRmsCor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Root mean square (RMS) of inter-element correlations. — elementRmsCor","text":"dataframe RMS inter-element correlations.","code":""},{"path":"https://docs.openrepgrid.org/reference/elementRmsCor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Root mean square (RMS) of inter-element correlations. — elementRmsCor","text":"Note simple element correlations measure similarity flawed invariant construct reflection (Mackay, 1992; Bell, 2010). correlation index invariant construct reflection Cohen's rc measure (1969), can calculated using argument rc=TRUE default option function.","code":""},{"path":"https://docs.openrepgrid.org/reference/elementRmsCor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Root mean square (RMS) of inter-element correlations. — elementRmsCor","text":"Fransella, F., Bell, R. C., & Bannister, D. (2003). Manual Repertory  Grid Technique (2. Ed.). Chichester: John Wiley & Sons.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/elementRmsCor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Root mean square (RMS) of inter-element correlations. — elementRmsCor","text":"","code":"# data from grid manual by Fransella, Bell and Bannister elementRmsCor(fbb2003) #>  #> ########################################## #> Root-mean-square correlation of elements #> ########################################## #>  #>                            RMS #> (1) self                  0.51 #> (2) my father             0.65 #> (3) an old flame          0.40 #> (4) an ethical person     0.52 #> (5) my mother             0.26 #> (6) a rejected teacher    0.42 #> (7) as I would love to be 0.51 #> (8) a pitied person       0.47 #>  #> Average of statistic 0.47  #> Standard deviation of statistic 0.11  elementRmsCor(fbb2003, trim = 10) #>  #> ########################################## #> Root-mean-square correlation of elements #> ########################################## #>  #>                 RMS #> (1) self       0.51 #> (2) my father  0.65 #> (3) an old fla 0.40 #> (4) an ethical 0.52 #> (5) my mother  0.26 #> (6) a rejected 0.42 #> (7) as I would 0.51 #> (8) a pitied p 0.47 #>  #> Average of statistic 0.47  #> Standard deviation of statistic 0.11   # modify output r <- elementRmsCor(fbb2003) print(r, digits = 5) #>  #> ########################################## #> Root-mean-square correlation of elements #> ########################################## #>  #>                               RMS #> (1) self                  0.50967 #> (2) my father             0.64574 #> (3) an old flame          0.40418 #> (4) an ethical person     0.51928 #> (5) my mother             0.26293 #> (6) a rejected teacher    0.42362 #> (7) as I would love to be 0.50950 #> (8) a pitied person       0.47085 #>  #> Average of statistic 0.46822  #> Standard deviation of statistic 0.10355   # access second row of calculation results r[2, \"RMS\"] #> [1] 0.6457385"},{"path":"https://docs.openrepgrid.org/reference/elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or replace element names — elements","title":"Get or replace element names — elements","text":"Allows get set element names. Replaces older functions getElementNames, getElementNames2, eNames deprecated.","code":""},{"path":"https://docs.openrepgrid.org/reference/elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or replace element names — elements","text":"","code":"elements(x)  elements(x, position) <- value"},{"path":"https://docs.openrepgrid.org/reference/elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or replace element names — elements","text":"x repgrid object. position Index insert element. value Character vector element names.","code":""},{"path":"https://docs.openrepgrid.org/reference/elements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get or replace element names — elements","text":"","code":"# copy Boeker grid to x x <- boeker  ## get element names e <- elements(x) e #>  [1] \"self\"                \"ideal self\"          \"mother\"              #>  [4] \"father\"              \"kurt\"                \"karl\"                #>  [7] \"george\"              \"martin\"              \"elizabeth\"           #> [10] \"therapist\"           \"irene\"               \"childhood self\"      #> [13] \"self before illness\" \"self with delusion\"  \"self as dreamer\"      ## replace element names elements(x) <- rev(e) # reverse all element names elements(x)[1] <- \"Hannes\" # replace name of first element  # replace names of elements 1 and 3 elements(x)[c(1, 3)] <- c(\"element 1\", \"element 3\")"},{"path":"https://docs.openrepgrid.org/reference/extract-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parts of the repgrid object. — [,repgrid-method","title":"Extract parts of the repgrid object. — [,repgrid-method","text":"Methods \"[\", .e., subsetting repgrid objects.","code":""},{"path":"https://docs.openrepgrid.org/reference/extract-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parts of the repgrid object. — [,repgrid-method","text":"","code":"# S4 method for class 'repgrid' x[i, j, ..., drop = TRUE]"},{"path":"https://docs.openrepgrid.org/reference/extract-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parts of the repgrid object. — [,repgrid-method","text":"x repgrid object. Row index (numeric) j Column index. Either numeric character (elements names). ... evaluated. drop used.","code":""},{"path":"https://docs.openrepgrid.org/reference/extract-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract parts of the repgrid object. — [,repgrid-method","text":"","code":"x <- boeker x[1:4, ] #>  #> META DATA: #> Number of constructs:  4  #> Number of elements:  15  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                                    8 - martin                          #>                         george - 7 | 9 - elizabeth                     #>                         karl - 6 | | | 10 - therapist                  #>                       kurt - 5 | | | | | 11 - irene                    #>                   father - 4 | | | | | | | 12 - childhood self         #>                 mother - 3 | | | | | | | | | 13 - self before illness  #>           ideal self - 2 | | | | | | | | | | | 14 - self with delusion #>               self - 1 | | | | | | | | | | | | | 15 - self as dreamer  #>                      | | | | | | | | | | | | | | |                     #>       balanced (1)   1 4 2 2 3 5 2 5 4 2 6 2 2 3 3   (1) get along wit #>       isolated (2)   3 6 3 5 5 4 5 4 5 4 4 4 2 2 3   (2) sociable      #> ely integrated (3)   2 2 2 3 5 3 2 3 2 3 3 4 4 5 3   (3) excluded      #>     discursive (4)   4 1 3 1 2 4 2 3 3 2 3 3 3 5 4   (4) passive       #>  x[, 1:3] #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  3  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                        2 - ideal self          #>               self - 1 | 3 - mother            #>                      | | |                     #>       balanced (1)   1 4 2   (1) get along wit #>       isolated (2)   3 6 3   (2) sociable      #> ely integrated (3)   2 2 2   (3) excluded      #>     discursive (4)   4 1 3   (4) passive       #>    open minded (5)   2 1 2   (5) indifferent   #>         dreamy (6)   4 5 3   (6) dispassionate #> cally oriented (7)   2 1 3   (7) depressed     #>        playful (8)   4 5 4   (8) serious       #> ocially minded (9)   2 1 3   (9) selfish       #>   quarrelsome (10)   5 5 5   (10) peaceful     #>      artistic (11)   5 1 2   (11) technical    #>    scientific (12)   2 1 5   (12) emotional    #>     introvert (13)   4 5 4   (13) extrovert    #>    wanderlust (14)   1 1 4   (14) home oriente #>  x[1:4, 1:3] #>  #> META DATA: #> Number of constructs:  4  #> Number of elements:  3  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                        2 - ideal self          #>               self - 1 | 3 - mother            #>                      | | |                     #>       balanced (1)   1 4 2   (1) get along wit #>       isolated (2)   3 6 3   (2) sociable      #> ely integrated (3)   2 2 2   (3) excluded      #>     discursive (4)   4 1 3   (4) passive       #>  x[1:4, c(\"self\", \"ideal self\", \"mother\")] #>  #> META DATA: #> Number of constructs:  4  #> Number of elements:  3  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                        2 - ideal self          #>               self - 1 | 3 - mother            #>                      | | |                     #>       balanced (1)   1 4 2   (1) get along wit #>       isolated (2)   3 6 3   (2) sociable      #> ely integrated (3)   2 2 2   (3) excluded      #>     discursive (4)   4 1 3   (4) passive       #>"},{"path":"https://docs.openrepgrid.org/reference/formatMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a matrix and add index column. — formatMatrix","title":"Format a matrix and add index column. — formatMatrix","text":"Format matrix add index column.","code":""},{"path":"https://docs.openrepgrid.org/reference/formatMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a matrix and add index column. — formatMatrix","text":"","code":"formatMatrix(   x,   rnames = rownames(x),   pre.index = c(T, F),   cnames = seq_len(ncol(x)),   indexcol = F,   digits = 2,   diag = F,   mode = 1 )"},{"path":"https://docs.openrepgrid.org/reference/formatMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a matrix and add index column. — formatMatrix","text":"x matrix object. rnames Row names. pre.index Whether make index prefix rows column names. cnames Column names. indexcol Whether make index column. diag Whether show diagonal. mode Whether show upper (mode=1), lower (mode=2) triangles (mode=0) matrix.","code":""},{"path":"https://docs.openrepgrid.org/reference/getConstructNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get construct names — getConstructNames","title":"Get construct names — getConstructNames","text":"Get construct names","code":""},{"path":"https://docs.openrepgrid.org/reference/getConstructNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get construct names — getConstructNames","text":"","code":"getConstructNames(x)"},{"path":"https://docs.openrepgrid.org/reference/getConstructNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get construct names — getConstructNames","text":"x repgrid object.","code":""},{"path":"https://docs.openrepgrid.org/reference/getConstructNames.html","id":"deprecated-functions","dir":"Reference","previous_headings":"","what":"Deprecated functions","title":"Get construct names — getConstructNames","text":"getConstructNames(), cNames() deprecated. Instead use constructs().","code":""},{"path":"https://docs.openrepgrid.org/reference/getConstructNames2.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve construct names in needed format. — getConstructNames2","title":"Retrieve construct names in needed format. — getConstructNames2","text":"Retrieves construct names repgrid.","code":""},{"path":"https://docs.openrepgrid.org/reference/getConstructNames2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve construct names in needed format. — getConstructNames2","text":"","code":"getConstructNames2(   x,   mode = 1,   trim = 20,   index = F,   sep = \" - \",   pre = \"(\",   post = \") \" )"},{"path":"https://docs.openrepgrid.org/reference/getConstructNames2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve construct names in needed format. — getConstructNames2","text":"x repgrid object. mode Type output. 1= left right pole separated sep), 2= left pole, 3 = right pole. trim Number characters trim construct names (default NA). NA suppress trimming. length index included trimming. index Logical. Whether add index number construct names (default TRUE). sep Separator string poles. pre String index number (default (). post String index number (default ) ).","code":""},{"path":"https://docs.openrepgrid.org/reference/getConstructNames2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve construct names in needed format. — getConstructNames2","text":"Vector construct names.","code":""},{"path":"https://docs.openrepgrid.org/reference/getConstructNames2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve construct names in needed format. — getConstructNames2","text":"Different features like trimming, indexing choices separators allow return kind format needed.","code":""},{"path":"https://docs.openrepgrid.org/reference/getConstructNames2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve construct names in needed format. — getConstructNames2","text":"","code":"if (FALSE) { # \\dontrun{  getConstructNames2(bell2010) getConstructNames2(bell2010, mode = 2) getConstructNames2(bell2010, index = T) getConstructNames2(bell2010, index = T, mode = 3) } # }"},{"path":"https://docs.openrepgrid.org/reference/getElementNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve element names of repgrid object. — getElementNames","title":"Retrieve element names of repgrid object. — getElementNames","text":"Function convenience, new users deal object slots typically knowledge R object structures (S3, S4).","code":""},{"path":"https://docs.openrepgrid.org/reference/getElementNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve element names of repgrid object. — getElementNames","text":"","code":"getElementNames(x)"},{"path":"https://docs.openrepgrid.org/reference/getElementNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve element names of repgrid object. — getElementNames","text":"x repgrid object.","code":""},{"path":"https://docs.openrepgrid.org/reference/getElementNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve element names of repgrid object. — getElementNames","text":"vector Vector containing names elements.","code":""},{"path":"https://docs.openrepgrid.org/reference/getElementNames.html","id":"deprecated-functions","dir":"Reference","previous_headings":"","what":"Deprecated functions","title":"Retrieve element names of repgrid object. — getElementNames","text":"getElementNames(), getElementNames2(), eNames() deprecated. Instead use elements().","code":""},{"path":"https://docs.openrepgrid.org/reference/getElementNames2.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve element names in needed format. — getElementNames2","title":"Retrieve element names in needed format. — getElementNames2","text":"Retrieves element names repgrid.","code":""},{"path":"https://docs.openrepgrid.org/reference/getElementNames2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve element names in needed format. — getElementNames2","text":"","code":"getElementNames2(x, trim = 20, index = F, pre = \"(\", post = \") \")"},{"path":"https://docs.openrepgrid.org/reference/getElementNames2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve element names in needed format. — getElementNames2","text":"x repgrid object. trim Number characters trim construct names (default NA). NA suppress trimming. length index included trimming. index Logical. Whether add index number construct names (default TRUE). pre String index number (default (). post String index number (default ) ).","code":""},{"path":"https://docs.openrepgrid.org/reference/getElementNames2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve element names in needed format. — getElementNames2","text":"Vector (trimmed) element names.","code":""},{"path":"https://docs.openrepgrid.org/reference/getElementNames2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve element names in needed format. — getElementNames2","text":"Different features like trimming, indexing choices separators allow return kind format needed.","code":""},{"path":"https://docs.openrepgrid.org/reference/getElementNames2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve element names in needed format. — getElementNames2","text":"","code":"if (FALSE) { # \\dontrun{  getElementNames2(bell2010) getElementNames2(bell2010, mode = 2) getElementNames2(bell2010, index = T) getElementNames2(bell2010, index = T, trim = 30) } # }"},{"path":"https://docs.openrepgrid.org/reference/getNoOfConstructs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get number of constructs — getNoOfConstructs","title":"Get number of constructs — getNoOfConstructs","text":"Get number constructs","code":""},{"path":"https://docs.openrepgrid.org/reference/getNoOfConstructs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get number of constructs — getNoOfConstructs","text":"","code":"getNoOfConstructs(x)"},{"path":"https://docs.openrepgrid.org/reference/getNoOfConstructs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get number of constructs — getNoOfConstructs","text":"x repgrid object","code":""},{"path":"https://docs.openrepgrid.org/reference/getNoOfConstructs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get number of constructs — getNoOfConstructs","text":"numeric","code":""},{"path":"https://docs.openrepgrid.org/reference/getNoOfConstructs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get number of constructs — getNoOfConstructs","text":"","code":"if (FALSE) { # \\dontrun{  getNoOfConstructs(bell2010) } # }"},{"path":"https://docs.openrepgrid.org/reference/getNoOfElements.html","id":null,"dir":"Reference","previous_headings":"","what":"Get number of elements — getNoOfElements","title":"Get number of elements — getNoOfElements","text":"Get number elements","code":""},{"path":"https://docs.openrepgrid.org/reference/getNoOfElements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get number of elements — getNoOfElements","text":"","code":"getNoOfElements(x)"},{"path":"https://docs.openrepgrid.org/reference/getNoOfElements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get number of elements — getNoOfElements","text":"x repgrid object","code":""},{"path":"https://docs.openrepgrid.org/reference/getNoOfElements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get number of elements — getNoOfElements","text":"numeric","code":""},{"path":"https://docs.openrepgrid.org/reference/getNoOfElements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get number of elements — getNoOfElements","text":"","code":"if (FALSE) { # \\dontrun{  getNoOfElements(bell2010) } # }"},{"path":"https://docs.openrepgrid.org/reference/getRatingLayer.html","id":null,"dir":"Reference","previous_headings":"","what":"get rating layer — getRatingLayer","title":"get rating layer — getRatingLayer","text":"get rating layer","code":""},{"path":"https://docs.openrepgrid.org/reference/getRatingLayer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get rating layer — getRatingLayer","text":"","code":"getRatingLayer(x, layer = 1, names = TRUE, trim = 10)"},{"path":"https://docs.openrepgrid.org/reference/getRatingLayer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get rating layer — getRatingLayer","text":"x repgrid object. layer layer returned. names extract row columns names (constructs elements). trim number characters row column name trimmed (default 10). NA trimming done. Trimming simply saves space displaying output.","code":""},{"path":"https://docs.openrepgrid.org/reference/getRatingLayer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get rating layer — getRatingLayer","text":"matrix","code":""},{"path":"https://docs.openrepgrid.org/reference/getRatingLayer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get rating layer — getRatingLayer","text":"","code":"if (FALSE) { # \\dontrun{  getRatingLayer(bell2010) } # }"},{"path":"https://docs.openrepgrid.org/reference/getScale.html","id":null,"dir":"Reference","previous_headings":"","what":"Get minimum and maximum scale value used in grid. — getScale","title":"Get minimum and maximum scale value used in grid. — getScale","text":"values returned either vector list.","code":""},{"path":"https://docs.openrepgrid.org/reference/getScale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get minimum and maximum scale value used in grid. — getScale","text":"","code":"getScale(x, output = 1)"},{"path":"https://docs.openrepgrid.org/reference/getScale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get minimum and maximum scale value used in grid. — getScale","text":"x repgrid object. output Type output object. 1= named vector, 2 = list.","code":""},{"path":"https://docs.openrepgrid.org/reference/getScale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get minimum and maximum scale value used in grid. — getScale","text":"Vector list (depends output containing minimum maximum scale value.","code":""},{"path":"https://docs.openrepgrid.org/reference/getScaleMidpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Get midpoint of the grid rating scale — getScaleMidpoint","title":"Get midpoint of the grid rating scale — getScaleMidpoint","text":"Get midpoint grid rating scale","code":""},{"path":"https://docs.openrepgrid.org/reference/getScaleMidpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get midpoint of the grid rating scale — getScaleMidpoint","text":"","code":"getScaleMidpoint(x)"},{"path":"https://docs.openrepgrid.org/reference/getScaleMidpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get midpoint of the grid rating scale — getScaleMidpoint","text":"x repgrid object.","code":""},{"path":"https://docs.openrepgrid.org/reference/getScaleMidpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get midpoint of the grid rating scale — getScaleMidpoint","text":"Midpoint scale.","code":""},{"path":"https://docs.openrepgrid.org/reference/getScaleMidpoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get midpoint of the grid rating scale — getScaleMidpoint","text":"","code":"if (FALSE) { # \\dontrun{  getScaleMidpoint(bell2010) } # }"},{"path":"https://docs.openrepgrid.org/reference/gridlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Add repgrids into a gridlist — gridlist","title":"Add repgrids into a gridlist — gridlist","text":"Add repgrids gridlist Test create object class gridlist","code":""},{"path":"https://docs.openrepgrid.org/reference/gridlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add repgrids into a gridlist — gridlist","text":"","code":"gridlist(...)  is.gridlist(x)  as.gridlist(x)"},{"path":"https://docs.openrepgrid.org/reference/gridlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add repgrids into a gridlist — gridlist","text":"... Objects converted gridlist x object.","code":""},{"path":"https://docs.openrepgrid.org/reference/home.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate the interactive 3D device to default views. — home","title":"Rotate the interactive 3D device to default views. — home","text":"Rotate interactive 3D device default viewpoint position defined theta phi Euler angles. Three default viewpoints implemented rendering view two axes span plane third axis pointing screen.","code":""},{"path":"https://docs.openrepgrid.org/reference/home.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate the interactive 3D device to default views. — home","text":"","code":"home(view = 1, theta = NULL, phi = NULL)"},{"path":"https://docs.openrepgrid.org/reference/home.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate the interactive 3D device to default views. — home","text":"view Numeric. Specifying one three default views. 1 = XY, 2=XZ 3=YZ-plane. theta Numeric. Euler angle. Overrides view setting. phi Numeric. Euler angle. Overrides view setting. return NULL.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/home.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate the interactive 3D device to default views. — home","text":"","code":"if (FALSE) { # \\dontrun{  biplot3d(boeker) home(2) home(3) home(1) home(theta = 45, phi = 45) } # }"},{"path":"https://docs.openrepgrid.org/reference/importExcel.html","id":null,"dir":"Reference","previous_headings":"","what":"Import grid data from an Excel file. — importExcel","title":"Import grid data from an Excel file. — importExcel","text":"can define grid using Microsoft Excel saving .xlsx file. .xlsx file specified fixed format (see section Details).","code":""},{"path":"https://docs.openrepgrid.org/reference/importExcel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import grid data from an Excel file. — importExcel","text":"","code":"importExcel(file, dir = NULL, sheetIndex = 1, min = NULL, max = NULL)"},{"path":"https://docs.openrepgrid.org/reference/importExcel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import grid data from an Excel file. — importExcel","text":"file vector filenames including full path file current working directory. file suffix .xlsx (used since Excel 2007). dir Alternative way supply directory file located (default NULL). sheetIndex number Excel sheet contains grid data. min Optional argument (numeric, default NULL) minimum rating value grid. max Optional argument (numeric, default NULL) maximum rating value grid.","code":""},{"path":"https://docs.openrepgrid.org/reference/importExcel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import grid data from an Excel file. — importExcel","text":"single repgrid object case one file list repgrid objects case multiple files imported.","code":""},{"path":"https://docs.openrepgrid.org/reference/importExcel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import grid data from an Excel file. — importExcel","text":"Excel file structure: first row contains minimum rating scale, names elements maximum rating scale. every row contains left construct pole, ratings right construct pole. Note maximum minimum value defined using min max arguments values supplied beginning end first row. Otherwise scaling range inferred available data warning issued range may erroneous. may effect functions depend knowing correct range thus strongly recommended set scale range correctly.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/importExcel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import grid data from an Excel file. — importExcel","text":"","code":"if (FALSE) { # \\dontrun{  # Open Excel file delivered along with the package file <- system.file(\"extdata\", \"grid_01.xlsx\", package = \"OpenRepGrid\") rg <- importExcel(file)  # To see the structure of the Excel file try to open it as follows. # Requires Excel to be installed. system2(\"open\", file)  # Import more than one Excel file files <- system.file(\"extdata\", c(\"grid_01.xlsx\", \"grid_02.xlsx\"), package = \"OpenRepGrid\") rg <- importExcel(files) } # }"},{"path":"https://docs.openrepgrid.org/reference/importExcelInternal.html","id":null,"dir":"Reference","previous_headings":"","what":"workhorse function (parser) for importExcel. — importExcelInternal","title":"workhorse function (parser) for importExcel. — importExcelInternal","text":"workhorse function (parser) importExcel.","code":""},{"path":"https://docs.openrepgrid.org/reference/importExcelInternal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"workhorse function (parser) for importExcel. — importExcelInternal","text":"","code":"importExcelInternal(file, dir = NULL, sheetIndex = 1, min = NULL, max = NULL)"},{"path":"https://docs.openrepgrid.org/reference/importExcelInternal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"workhorse function (parser) for importExcel. — importExcelInternal","text":"file vector filenames including full path file current working directory. file suffix .xlsx (used since Excel 2007). dir Alternative way supply directory file located (default NULL). sheetIndex number Excel sheet contains grid data. min Optional argument (numeric, default NULL) minimum rating value grid. max Optional argument (numeric, default NULL) maximum rating value grid.","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridcor.html","id":null,"dir":"Reference","previous_headings":"","what":"Import GRIDCOR data files. — importGridcor","title":"Import GRIDCOR data files. — importGridcor","text":"Reads file format used grid program GRIDCOR (Feixas & Cornejo, 2002).","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridcor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import GRIDCOR data files. — importGridcor","text":"","code":"importGridcor(file, dir = NULL)"},{"path":"https://docs.openrepgrid.org/reference/importGridcor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import GRIDCOR data files. — importGridcor","text":"file filename including path file current working directory. File can also complete URL. fileformat .dat. dir alternative way supply directory file located (default NULL).","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridcor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import GRIDCOR data files. — importGridcor","text":"single repgrid object case one file list repgrid objects case multiple files imported.","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridcor.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Import GRIDCOR data files. — importGridcor","text":"Note GRIDCOR data sets minimum ratings scale range 1. maximum value can differ defined data file. Also note Gridcor Gridstat data files suffix .dat. Make sure mix .","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridcor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import GRIDCOR data files. — importGridcor","text":"Feixas, G., & Cornejo, J. M. (2002). GRIDCOR: Correspondence Analysis Grid Data (version 4.0). Barcelona: Centro de Terapia Cognitiva. Retrieved https://repertorygrid.net/en/.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/importGridcor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import GRIDCOR data files. — importGridcor","text":"","code":"if (FALSE) { # \\dontrun{  # supposing that the data file gridcor.dat is in the current directory file <- \"gridcor.dat\" rg <- importGridcor(file)  # specifying a directory (arbitrary example directory) dir <- \"/Users/markheckmann/data\" rg <- importGridcor(file, dir)  # using a full path rg <- importGridcor(\"/Users/markheckmann/data/gridcor.dat\") } # }"},{"path":"https://docs.openrepgrid.org/reference/importGridcorInternal.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal parser for GRIDCOR data files. — importGridcorInternal","title":"Internal parser for GRIDCOR data files. — importGridcorInternal","text":"Parse file format used grid program GRIDCOR (Feixas & Cornejo).","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridcorInternal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal parser for GRIDCOR data files. — importGridcorInternal","text":"","code":"importGridcorInternal(file, dir = NULL)"},{"path":"https://docs.openrepgrid.org/reference/importGridcorInternal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal parser for GRIDCOR data files. — importGridcorInternal","text":"file filename including path file current working directory. File can also complete URL. fileformat .dat. dir alternative way supply directory file located (default NULL).","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridcorInternal.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Internal parser for GRIDCOR data files. — importGridcorInternal","text":"","code":"Note that the GRIDCOR data sets the minimum ratings scale range to 1.            The maximum value can differ and is defined in the data file."},{"path":"https://docs.openrepgrid.org/reference/importGridcorInternal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Internal parser for GRIDCOR data files. — importGridcorInternal","text":"https://repertorygrid.net/en/","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridcorInternal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal parser for GRIDCOR data files. — importGridcorInternal","text":"","code":"if (FALSE) { # \\dontrun{  # supposing that the data file gridcor.dat is in the current directory file <- \"gridcor.dat\" imp <- importGridcorInternal(file)  # specifying a directory (arbitrary example directory) dir <- \"/Users/markheckmann/data\" imp <- importGridcorInternal(file, dir)  # using a full path imp <- importGridcorInternal(\"/Users/markheckmann/data/gridcor.dat\") } # }"},{"path":"https://docs.openrepgrid.org/reference/importGridstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Gridstat data files. — importGridstat","title":"Import Gridstat data files. — importGridstat","text":"Reads file format used latest version grid program gridstat (Bell, 1998).","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Gridstat data files. — importGridstat","text":"","code":"importGridstat(file, dir = NULL, min = NULL, max = NULL)"},{"path":"https://docs.openrepgrid.org/reference/importGridstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Gridstat data files. — importGridstat","text":"file Filename including path file current working directory. File can also complete URL. fileformat .dat. dir Alternative way supply directory file located (default NULL). min Optional argument (numeric, default NULL) minimum rating value grid. max Optional argument (numeric, default NULL) maximum rating value grid.","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridstat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Gridstat data files. — importGridstat","text":"single repgrid object case one file list repgrid objects case multiple files imported.","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridstat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Import Gridstat data files. — importGridstat","text":"Note gridstat data format contain explicit information range rating scale used (minimum maximum). default range inferred scanning ratings picking minimal maximal values rating range. can set minimal maximal value hand using min max arguments using setScale() function. Note rating range set, may cause several functions work properly. warning issued range set explicitly using importing function. function reads data latest GridStat version. latest version allows separation left right pole using following symbols /:- (hyphen, colon dash). Older versions may separate left right pole. cause labels assigned left pole importing. may fix simply entering one construct separator symbols GridStat file left right construct pole. third line GridStat file may contain labels statement (.e. line containing string 'NOLA', 'L', 'NoLa', 'L', 'Nola', 'l', 'nola' 'l'). case ratings supplied, hence, default names assigned elements constructs.","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridstat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import Gridstat data files. — importGridstat","text":"Bell, R. C. (1998)  GRIDSTAT: program analyzing data repertory grid. Melbourne: Author.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/importGridstat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Gridstat data files. — importGridstat","text":"","code":"if (FALSE) { # \\dontrun{  # supposing that the data file gridstat.dat is in the current working directory file <- \"gridstat.dat\" rg <- importGridstat(file)  # specifying a directory (example) dir <- \"/Users/markheckmann/data\" rg <- importGridstat(file, dir)  # using a full path (example) rg <- importGridstat(\"/Users/markheckmann/data/gridstat.dat\")  # setting rating scale range rg <- importGridstat(file, dir, min = 1, max = 6) } # }"},{"path":"https://docs.openrepgrid.org/reference/importGridstatInternal.html","id":null,"dir":"Reference","previous_headings":"","what":"Parser for Gridstat data files. — importGridstatInternal","title":"Parser for Gridstat data files. — importGridstatInternal","text":"Parse file format used latest version grid program gridstat (Bell, 1998).","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridstatInternal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parser for Gridstat data files. — importGridstatInternal","text":"","code":"importGridstatInternal(file, dir = NULL, min = NULL, max = NULL)"},{"path":"https://docs.openrepgrid.org/reference/importGridstatInternal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parser for Gridstat data files. — importGridstatInternal","text":"file filename including path file current working directory. File can also complete URL. fileformat .dat. dir alternative way supply directory file located (default NULL). min optional argument (numeric, default NULL) minimum rating value grid. max optional argument (numeric, default NULL) maximum rating value grid.","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridstatInternal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parser for Gridstat data files. — importGridstatInternal","text":"list imported parameters","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridstatInternal.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Parser for Gridstat data files. — importGridstatInternal","text":"","code":"Note that the gridstat data format does not contain explicit            information about the range of the rating scale (minimum and            maximum). By default the range is inferred by scanning            the ratings and picking the minimal and maximal values as rating            range. You can set the minimal and maximal value by hand using the `min` and            `max` arguments or by using the `setScale()` function.            Note that if the rating range is not set, it may cause several            functions to not work properly. A warning will be issued if the range is            not set explicitly when using the importing function.             The function only reads data from the latest GridStat version.            The latest version allows the separation of the left and right pole            by using on of the following symbols `/:-` (hyphen, colon and dash). Older versions may not            separate                              the left and right pole. This will cause all labels to be assigned to            the left pole only when importing. You may fix this by simply entering            one of the construct separator symbols into the GridStat file between each            left and right construct pole.             The third line of a GridStat file may contain a no labels statement (i.e. a            line containing any string of 'NOLA', 'NO L', 'NoLa', 'No L', 'Nola', 'No l',            'nola' or 'no l'). In this case only ratings are supplied, hence, default            names are assigned to elements and constructs.       Email from Richard: The gridstat file has a fixed format with a title line, number      of constructs and elements on second line. The third line can say No labels      (actually it looks at the first 4 characters which can be any of 'NOLA','NO L',      'NoLa','No L','Nola','No l','nola','no l') in which case it skips to the data and      creates dummy labels for elements and constructs, otherwise it reads the construct      labels then the element labels, then the data. Construct labels were originally      stored as one, hence it didn't matter what the separator between left and right      pole labels was, but in the latest version where constructs can be reversed, it      looks for a fixed separator - one of slash(/), dash(-), or colon(:). Some of my      old data files might not conform."},{"path":"https://docs.openrepgrid.org/reference/importGridstatInternal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Parser for Gridstat data files. — importGridstatInternal","text":"Bell, R. C. (1998)  GRIDSTAT: program analyzing data repertory grid. Melbourne: Author.","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridstatInternal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parser for Gridstat data files. — importGridstatInternal","text":"","code":"if (FALSE) { # \\dontrun{  # supposing that the data file gridstat.dat is in the current working directory file <- \"gridstat.dat\" imp <- importGridstatInternal(file)  # specifying a directory (example) dir <- \"/Users/markheckmann/data\" imp <- importGridstatInternal(file, dir)  # using a full path (example) imp <- importGridstatInternal(\"/Users/markheckmann/data/gridstat.dat\")  # setting rating scale range imp <- importGridstatInternal(file, dir, min = 1, max = 6) } # }"},{"path":"https://docs.openrepgrid.org/reference/importGridsuite.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Gridsuite data files. — importGridsuite","title":"Import Gridsuite data files. — importGridsuite","text":"Import Gridsuite data files.","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridsuite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Gridsuite data files. — importGridsuite","text":"","code":"importGridsuite(file, dir = NULL)"},{"path":"https://docs.openrepgrid.org/reference/importGridsuite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Gridsuite data files. — importGridsuite","text":"file Filename including path file current working directory. File can also complete URL. fileformat .dat. dir Alternative way supply directory file located (default NULL).","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridsuite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Gridsuite data files. — importGridsuite","text":"single repgrid object case one file list repgrid objects case multiple files imported.","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridsuite.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Import Gridsuite data files. — importGridsuite","text":"developers Gridsuite proposed use XML scheme standard exchange format repertory grid data (Walter, Bacher & Fromm, 2004). TODO: element construct IDs used yet. Thus, output different order current mechanism cause false assignments.","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridsuite.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import Gridsuite data files. — importGridsuite","text":"http://www.gridsuite.de/ Walter, O. B., Bacher, ., & Fromm, M. (2004). proposal  common data exchange format repertory grid data.Journal Constructivist Psychology, 17(3), 247. doi:10.1080/10720530490447167","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/importGridsuite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Gridsuite data files. — importGridsuite","text":"","code":"if (FALSE) { # \\dontrun{  # supposing that the data file gridsuite.xml is in the current directory file <- \"gridsuite.xml\" rg <- importGridsuite(file)  # specifying a directory (arbitrary example directory) dir <- \"/Users/markheckmann/data\" rg <- importGridsuite(file, dir)  # using a full path rg <- importGridsuite(\"/Users/markheckmann/data/gridsuite.xml\") } # }"},{"path":"https://docs.openrepgrid.org/reference/importGridsuiteInternal.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal parser for Gridsuite data files — importGridsuiteInternal","title":"Internal parser for Gridsuite data files — importGridsuiteInternal","text":"Internal parser Gridsuite data files","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridsuiteInternal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal parser for Gridsuite data files — importGridsuiteInternal","text":"","code":"importGridsuiteInternal(file, dir = NULL)"},{"path":"https://docs.openrepgrid.org/reference/importGridsuiteInternal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal parser for Gridsuite data files — importGridsuiteInternal","text":"file filename including path file current working directory. File can also complete URL. fileformat .dat. dir alternative way supply directory file located (default NULL).","code":""},{"path":"https://docs.openrepgrid.org/reference/importGridsuiteInternal.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Internal parser for Gridsuite data files — importGridsuiteInternal","text":"","code":"The developers of Gridsuite have proposed to use an XML scheme as            a standard exchange format for repertory grid data (Walter,            Bacher & Fromm, 2004). This approach is also embraced by the            `OpenRepGrid` package. TODO: The element and construct IDs are not used yet. Thus,            if the output should be in different order the current mechanism            will cause false assignments."},{"path":"https://docs.openrepgrid.org/reference/importGridsuiteInternal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Internal parser for Gridsuite data files — importGridsuiteInternal","text":"http://www.gridsuite.de/","code":"Walter, O. B., Bacher, A., & Fromm, M. (2004). A proposal            for a common data exchange format for repertory grid data.            *Journal of Constructivist Psychology, 17*(3), 247.            doi:10.1080/10720530490447167"},{"path":"https://docs.openrepgrid.org/reference/importGridsuiteInternal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal parser for Gridsuite data files — importGridsuiteInternal","text":"","code":"if (FALSE) { # \\dontrun{  # supposing that the data file gridsuite.xml is in the current directory file <- \"gridsuite.xml\" imp <- importGridsuite(file)  # specifying a directory (arbitrary example directory) dir <- \"/Users/markheckmann/data\" imp <- importGridsuite(file, dir)  # using a full path imp <- importGridsuite(\"/Users/markheckmann/data/gridsuite.xml\") } # }"},{"path":"https://docs.openrepgrid.org/reference/importScivesco.html","id":null,"dir":"Reference","previous_headings":"","what":"Import sci:vesco data files. — importScivesco","title":"Import sci:vesco data files. — importScivesco","text":"Import sci:vesco data files.","code":""},{"path":"https://docs.openrepgrid.org/reference/importScivesco.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import sci:vesco data files. — importScivesco","text":"","code":"importScivesco(file, dir = NULL)"},{"path":"https://docs.openrepgrid.org/reference/importScivesco.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import sci:vesco data files. — importScivesco","text":"file Filename including path file current working directory. File can also complete URL. fileformat .dat. dir Alternative way supply directory file located (default NULL).","code":""},{"path":"https://docs.openrepgrid.org/reference/importScivesco.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import sci:vesco data files. — importScivesco","text":"single repgrid object case one file list repgrid objects case multiple files imported.","code":""},{"path":"https://docs.openrepgrid.org/reference/importScivesco.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Import sci:vesco data files. — importScivesco","text":"Sci:Vesco offers options rate construct poles separately using bipolar scale. separated rating done using \"tetralemma\" field. field bivariate plane four (tetra) corners different meaning terms rating. Using approach also allows ratings like: \"poles apply\", \"none poles apply\" intermediate ratings can chosen. relaxes bipolarity assumption often assumed grid theory allows deviation strict bipolar rating constructs applied bipolar way. Using tetralemma field rating requires analyze construct separately though. means get double entry grid emergent contrast pole ratings might simply reflection another. tetralemma field yet supported importing fail. Currently bipolar ratings supported. tetralemma field used rating, OpenRepGrid offer option transform scores \"normal\" grid ratings (.e. restricted bipolarity) projecting ratings bivariate tetralemma field onto diagonal tetralemma field thus forcing bipolar rating type. option recommended due fact conversion susceptible error ratings near zero. TODO: developers: element IDs used yet. might cause wrong assignments.","code":""},{"path":"https://docs.openrepgrid.org/reference/importScivesco.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import sci:vesco data files. — importScivesco","text":"Menzel, F., Rosenberger, M., Buve, J. (2007). Emotionale, intuitive und rationale Konstrukte verstehen. Personalfuehrung, 4(7), 91-99.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/importScivesco.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import sci:vesco data files. — importScivesco","text":"","code":"if (FALSE) { # \\dontrun{  # supposing that the data file scivesco.scires is in the current directory file <- \"scivesco.scires\" rg <- importScivesco(file)  # specifying a directory (arbitrary example directory) dir <- \"/Users/markheckmann/data\" rg <- importScivesco(file, dir)  # using a full path rg <- importScivesco(\"/Users/markheckmann/data/scivesco.scires\") } # }"},{"path":"https://docs.openrepgrid.org/reference/importScivescoInternal.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal parser for sci:vesco files (suffix scires). — importScivescoInternal","title":"Internal parser for sci:vesco files (suffix scires). — importScivescoInternal","text":"Internal parser sci:vesco files (suffix scires).","code":""},{"path":"https://docs.openrepgrid.org/reference/importScivescoInternal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal parser for sci:vesco files (suffix scires). — importScivescoInternal","text":"","code":"importScivescoInternal(file, dir = NULL)"},{"path":"https://docs.openrepgrid.org/reference/importScivescoInternal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal parser for sci:vesco files (suffix scires). — importScivescoInternal","text":"file filename including path file current working directory. File can also complete URL. fileformat .dat. dir alternative way supply directory file located (default NULL).","code":""},{"path":"https://docs.openrepgrid.org/reference/importScivescoInternal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal parser for sci:vesco files (suffix scires). — importScivescoInternal","text":"list extracted parameters.","code":""},{"path":"https://docs.openrepgrid.org/reference/importScivescoInternal.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Internal parser for sci:vesco files (suffix scires). — importScivescoInternal","text":"","code":"Sci:Vesco offers the options to rate the construct poles separately or using            a bipolar scale. The separated rating is done using the \"tetralemma\" field.            The field is a bivariate plane on which each of the four (tetra) corners            has a different meaning in terms of rating. Using this approach also allows ratings            like: \"both poles apply\", \"none of the poles apply\" and all intermediate ratings            can be chosen. This relaxes the bipolarity assumption often assumed in grid theory and            allows for deviation from a strict bipolar rating if the constructs are not applied            in a bipolar way. Using the tetralemma field for rating requires to analyze            each construct separately though. This means we get a double entry grid where the            emergent and contrast pole ratings might not simply be a reflection of on another.            If a tetralemma field has been used for rating, `OpenRepGrid` offers the option            to transform the scores into \"normal\" grid ratings (i.e. restricted to bipolarity)            by projecting the ratings from the bivariate tetralemma field onto the diagonal            of the tetralemma field and thus forcing a bipolar rating type. This option is            not recommended due to the fact that the conversion is susceptible to error            when both ratings are near to zero. TODO: The element IDs are not used yet. This might cause wrong assignments."},{"path":"https://docs.openrepgrid.org/reference/importScivescoInternal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal parser for sci:vesco files (suffix scires). — importScivescoInternal","text":"","code":"if (FALSE) { # \\dontrun{  # supposing that the data file scivesco.scires is in the current directory file <- \"scivesco.scires\" imp <- importScivescoInternal(file)  # specifying a directory (arbitrary example directory) dir <- \"/Users/markheckmann/data\" imp <- importScivescoInternal(file, dir)  # using a full path imp <- importScivescoInternal(\"/Users/markheckmann/data/scivesco.scires\") } # }"},{"path":"https://docs.openrepgrid.org/reference/importTxt.html","id":null,"dir":"Reference","previous_headings":"","what":"Import grid data from a text file. — importTxt","title":"Import grid data from a text file. — importTxt","text":"can define grid using standard text editor saving .txt file. Details section describes required format .txt file. However, may also consider using Excel format instead, intuitive format (see importExcel()).","code":""},{"path":"https://docs.openrepgrid.org/reference/importTxt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import grid data from a text file. — importTxt","text":"","code":"importTxt(file, dir = NULL, min = NULL, max = NULL)"},{"path":"https://docs.openrepgrid.org/reference/importTxt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import grid data from a text file. — importTxt","text":"file vector filenames including full path file current working directory. File can also complete URL. file suffix .txt. dir Alternative way supply directory file located (default NULL). min Optional argument (numeric, default NULL) minimum rating value grid. max Optional argument (numeric, default NULL) maximum rating value grid.","code":""},{"path":"https://docs.openrepgrid.org/reference/importTxt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import grid data from a text file. — importTxt","text":"single repgrid object case one file list repgrid objects case multiple files imported.","code":""},{"path":"https://docs.openrepgrid.org/reference/importTxt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import grid data from a text file. — importTxt","text":".txt file fixed format. three mandatory blocks starting ending predefined tag uppercase letters. first block starts ELEMENTS ends END ELEMENTS contains one element line. mandatory blocks contain constructs ratings (see ). block containing constructs left right pole separated colon (:). define missing values use NA like example . One optional block contains range rating scale used defined two numbers. order blocks arbitrary. text contained within blocks discarded can thus used comments. content sample .txt file shown . package also contains sample file (see Examples).   Note maximum minimum value defined using min max arguments RANGE block contained data file. Otherwise scaling range inferred available data warning issued range may erroneous. may effect functions depend knowing correct range thus strongly recommended set scale range correctly.","code":"---------------- sample .txt file -------------------      Note: anything outside the tag pairs is discarded  ELEMENTS element 1 element 2 element 3 END ELEMENTS  CONSTRUCTS left pole 1 : right pole 1 left pole 2 : right pole 2 left pole 3 : right pole 3 left pole 4 : right pole 4 END CONSTRUCTS  RATINGS 1 3 2 4 1 1 1 4 4 3 1 1 END RATINGS  RANGE 1 4 END RANGE  ------------------ end of file ------------------"},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/importTxt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import grid data from a text file. — importTxt","text":"","code":"# Import a .txt file delivered along with the package file <- system.file(\"extdata\", \"grid_01.txt\", package = \"OpenRepGrid\") rg <- importTxt(file)  if (FALSE) { # \\dontrun{ # To see the structure of the Excel file try to open it as follows. # May not work on all systems. file.show(file) } # }  # Import more than one .txt file files <- system.file(\"extdata\", c(\"grid_01.txt\", \"grid_02.txt\"), package = \"OpenRepGrid\") rgs <- importTxt(files)"},{"path":"https://docs.openrepgrid.org/reference/importTxtInternal.html","id":null,"dir":"Reference","previous_headings":"","what":"ImportTxtInternal is the parser for importTxt. — importTxtInternal","title":"ImportTxtInternal is the parser for importTxt. — importTxtInternal","text":"ImportTxtInternal parser importTxt constructs import object. .txt file fixed format. three mandatory blocks starting ending predefined tag uppercase letters. first block starts ELEMENTS ends END ELEMENTS contains one element line. mandatory blocks contain constructs ratings (see ). block containing constructs left right pole separated colon (:). define missing values use NA like example . One optional block contains range rating scale used defined two numbers. order blocks arbitrary. text contained within blocks discarded can thus used comments.","code":""},{"path":"https://docs.openrepgrid.org/reference/importTxtInternal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ImportTxtInternal is the parser for importTxt. — importTxtInternal","text":"","code":"importTxtInternal(file, dir = NULL, min = NULL, max = NULL)"},{"path":"https://docs.openrepgrid.org/reference/importTxtInternal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ImportTxtInternal is the parser for importTxt. — importTxtInternal","text":"file Filename including path file current working directory. File can also complete URL. fileformat .txt. dir Alternative way supply directory file located (default NULL). min Optional argument (numeric, default NULL) minimum rating value grid. max Optional argument (numeric, default NULL) maximum rating value grid.","code":""},{"path":"https://docs.openrepgrid.org/reference/importTxtInternal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ImportTxtInternal is the parser for importTxt. — importTxtInternal","text":"List relevant data.","code":""},{"path":"https://docs.openrepgrid.org/reference/importTxtInternal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ImportTxtInternal is the parser for importTxt. — importTxtInternal","text":"Note maximum minimum value defined using min max arguments RANGE block contained data file. Otherwise scaling range inferred available data warning issued range may erroneous. may effect functions depend knowing correct range thus strongly recommended set scale range correctly. Question marks (?) ratings treated missing data.","code":"---------------- sample .txt file -------------------      Note: anything outside the tag pairs is discarded  ELEMENTS element 1 element 2 element 3 END ELEMENTS  CONSTRUCTS left pole 1 : right pole 1 left pole 2 : right pole 2 left pole 3 : right pole 3 left pole 4 : right pole 4 END CONSTRUCTS  RATINGS 1 3 2 4 1 1 1 4 4 3 1 1 END RATINGS  RANGE 1 4 END RANGE  ------------------ end of file ------------------"},{"path":"https://docs.openrepgrid.org/reference/importTxtInternal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ImportTxtInternal is the parser for importTxt. — importTxtInternal","text":"","code":"if (FALSE) { # \\dontrun{  # supposing that the data file sample.txt is in the current directory file <- \"sample.txt\" imp <- importTxtInternal(file)  # specifying a directory (arbitrary example directory) dir <- \"/Users/markheckmann/data\" imp <- importTxtInternal(file, dir)  # using a full path imp <- importTxtInternal(\"/Users/markheckmann/data/sample.txt\") } # }"},{"path":"https://docs.openrepgrid.org/reference/indexBias.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate 'bias' of grid as defined by Slater (1977). — indexBias","title":"Calculate 'bias' of grid as defined by Slater (1977). — indexBias","text":"\"Bias records tendency responses accumulate one end grading scale\" (Slater, 1977, p.88).","code":""},{"path":"https://docs.openrepgrid.org/reference/indexBias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate 'bias' of grid as defined by Slater (1977). — indexBias","text":"","code":"indexBias(x, min = NULL, max = NULL, digits = 2)"},{"path":"https://docs.openrepgrid.org/reference/indexBias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate 'bias' of grid as defined by Slater (1977). — indexBias","text":"x repgrid object. min, max Minimum maximum grid scale values. needed set grid. digits Numeric. Number digits round (default 2).","code":""},{"path":"https://docs.openrepgrid.org/reference/indexBias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate 'bias' of grid as defined by Slater (1977). — indexBias","text":"Numeric.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexBias.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate 'bias' of grid as defined by Slater (1977). — indexBias","text":"STATUS: Working checked example Slater, 1977, p. 87.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexBias.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate 'bias' of grid as defined by Slater (1977). — indexBias","text":"Slater, P. (1977). measurement intrapersonal space Grid technique. London: Wiley.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/indexBias.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate 'bias' of grid as defined by Slater (1977). — indexBias","text":"","code":"indexBias(boeker) #>  max  #> 0.22"},{"path":"https://docs.openrepgrid.org/reference/indexBieri.html","id":null,"dir":"Reference","previous_headings":"","what":"Bieri's index of cognitive complexity — indexBieri","title":"Bieri's index of cognitive complexity — indexBieri","text":"index builds number rating matches pairs constructs. relation total number matches possible number matches.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexBieri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bieri's index of cognitive complexity — indexBieri","text":"","code":"indexBieri(x, deviation = 0)"},{"path":"https://docs.openrepgrid.org/reference/indexBieri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bieri's index of cognitive complexity — indexBieri","text":"x repgrid object. deviation Maximal difference ratings considered match (default 0 = identical scores match).","code":""},{"path":"https://docs.openrepgrid.org/reference/indexBieri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bieri's index of cognitive complexity — indexBieri","text":"List class indexBieri: grid: grid used calculate index deviation deviation parameter. matches_max Maximum possible number matches across constructs. matches Total number matches across constructs. constructs: Matrix . matches constructs. bieri: Bieri index (= matches / matches_max)","code":""},{"path":"https://docs.openrepgrid.org/reference/indexBieri.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bieri's index of cognitive complexity — indexBieri","text":"CAVEAT: Bieri index change constructs reversed.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexBieri.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bieri's index of cognitive complexity — indexBieri","text":"","code":"m <- indexBieri(boeker)  # several output options print(m) #>  #> ###################### #> BIERI COMPLEXITY INDEX #> ###################### #>  #> Bieri: 0.24 #>  #> Maximal rating difference to count as match:  0 #> Total no. of matches between constructs:  327 #> Maximum possible no. of matches between constructs:  1365 print(m, output = \"IC\")  # construct matches #>  #> ###################### #> BIERI COMPLEXITY INDEX #> ###################### #>  #> Bieri: 0.24 #>  #> Maximal rating difference to count as match:  0 #> Total no. of matches between constructs:  327 #> Maximum possible no. of matches between constructs:  1365 #>  #> MATCHES BETWEEN CONSTRUCTS #>  #>                                            1  2  3  4  5  6  7  8  9 10 11 12 #> 1  balanced - get along with conflicts  1     2  3  2  6  5  4  4  6  1  4  5 #> 2                  isolated - sociable  2        3  2  4  3  2  3  2  4  1  5 #> 3        closely integrated - excluded  3           4  3  0  5  5  2  2  5  5 #> 4                 discursive - passive  4              6  4  4  4  6  1  3  3 #> 5            open minded - indifferent  5                 4  5  4  7  2  4  7 #> 6               dreamy - dispassionate  6                    4  6  8  4  2  4 #> 7     practically oriented - depressed  7                       3  8  1  5  4 #> 8                    playful - serious  8                          3  3  2  6 #> 9            socially minded - selfish  9                             0  2  6 #> 10              quarrelsome - peaceful 10                                3  3 #> 11                artistic - technical 11                                   3 #> 12              scientific - emotional 12                                     #> 13               introvert - extrovert 13                                     #> 14          wanderlust - home oriented 14                                     #>    13 14 #> 1   4  6 #> 2   6  2 #> 3   4  2 #> 4   3  2 #> 5   4  3 #> 6   2  4 #> 7   2  3 #> 8   8  3 #> 9   2  5 #> 10  3  0 #> 11  0  3 #> 12  4  3 #> 13     3 #> 14        # extract the matrix of matches m$constructs #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>  [1,]   NA    2    3    2    6    5    4    4    6     1     4     5     4 #>  [2,]    2   NA    3    2    4    3    2    3    2     4     1     5     6 #>  [3,]    3    3   NA    4    3    0    5    5    2     2     5     5     4 #>  [4,]    2    2    4   NA    6    4    4    4    6     1     3     3     3 #>  [5,]    6    4    3    6   NA    4    5    4    7     2     4     7     4 #>  [6,]    5    3    0    4    4   NA    4    6    8     4     2     4     2 #>  [7,]    4    2    5    4    5    4   NA    3    8     1     5     4     2 #>  [8,]    4    3    5    4    4    6    3   NA    3     3     2     6     8 #>  [9,]    6    2    2    6    7    8    8    3   NA     0     2     6     2 #> [10,]    1    4    2    1    2    4    1    3    0    NA     3     3     3 #> [11,]    4    1    5    3    4    2    5    2    2     3    NA     3     0 #> [12,]    5    5    5    3    7    4    4    6    6     3     3    NA     4 #> [13,]    4    6    4    3    4    2    2    8    2     3     0     4    NA #> [14,]    6    2    2    2    3    4    3    3    5     0     3     3     3 #>       [,14] #>  [1,]     6 #>  [2,]     2 #>  [3,]     2 #>  [4,]     2 #>  [5,]     3 #>  [6,]     4 #>  [7,]     3 #>  [8,]     3 #>  [9,]     5 #> [10,]     0 #> [11,]     3 #> [12,]     3 #> [13,]     3 #> [14,]    NA  # CAVEAT: Bieri's index changes when constructs are reversed nr <- nrow(boeker) l <- replicate(1000, swapPoles(boeker, sample(nr, sample(nr, 1)))) bieri <- sapply(l, function(x) indexBieri(x)$bieri) hist(bieri, breaks = 50) abline(v = mean(bieri), col = \"red\", lty = 2)"},{"path":"https://docs.openrepgrid.org/reference/indexConflict1.html","id":null,"dir":"Reference","previous_headings":"","what":"Conflict measure for grids (Slade & Sheehan, 1979) based on correlations. — indexConflict1","title":"Conflict measure for grids (Slade & Sheehan, 1979) based on correlations. — indexConflict1","text":"Conflict measure proposed Slade Sheehan (1979)","code":""},{"path":"https://docs.openrepgrid.org/reference/indexConflict1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conflict measure for grids (Slade & Sheehan, 1979) based on correlations. — indexConflict1","text":"","code":"indexConflict1(x)"},{"path":"https://docs.openrepgrid.org/reference/indexConflict1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conflict measure for grids (Slade & Sheehan, 1979) based on correlations. — indexConflict1","text":"x repgrid object.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexConflict1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conflict measure for grids (Slade & Sheehan, 1979) based on correlations. — indexConflict1","text":"list following elements: total: Total number triads imbalanced: Number imbalanced triads prop.balanced: Proportion balanced triads prop.imbalanced: Proportion imbalanced triads","code":""},{"path":"https://docs.openrepgrid.org/reference/indexConflict1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conflict measure for grids (Slade & Sheehan, 1979) based on correlations. — indexConflict1","text":"first approach mathematically derive conflict measure based grid data presented Slade Sheehan (1979). operationalization based approach Lauterbach (1975) applied balance theory (Heider, 1958) quantitative assessment psychological conflict. based count balanced imbalanced triads construct correlations. triad imbalanced one three correlations negative, . e. leading contrary implications. approach shown Winter (1982) flawed. improved version proposed Bassler et al. (1992) implemented function indexConflict2. table shows triad made constructs , B, C balanced imbalanced:","code":""},{"path":"https://docs.openrepgrid.org/reference/indexConflict1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Conflict measure for grids (Slade & Sheehan, 1979) based on correlations. — indexConflict1","text":"Bassler, M., Krauthauser, H., & Hoffmann, S. O. (1992). new approach identification cognitive conflicts repertory grid: illustrative case study. Journal Constructivist Psychology, 5(1), 95-111. Heider, F. (1958). Psychology Interpersonal Relation. John Wiley & Sons. Lauterbach, W. (1975). Assessing psychological conflict. British Journal Social Clinical Psychology, 14(1), 43-47. Slade, P. D., & Sheehan, M. J. (1979). measurement 'conflict' repertory grids. British Journal Psychology, 70(4), 519-524. Winter, D. . (1982). Construct relationships, psychological disorder therapeutic change. British Journal Medical Psychology, 55 (Pt 3), 257-269.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/indexConflict1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conflict measure for grids (Slade & Sheehan, 1979) based on correlations. — indexConflict1","text":"","code":"indexConflict1(feixas2004) #>  #> ################################ #> Conflicts based on correlations #> ################################ #>  #> As devised by Slade & Sheehan (1979) #>  #> Total number of triads: 1140 #> Number of imbalanced triads: 266 #>  #> Proportion of balanced triads: 76.7 % #> Proportion of imbalanced triads: 23.3 % indexConflict1(boeker) #>  #> ################################ #> Conflicts based on correlations #> ################################ #>  #> As devised by Slade & Sheehan (1979) #>  #> Total number of triads: 364 #> Number of imbalanced triads: 106 #>  #> Proportion of balanced triads: 70.9 % #> Proportion of imbalanced triads: 29.1 %"},{"path":"https://docs.openrepgrid.org/reference/indexConflict2.html","id":null,"dir":"Reference","previous_headings":"","what":"Conflict measure for grids (Bassler et al., 1992) based on correlations. — indexConflict2","title":"Conflict measure for grids (Bassler et al., 1992) based on correlations. — indexConflict2","text":"function calculates conflict measure devised Bassler et al. (1992). improved version ideas Slade Sheehan (1979) implemented function indexConflict1(). new approach also takes account magnitude correlations trait assess whether balanced imbalanced. result, small correlations psychologically meaningless considered accordingly. Also, correlations  small magnitude, . e. near zero, may  positive negative due chance alone longer distort measure (Bassler et al., 1992).","code":""},{"path":"https://docs.openrepgrid.org/reference/indexConflict2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conflict measure for grids (Bassler et al., 1992) based on correlations. — indexConflict2","text":"","code":"indexConflict2(x, crit = 0.03)"},{"path":"https://docs.openrepgrid.org/reference/indexConflict2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conflict measure for grids (Bassler et al., 1992) based on correlations. — indexConflict2","text":"x repgrid object. crit Sensitivity criterion triads marked unbalanced. bigger values lead less imbalanced triads. default 0.03. value adjusted regard researchers interest.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexConflict2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conflict measure for grids (Bassler et al., 1992) based on correlations. — indexConflict2","text":"Description balance / imbalance assessment: Order correlations triad absolute magnitude, \\( r_{max} > r_{mdn} > r_{min}\\), \\(r_{max} > r_{mdn} > r_{min}\\). Apply Fisher's Z-transformation division 3 yield values 1 -1  (\\( Z_{max} > Z_{mdn} > Z_{min}, Z_{max} > Z_{mdn} > Z_{min}\\)). Check whether triad balanced assessing following relation holds: \\(Z_{max} Z_{mdn} > 0, Z_{max} x Z_{mdn} > 0\\), triad balanced \\(Z_{max} Z_{mdn} - Z_{min} <= crit\\), \\(Z_{max} x Z_{mdn} - Z_{min} <= crit\\). \\(Z_{max} Z_{mdn} < 0,  Z_{max} x Z_{mdn} < 0\\), triad balanced \\(Z_{min} - Z_{max} Z_{mdn} <= crit\\), \\(Z_{min} - Z_{max} x Z_{mdn} <= crit\\).","code":""},{"path":"https://docs.openrepgrid.org/reference/indexConflict2.html","id":"personal-remarks-mh-","dir":"Reference","previous_headings":"","what":"Personal remarks (MH)","title":"Conflict measure for grids (Bassler et al., 1992) based on correlations. — indexConflict2","text":"bit suspicious step 2 . devide 3 appears pretty arbitrary. r z-values 3 0.9950548 1. r 4 0.9993293. Hence, value 4, 5, 6? Denoting value devide , relation first case translates \\( Z_{max}  Z_{mdn} <= \\frac{crit}{} + Z_{min}\\), \\(x Z_{max} x Z_{mdn} =< crit/+ Z_{min}\\). shows bigger value make improbable relation hold.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexConflict2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Conflict measure for grids (Bassler et al., 1992) based on correlations. — indexConflict2","text":"Bassler, M., Krauthauser, H., & Hoffmann, S. O. (1992). new approach identification cognitive conflicts repertory grid: illustrative case study. Journal Constructivist Psychology, 5(1), 95-111. Slade, P. D., & Sheehan, M. J. (1979). measurement 'conflict' repertory grids. British Journal Psychology, 70(4), 519-524.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/indexConflict2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conflict measure for grids (Bassler et al., 1992) based on correlations. — indexConflict2","text":"","code":"indexConflict2(bell2010) #>  #> ############################### #> Conflicts based on correlations #> ############################### #>  #> As devised by Bassler et al. (1992) #>  #> Total number of triads: 84 #> Number of imbalanced triads: 63 #>  #> Proportion of balanced triads: 25 % #> Proportion of imbalanced triads: 75 %  x <- indexConflict2(bell2010) print(x) #>  #> ############################### #> Conflicts based on correlations #> ############################### #>  #> As devised by Bassler et al. (1992) #>  #> Total number of triads: 84 #> Number of imbalanced triads: 63 #>  #> Proportion of balanced triads: 25 % #> Proportion of imbalanced triads: 75 %  # show conflictive triads print(x, output = 2) #>  #> ############################### #> Conflicts based on correlations #> ############################### #>  #> As devised by Bassler et al. (1992) #>  #> Total number of triads: 84 #> Number of imbalanced triads: 63 #>  #> Proportion of balanced triads: 25 % #> Proportion of imbalanced triads: 75 % #>  #> Constructs that form imbalanced triads: #>             #> 1  1  2   4 #> 2  1  2   7 #> 3  1  2   8 #> 4  1  3   8 #> 5  1  3   9 #> 6  1  4   5 #> 7  1  4   6 #> 8  1  4   7 #> 9  1  4   8 #> 10 1  4   9 #> 11 1  5   8 #> 12 1  5   9 #> 13 1  6   7 #> 14 1  6   8 #> 15 1  7   8 #> 16 1  7   9 #> 17 1  8   9 #> 18 2  3   5 #> 19 2  3   6 #> 20 2  3   7 #> 21 2  3   8 #> 22 2  3   9 #> 23 2  4   5 #> 24 2  4   6 #> 25 2  4   7 #> 26 2  4   8 #> 27 2  4   9 #> 28 2  5   6 #> 29 2  5   7 #> 30 2  5   8 #> 31 2  5   9 #> 32 2  6   7 #> 33 2  6   8 #> 34 2  7   8 #> 35 2  7   9 #> 36 3  4   5 #> 37 3  4   6 #> 38 3  4   8 #> 39 3  4   9 #> 40 3  5   6 #> 41 3  5   8 #> 42 3  6   8 #> 43 3  6   9 #> 44 3  7   8 #> 45 3  7   9 #> 46 3  8   9 #> 47 4  5   7 #> 48 4  5   8 #> 49 4  6   7 #> 50 4  6   8 #> 51 4  6   9 #> 52 4  7   8 #> 53 4  8   9 #> 54 5  6   7 #> 55 5  6   8 #> 56 5  6   9 #> 57 5  7   8 #> 58 5  7   9 #> 59 5  8   9 #> 60 6  7   8 #> 61 6  7   9 #> 62 6  8   9 #> 63 7  8   9  # accessing the calculations for further use x$total #> [1] 84 x$imbalanced #> [1] 63 x$prop.balanced #> [1] 0.25 x$prop.imbalanced #> [1] 0.75 x$triads.imbalanced #>       [,1] [,2] [,3] #>  [1,]    1    2    4 #>  [2,]    1    2    7 #>  [3,]    1    2    8 #>  [4,]    1    3    8 #>  [5,]    1    3    9 #>  [6,]    1    4    5 #>  [7,]    1    4    6 #>  [8,]    1    4    7 #>  [9,]    1    4    8 #> [10,]    1    4    9 #> [11,]    1    5    8 #> [12,]    1    5    9 #> [13,]    1    6    7 #> [14,]    1    6    8 #> [15,]    1    7    8 #> [16,]    1    7    9 #> [17,]    1    8    9 #> [18,]    2    3    5 #> [19,]    2    3    6 #> [20,]    2    3    7 #> [21,]    2    3    8 #> [22,]    2    3    9 #> [23,]    2    4    5 #> [24,]    2    4    6 #> [25,]    2    4    7 #> [26,]    2    4    8 #> [27,]    2    4    9 #> [28,]    2    5    6 #> [29,]    2    5    7 #> [30,]    2    5    8 #> [31,]    2    5    9 #> [32,]    2    6    7 #> [33,]    2    6    8 #> [34,]    2    7    8 #> [35,]    2    7    9 #> [36,]    3    4    5 #> [37,]    3    4    6 #> [38,]    3    4    8 #> [39,]    3    4    9 #> [40,]    3    5    6 #> [41,]    3    5    8 #> [42,]    3    6    8 #> [43,]    3    6    9 #> [44,]    3    7    8 #> [45,]    3    7    9 #> [46,]    3    8    9 #> [47,]    4    5    7 #> [48,]    4    5    8 #> [49,]    4    6    7 #> [50,]    4    6    8 #> [51,]    4    6    9 #> [52,]    4    7    8 #> [53,]    4    8    9 #> [54,]    5    6    7 #> [55,]    5    6    8 #> [56,]    5    6    9 #> [57,]    5    7    8 #> [58,]    5    7    9 #> [59,]    5    8    9 #> [60,]    6    7    8 #> [61,]    6    7    9 #> [62,]    6    8    9 #> [63,]    7    8    9"},{"path":"https://docs.openrepgrid.org/reference/indexConflict3.html","id":null,"dir":"Reference","previous_headings":"","what":"Conflict or inconsistency measure for grids (Bell, 2004) based on distances. — indexConflict3","title":"Conflict or inconsistency measure for grids (Bell, 2004) based on distances. — indexConflict3","text":"Measure conflict inconsistency proposed Bell (2004). identification conflict based distances rather correlations measures conflict indexConflict1() indexConflict2(). assesses distances components triad, made one element two constructs, satisfies \"triangle inequality\" (cf. Bell, 2004). , triad regarded conflictive. advantage measure can interpreted global measure grid also element, construct, element construct level making valuable detailed feedback. Also, differences conflict can submitted statistical testing procedures.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexConflict3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conflict or inconsistency measure for grids (Bell, 2004) based on distances. — indexConflict3","text":"","code":"indexConflict3(   x,   p = 2,   e.out = NA,   e.threshold = NA,   c.out = NA,   c.threshold = NA,   trim = 20 )"},{"path":"https://docs.openrepgrid.org/reference/indexConflict3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conflict or inconsistency measure for grids (Bell, 2004) based on distances. — indexConflict3","text":"x repgrid object. p power Minkowski distance. p=2 (default) result euclidean distances, p=1 city block distances. e.Numeric. vector giving indexes elements detailed stats (number conflicts per element, discrepancies triangles etc.) prompted (default NA, .e. detailed stats element). e.threshold Numeric. Detailed stats prompted elements attributable percentage overall conflicts higher supplied threshold (default NA). c.Numeric. vector giving indexes constructs detailed stats (discrepancies triangles etc.) prompted (default NA, . e. detailed stats). c.threshold Numeric. Detailed stats prompted constructs attributable percentage overall conflicts higher supplied threshold (default NA). trim number characters construct (element) trimmed (default 10). NA trimming done. Trimming simply saves space displaying output.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexConflict3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conflict or inconsistency measure for grids (Bell, 2004) based on distances. — indexConflict3","text":"list (invisibly) containing: potential: number potential conflicts actual: count actual conflicts overall: percentage conflictive relations e.count: number involvements element conflictive relations e.perc: percentage involvement element total conflictive relations c.count: number involvements construct conflictive relation c.perc: percentage involvement construct total conflictive relations e.stats: detailed statistics prompted elements c.stats: detailed statistics prompted constructs e.threshold: threshold percentage. Used print method c.threshold: threshold percentage. Used print method enames: trimmed element names. Used print method cnames: trimmed construct names. Used print method","code":""},{"path":"https://docs.openrepgrid.org/reference/indexConflict3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conflict or inconsistency measure for grids (Bell, 2004) based on distances. — indexConflict3","text":"Status:  working; output euclidean manhattan distance checked Gridstat output.  TODO:    standardization z-test discrepancies; Index Conflict Variation.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexConflict3.html","id":"output","dir":"Reference","previous_headings":"","what":"output","title":"Conflict or inconsistency measure for grids (Bell, 2004) based on distances. — indexConflict3","text":"control output see print.indexConflict3().","code":""},{"path":"https://docs.openrepgrid.org/reference/indexConflict3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Conflict or inconsistency measure for grids (Bell, 2004) based on distances. — indexConflict3","text":"Bell, R. C. (2004). new approach measuring inconsistency conflict grids. Personal Construct Theory & Practice, (1), 53-59.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/indexConflict3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conflict or inconsistency measure for grids (Bell, 2004) based on distances. — indexConflict3","text":"","code":"# calculate conflicts indexConflict3(bell2010) #>  #> ########################################################## #> CONFLICT OR INCONSISTENCIES BASED ON TRIANGLE INEQUALITIES #> ########################################################## #>  #> Potential conflicts in grid:  360 #> Actual conflicts in grid:  123 #> Overall percentage of conflict in grid:  34.17 % #>  #> ELEMENTS #> ######## #>  #> Percent of conflict attributable to element: #>  #>                         percentage #> 1 self                      162.60 #> 2 closest friend of th     1382.11 #> 3 the unhappiest perso      406.50 #> 4 A person of the oppo      650.41 #> 5 A teacher you respec     1056.91 #> 6 Mother (or the perso     1138.21 #> 7 A person of the oppo      813.01 #> 8 The most confident p     1788.62 #> 9 A person you work we     1138.21 #> 10 A teacher you did no    1463.41 #>  #> Chi-square test of equal count of conflicts for elements. #>  #> \tChi-squared test for given probabilities #>  #> data:  x$e.count #> X-squared = 27.488, df = 9, p-value = 0.001161 #>  #>  #> CONSTRUCTS #> ########## #>  #> Percent of conflict attributable to construct: #>  #>                           percentage #> 1 relaxed - worried &          10.16 #> 2 not so sma - smart (aca      11.38 #> 3 dislikes s - loves spor      13.01 #> 4 not intera - loves peop      10.57 #> 5 not transp - transparen      12.60 #> 6 insensitiv - sensitive       12.20 #> 7 fearful&ti - fearless        10.16 #> 8 rough - gentle               11.38 #> 9 accept as  - loves to a       8.54 #>  #> Chi-square test of equal count of conflicts for constructs. #>  #> \tChi-squared test for given probabilities #>  #> data:  x$c.count #> X-squared = 3.5122, df = 8, p-value = 0.8982 #>   # show additional stats for elements 1 to 3 indexConflict3(bell2010, e.out = 1:3) #>  #> ########################################################## #> CONFLICT OR INCONSISTENCIES BASED ON TRIANGLE INEQUALITIES #> ########################################################## #>  #> Potential conflicts in grid:  360 #> Actual conflicts in grid:  123 #> Overall percentage of conflict in grid:  34.17 % #>  #> ELEMENTS #> ######## #>  #> Percent of conflict attributable to element: #>  #>                         percentage #> 1 self                      162.60 #> 2 closest friend of th     1382.11 #> 3 the unhappiest perso      406.50 #> 4 A person of the oppo      650.41 #> 5 A teacher you respec     1056.91 #> 6 Mother (or the perso     1138.21 #> 7 A person of the oppo      813.01 #> 8 The most confident p     1788.62 #> 9 A person you work we     1138.21 #> 10 A teacher you did no    1463.41 #>  #> Chi-square test of equal count of conflicts for elements. #>  #> \tChi-squared test for given probabilities #>  #> data:  x$e.count #> X-squared = 27.488, df = 9, p-value = 0.001161 #>  #>  #> CONSTRUCTS #> ########## #>  #> Percent of conflict attributable to construct: #>  #>                           percentage #> 1 relaxed - worried &          10.16 #> 2 not so sma - smart (aca      11.38 #> 3 dislikes s - loves spor      13.01 #> 4 not intera - loves peop      10.57 #> 5 not transp - transparen      12.60 #> 6 insensitiv - sensitive       12.20 #> 7 fearful&ti - fearless        10.16 #> 8 rough - gentle               11.38 #> 9 accept as  - loves to a       8.54 #>  #> Chi-square test of equal count of conflicts for constructs. #>  #> \tChi-squared test for given probabilities #>  #> data:  x$c.count #> X-squared = 3.5122, df = 8, p-value = 0.8982 #>  #>  #>  #> CONFLICTS BY ELEMENT #> #################### #>  #>  #> ### Element:  1 self  #>  #> Number of conflicting construct pairs:  2  #>  #> Construct conflict discrepanciesercent of conflict attributable to each construct: #>  #>                           percentage #> 1 relaxed - worried &              0 #> 2 not so sma - smart (aca          0 #> 3 dislikes s - loves spor         25 #> 4 not intera - loves peop          0 #> 5 not transp - transparen         25 #> 6 insensitiv - sensitive          50 #> 7 fearful&ti - fearless            0 #> 8 rough - gentle                   0 #> 9 accept as  - loves to a          0 #>  #> Av. level of discrepancy:    0.01  #>  #> Std. dev. of discrepancies:  0.176  #>  #>  #> ### Element:  2 closest friend of th  #>  #> Number of conflicting construct pairs:  17  #>  #> Construct conflict discrepancies: #>  #>       1    2    3    4    5    6    7    8    9 #> 1                                               #> 2  0.53                                         #> 3  <NA> 1.35                                    #> 4  0.19 <NA> 1.81                               #> 5  <NA> 0.55 <NA> 1.51                          #> 6  0.37 <NA> 1.17 <NA> 0.33                     #> 7  <NA> 1.59 <NA> 1.75 <NA> 0.03                #> 8  0.47 <NA> 0.62 <NA> 0.17 <NA> <NA>           #> 9  <NA> 0.55 <NA>  0.8 <NA> <NA> <NA> <NA>      #>  #> Percent of conflict attributable to each construct: #>  #>                           percentage #> 1 relaxed - worried &          11.76 #> 2 not so sma - smart (aca      14.71 #> 3 dislikes s - loves spor      11.76 #> 4 not intera - loves peop      14.71 #> 5 not transp - transparen      11.76 #> 6 insensitiv - sensitive       11.76 #> 7 fearful&ti - fearless         8.82 #> 8 rough - gentle                8.82 #> 9 accept as  - loves to a       5.88 #>  #> Av. level of discrepancy:    0.34  #>  #> Std. dev. of discrepancies:  0.583  #>  #>  #> ### Element:  3 the unhappiest perso  #>  #> Number of conflicting construct pairs:  5  #>  #> Construct conflict discrepancies: #>  #>       1    2    3    4    5    6    7    8    9 #> 1                                               #> 2  <NA>                                         #> 3  <NA> <NA>                                    #> 4  <NA> <NA> <NA>                               #> 5  <NA> <NA> 0.11 <NA>                          #> 6  <NA> <NA> 0.03 <NA> <NA>                     #> 7  <NA>  0.4 1.27 <NA> <NA> <NA>                #> 8  <NA> <NA> <NA> <NA> <NA> <NA> <NA>           #> 9  <NA> <NA> <NA> <NA> <NA> <NA> 1.18 <NA>      #>  #> Percent of conflict attributable to each construct: #>  #>                           percentage #> 1 relaxed - worried &              0 #> 2 not so sma - smart (aca         10 #> 3 dislikes s - loves spor         30 #> 4 not intera - loves peop          0 #> 5 not transp - transparen         10 #> 6 insensitiv - sensitive          10 #> 7 fearful&ti - fearless           30 #> 8 rough - gentle                   0 #> 9 accept as  - loves to a         10 #>  #> Av. level of discrepancy:    0.07  #>  #> Std. dev. of discrepancies:  0.556   # show additional stats for constructs 1 and 5 indexConflict3(bell2010, c.out = c(1, 5)) #>  #> ########################################################## #> CONFLICT OR INCONSISTENCIES BASED ON TRIANGLE INEQUALITIES #> ########################################################## #>  #> Potential conflicts in grid:  360 #> Actual conflicts in grid:  123 #> Overall percentage of conflict in grid:  34.17 % #>  #> ELEMENTS #> ######## #>  #> Percent of conflict attributable to element: #>  #>                         percentage #> 1 self                      162.60 #> 2 closest friend of th     1382.11 #> 3 the unhappiest perso      406.50 #> 4 A person of the oppo      650.41 #> 5 A teacher you respec     1056.91 #> 6 Mother (or the perso     1138.21 #> 7 A person of the oppo      813.01 #> 8 The most confident p     1788.62 #> 9 A person you work we     1138.21 #> 10 A teacher you did no    1463.41 #>  #> Chi-square test of equal count of conflicts for elements. #>  #> \tChi-squared test for given probabilities #>  #> data:  x$e.count #> X-squared = 27.488, df = 9, p-value = 0.001161 #>  #>  #> CONSTRUCTS #> ########## #>  #> Percent of conflict attributable to construct: #>  #>                           percentage #> 1 relaxed - worried &          10.16 #> 2 not so sma - smart (aca      11.38 #> 3 dislikes s - loves spor      13.01 #> 4 not intera - loves peop      10.57 #> 5 not transp - transparen      12.60 #> 6 insensitiv - sensitive       12.20 #> 7 fearful&ti - fearless        10.16 #> 8 rough - gentle               11.38 #> 9 accept as  - loves to a       8.54 #>  #> Chi-square test of equal count of conflicts for constructs. #>  #> \tChi-squared test for given probabilities #>  #> data:  x$c.count #> X-squared = 3.5122, df = 8, p-value = 0.8982 #>  #>  #>  #> CONFLICTS BY CONSTRUCT #> ###################### #>  #>  #> ### Construct:  1 relaxed - worried &   #>  #> Element-construct conflict discrepancies: #>  #>      e1   e2   e3   e4   e5   e6   e7   e8   e9  e10 #> c1                                                   #> c2 <NA>                                              #> c3 <NA> <NA>                                         #> c4 <NA> 0.19 <NA>                                    #> c5 <NA> <NA> <NA> <NA>                               #> c6 <NA> 0.37 <NA> <NA> <NA>                          #> c7 <NA> <NA> <NA> <NA> <NA>    1                     #> c8 <NA> 0.47 <NA> <NA> 0.47 <NA> 0.47                #> c9 <NA> <NA> <NA> <NA> <NA> <NA> <NA> 3.44           #>  #> Av. level of discrepancy:    0.38  #>  #> Std. dev. of discrepancies:  0.973  #>  #>  #> ### Construct:  5 not transp - transparen  #>  #> Element-construct conflict discrepancies: #>  #>      e1   e2   e3   e4   e5   e6   e7   e8   e9  e10 #> c1                                                   #> c2 <NA>                                              #> c3 <NA> <NA>                                         #> c4 <NA> 1.51 <NA>                                    #> c5 <NA> <NA> <NA> <NA>                               #> c6 0.33 0.33 <NA> 1.51 <NA>                          #> c7 <NA> <NA> <NA> <NA>  0.3 2.75                     #> c8 <NA> 0.17 <NA> 1.33 0.17 <NA> <NA>                #> c9 <NA> <NA> <NA> <NA> <NA>  1.8 <NA> 0.59           #>  #> Av. level of discrepancy:    0.32  #>  #> Std. dev. of discrepancies:  0.761   # finetune output ## change number of digits x <- indexConflict3(bell2010) print(x, digits = 4) #>  #> ########################################################## #> CONFLICT OR INCONSISTENCIES BASED ON TRIANGLE INEQUALITIES #> ########################################################## #>  #> Potential conflicts in grid:  360 #> Actual conflicts in grid:  123 #> Overall percentage of conflict in grid:  34.1667 % #>  #> ELEMENTS #> ######## #>  #> Percent of conflict attributable to element: #>  #>                         percentage #> 1 self                    162.6016 #> 2 closest friend of th   1382.1138 #> 3 the unhappiest perso    406.5041 #> 4 A person of the oppo    650.4065 #> 5 A teacher you respec   1056.9106 #> 6 Mother (or the perso   1138.2114 #> 7 A person of the oppo    813.0081 #> 8 The most confident p   1788.6179 #> 9 A person you work we   1138.2114 #> 10 A teacher you did no  1463.4146 #>  #> Chi-square test of equal count of conflicts for elements. #>  #> \tChi-squared test for given probabilities #>  #> data:  x$e.count #> X-squared = 27.488, df = 9, p-value = 0.001161 #>  #>  #> CONSTRUCTS #> ########## #>  #> Percent of conflict attributable to construct: #>  #>                           percentage #> 1 relaxed - worried &        10.1626 #> 2 not so sma - smart (aca    11.3821 #> 3 dislikes s - loves spor    13.0081 #> 4 not intera - loves peop    10.5691 #> 5 not transp - transparen    12.6016 #> 6 insensitiv - sensitive     12.1951 #> 7 fearful&ti - fearless      10.1626 #> 8 rough - gentle             11.3821 #> 9 accept as  - loves to a     8.5366 #>  #> Chi-square test of equal count of conflicts for constructs. #>  #> \tChi-squared test for given probabilities #>  #> data:  x$c.count #> X-squared = 3.5122, df = 8, p-value = 0.8982 #>  #> NULL  ## omit discrepancy matrices for constructs x <- indexConflict3(bell2010, c.out = 5:6) print(x, discrepancies = FALSE) #>  #> ########################################################## #> CONFLICT OR INCONSISTENCIES BASED ON TRIANGLE INEQUALITIES #> ########################################################## #>  #> Potential conflicts in grid:  360 #> Actual conflicts in grid:  123 #> Overall percentage of conflict in grid:  34.17 % #>  #> ELEMENTS #> ######## #>  #> Percent of conflict attributable to element: #>  #>                         percentage #> 1 self                      162.60 #> 2 closest friend of th     1382.11 #> 3 the unhappiest perso      406.50 #> 4 A person of the oppo      650.41 #> 5 A teacher you respec     1056.91 #> 6 Mother (or the perso     1138.21 #> 7 A person of the oppo      813.01 #> 8 The most confident p     1788.62 #> 9 A person you work we     1138.21 #> 10 A teacher you did no    1463.41 #>  #> Chi-square test of equal count of conflicts for elements. #>  #> \tChi-squared test for given probabilities #>  #> data:  x$e.count #> X-squared = 27.488, df = 9, p-value = 0.001161 #>  #>  #> CONSTRUCTS #> ########## #>  #> Percent of conflict attributable to construct: #>  #>                           percentage #> 1 relaxed - worried &          10.16 #> 2 not so sma - smart (aca      11.38 #> 3 dislikes s - loves spor      13.01 #> 4 not intera - loves peop      10.57 #> 5 not transp - transparen      12.60 #> 6 insensitiv - sensitive       12.20 #> 7 fearful&ti - fearless        10.16 #> 8 rough - gentle               11.38 #> 9 accept as  - loves to a       8.54 #>  #> Chi-square test of equal count of conflicts for constructs. #>  #> \tChi-squared test for given probabilities #>  #> data:  x$c.count #> X-squared = 3.5122, df = 8, p-value = 0.8982 #>  #>  #>  #> CONFLICTS BY CONSTRUCT #> ###################### #>  #>  #> ### Construct:  5 not transp - transparen  #>  #> Av. level of discrepancy:    0.32  #>  #> Std. dev. of discrepancies:  0.761  #>  #>  #> ### Construct:  6 insensitiv - sensitive  #>  #> Av. level of discrepancy:    0.32  #>  #> Std. dev. of discrepancies:  0.929"},{"path":"https://docs.openrepgrid.org/reference/indexDDI.html","id":null,"dir":"Reference","previous_headings":"","what":"Dispersion of dependency index (DDI) — indexDDI","title":"Dispersion of dependency index (DDI) — indexDDI","text":"Measures degree dispersion dependency situation-resource grid (dependency grid), .e. degree person dispersed critical situations resource persons (Walker et al., 1988, p. 66). index renamed adoption diversity index field ecology used measure diversity species sample. computationally identical. index applicable dependency grids (e.g., situation-resource) , .e., grid ratings must 0 1.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexDDI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dispersion of dependency index (DDI) — indexDDI","text":"","code":"indexDDI(x, ds)"},{"path":"https://docs.openrepgrid.org/reference/indexDDI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dispersion of dependency index (DDI) — indexDDI","text":"x repgrid object 0/1 ratings , 1 indicates dependency. ds Predetermined size sample dependencies.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexDDI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dispersion of dependency index (DDI) — indexDDI","text":"Caveat: DDI depends chosen sample size ds. Also, measurement range normalized 0 1, allowing comparison similarly sized grids (see Bell, 2001). Theoretical Background:  Dispersion Dependency: Kelly (1969) proposed problematic view people either independent dependent everyone , greater lesser degrees, dependent upon others life. Kelly felt important well people disperse dependencies across different people. Whereas young children tend dependencies concentrated  small number people (typically parents), adults likely spread dependencies across variety others. Dispersing one's dependencies generally considered psychologically adjusted adults (Walker et al., 1988).","code":""},{"path":"https://docs.openrepgrid.org/reference/indexDDI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dispersion of dependency index (DDI) — indexDDI","text":"Bell, R. C. (2001). new Measures Dispersion Dependency Situation-Resource Grid. Journal Constructivist Psychology, 14(3), 227-234, doi:10.1080/713840106 . Kelly, G. . (1962). confide: depend . Maher, B. (Ed.). Clinical psychology personality: selected papers George Kelly, 189-206. New York Krieger. Walker, B. M., Ramsey, F. L., & Bell, R. (1988). Dispersed Undispersed Dependency. International Journal Personal Construct Psychology, 1(1), 63-80, doi:10.1080/10720538808412765 .","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/indexDDI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dispersion of dependency index (DDI) — indexDDI","text":"","code":"# sample grid from Walker et al. (1988), p. 67 file <- system.file(\"extdata\", \"dep_grid_walker_1988_2.xlsx\" , package = \"OpenRepGrid\") x <- importExcel(file)  indexDDI(x, ds = 2:5)  #> [1] 1.888889 2.666667 3.333333 3.888889  # using named vector ds = c(\"2\"=2, \"3\"=3, \"4\"=4, \"5\"=5)   indexDDI(x, ds) #>        2        3        4        5  #> 1.888889 2.666667 3.333333 3.888889"},{"path":"https://docs.openrepgrid.org/reference/indexDilemma.html","id":null,"dir":"Reference","previous_headings":"","what":"Implicative Dilemmas — indexDilemma","title":"Implicative Dilemmas — indexDilemma","text":"Implicative dilemmas closely related notion conflict. implicative dilemma arises desired change one construct associated undesired implication another construct. E. g. timid subject may want become socially skilled associates socially skilled different negative characteristics (selfish, insensitive etc.). Hence, may anticipate becoming less timid also make selfish (cf. Winter, 1982). consequence, subject resist change negative presumed implications threaten patients identity predictive power construct system. stance resistance change logical consequence coherent subjects construct system (Feixas, Saul, & Sanchez, 2000). investigation role cognitive dilemma different disorders context PCP current field research (e.g. Feixas & Saul, 2004, Dorough et al. 2007).","code":""},{"path":"https://docs.openrepgrid.org/reference/indexDilemma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implicative Dilemmas — indexDilemma","text":"","code":"indexDilemma(   x,   self = 1,   ideal = ncol(x),   diff.mode = 1,   diff.congruent = NA,   diff.discrepant = NA,   diff.poles = 1,   r.min = 0.35,   exclude = FALSE,   digits = 2,   show = FALSE,   output = 1,   index = TRUE,   trim = 20 )"},{"path":"https://docs.openrepgrid.org/reference/indexDilemma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implicative Dilemmas — indexDilemma","text":"x repgrid object. self Numeric. Index self element. ideal Numeric. Index ideal self element. diff.mode Numeric. Method adopted classify construct pairs congruent discrepant. diff.mode=1, minimal maximal score difference criterion applied. diff.mode=0 Mid-point rating criterion applied. Default diff.mode=1. diff.congruent used diff.mode=1. Maximal difference element ratings define construct congruent (default diff.congruent=1). Note value needs adjusted user according rating scale used. diff.discrepant used diff.mode=1. Minimal difference element ratings define construct discrepant (default diff.discrepant=3). Note value needs adjusted user according rating scale used. diff.poles yet implemented. r.min Minimal correlation determine implications constructs. exclude Whether exclude elements self ideal self calculation inter-construct correlations. (default FALSE). digits Numeric. Number digits round (default 2). show Whether additionally plot distribution correlations help user assess level adequate r.min. output type output return. index Whether print index numbers front construct (default TRUE). trim number characters construct (element) trimmed (default 20). NA trimming done. Trimming simply saves space displaying output.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexDilemma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implicative Dilemmas — indexDilemma","text":"List object class indexDilemma, containing result calculations.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexDilemma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Implicative Dilemmas — indexDilemma","text":"detection implicative dilemmas happens two steps. First constructs classified 'congruent' 'discrepant'. Secondly, correlation congruent discrepant construct pair assessed big enough indicate implication. Classifying construct detect implicit dilemmas construct pairs first identified 'congruent' 'discrepant'. assessment based rating differences elements 'self' 'ideal self'. construct 'congruent' construction 'self' preferred state (.e. ideal self) similar. construct discrepant construction 'self' 'ideal' dissimilar. two popular accepted methods identify congruent discrepant constructs: \"Scale Midpoint criterion\" (cf. Grice 2008) \"Minimal maximal score difference\" (cf. Feixas & Saul, 2004) \"Scale Midpoint criterion\" (cf. Grice 2008) reported Idiogrid (v. 2.4) manual: \"... Scale Midpoint uses scales 'dividing line' discrepancies; example, actual element rated midpoint, discrepancy exists (vice versa). two selves actual side scale, discrepancy exist\". example: Assuming scoring range 1-7, midpoint score 4, look self ideal-self scoring given construct proceed follow: scoring Self Ideal Self < 4: construct \"Congruent\" scoring Self Ideal Self > 4: construct \"Congruent\" scoring Self < 4 Ideal Self > 4 (vice versa): construct \"discrepant\" scoring Self Ideal Self = 4 construct Discrepant \"Undifferentiated\" Minimal maximal score difference criterion (cf. Feixas & Saul, 2004) method conservative designed minimize Type errors ) setting default minimum correlation constructs r=.34; b) discarding cases ideal Self self neither congruent discrepant; c) discarding cases ideal self \"oriented\", .e. scored midpoint. E.g. suppose element 'self' rated 2 'ideal self' 5 scale 1 6. ratings differences 5-2 = 3. difference smaller e.g. 1 construct 'congruent', bigger 3 'discrepant'. values used classify constructs 'congruent' 'discrepant' can determined several ways (cf. Bell, 2009): set 'priori'. implicitly derived taking account rating differences constructs. (yet implemented) value mode determined via argument diff.mode. 'priori' criteria determine whether construct congruent discrepant supplied argument, values chosen according range rating scale used. following scales defaults chosen : Defining correlations implications constructs derived rating grid directly, correlation two constructs used indicator implication. large correlation means one construct pole implies . small correlation indicates lack implication. minimum criterion correlation indicate implication set .35 (cf. Feixas & Saul, 2004). user may also choose another value. get impression distribution correlations grid, visualization can prompted via argument show. calculating correlation used assess implication given , elements consideration (. e. self ideal self) can included (default) excluded. options cause different correlations (see argument exclude). Example implicative dilemma depressive person considers 'timid' wished change opposite pole defines 'extraverted'. construct called discrepant construction 'self' desired state (e.g. described 'ideal self') construct differ. person also considers 'sensitive' (preferred pole) opposite pole 'selfish'. construct congruent, person construes like . person now changed discrepant construct undesired desired pole, .e. timid extraverted, question can asked consequences change . person construes timid sensitive related someone extraverted timid, change first construct imply change congruent construct well. Hence, positive shift timid extraverted presumed undesired effect moving sensitive towards selfish. relation called implicative dilemma. implications change construct derived rating grid directly, correlation two constructs used indicator implication.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexDilemma.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Implicative Dilemmas — indexDilemma","text":"Bell, R. C. (2009). Gridstat version 5 - Program Analyzing Data Repertory Grid (manual). University Melbourne, Australia: Department Psychology. Dorough, S., Grice, J. W., & Parker, J. (2007). Implicative dilemmas psychological well-. Personal Construct Theory & Practice, (4), 83-101. Feixas, G., & Saul, L. . (2004). Multi-Center Dilemma Project: investigation role cognitive conflicts health. Spanish Journal Psychology, 7(1), 69-78. Feixas, G., Saul, L. ., & Sanchez, V. (2000). Detection analysis implicative dilemmas: implications therapeutic process. J. W. Scheer (Ed.), Person Society: Challenges Constructivist Theory. Giessen: Psychosozial-Verlag. Winter, D. . (1982). Construct relationships, psychological disorder therapeutic change. British Journal Medical Psychology, 55 (Pt 3), 257-269. Grice, J. W. (2008). Idiogrid: Idiographic Analysis Repertory Grids (Version 2.4). Oklahoma: Oklahoma State University.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/indexDilemma.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Implicative Dilemmas — indexDilemma","text":"Mark Heckmann, Alejandro García, Diego Vitali","code":""},{"path":"https://docs.openrepgrid.org/reference/indexDilemma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Implicative Dilemmas — indexDilemma","text":"","code":"id <- indexDilemma(boeker, self = 1, ideal = 2) id #>  #> #################### #> Implicative Dilemmas #> #################### #>  #> ------------------------------------------------------------------------------- #>  #> SUMMARY: #>  #> No. of Implicative Dilemmas (IDs): 4 #> No. of possible construct pairs: 91 #> Percentage of IDs (PID): 4.4% (4/91) #> Intensity of IDs (IID): 61.3 #> Proportion of the intensity of constructs of IDs (PICID): 2.7 #>  #> ------------------------------------------------------------------------------- #>  #> PARAMETERS: #>  #> Self: Element No. 1 = self #> Ideal: Element No. 2 = ideal self #>  #> Correlation Criterion: >= 0.35 #> Note: Correlation calculated including elements Self & Ideal #>  #> Criteria (for construct classification): #> Discrepant if Self-Ideal difference: >= 3 #> Congruent if Self-Ideal difference: <= 1 #>  #> ------------------------------------------------------------------------------- #>  #> CLASSIFICATION OF CONSTRUCTS: #>  #>    Note: Constructs aligned so 'Self' corresponds to left pole #>  #>                              Construct Self Ideal Difference Classification #> 1  balanced - get along with conflicts    1     4          3     discrepant #> 2                  isolated - sociable    3     6          3     discrepant #> 3        closely integrated - excluded    2     2          0      congruent #> 4                 passive - discursive    3     6          3     discrepant #> 5            open minded - indifferent    2     1          1      congruent #> 6               dispassionate - dreamy    3     2          1      congruent #> 7     practically oriented - depressed    2     1          1      congruent #> 8                    serious - playful    3     2          1      congruent #> 9            socially minded - selfish    2     1          1      congruent #> 10              peaceful - quarrelsome    2     2          0      congruent #> 11                technical - artistic    2     6          4     discrepant #> 12              scientific - emotional    2     1          1      congruent #> 13               extrovert - introvert    3     2          1      congruent #> 14          wanderlust - home oriented    1     1          0      congruent #>  #> ------------------------------------------------------------------------------- #>  #> IMPLICATIVE DILEMMAS: #>  #>    Note: Congruent constructs on the left - Discrepant constructs on the right #>  #>                        Congruent                             Discrepant    R #> 1   5. open minded - indifferent 1. balanced - get along with conflicts 0.53 #> 2   9. socially minded - selfish 1. balanced - get along with conflicts 0.36 #> 3     10. peaceful - quarrelsome 1. balanced - get along with conflicts 0.84 #> 4 14. wanderlust - home oriented 1. balanced - get along with conflicts 0.72 #>              RexSI #> 1             0.63 #> 2             0.43 #> 3 *Not implemented #> 4             0.79 #>  #> \tR = Correlation including Self & Ideal #> \tRexSI = Correlation excluding Self & Ideal #> \tR was used as criterion  # adjust minimal correlation indexDilemma(boeker, self = 1, ideal = 2, r.min = .5) #>  #> #################### #> Implicative Dilemmas #> #################### #>  #> ------------------------------------------------------------------------------- #>  #> SUMMARY: #>  #> No. of Implicative Dilemmas (IDs): 3 #> No. of possible construct pairs: 91 #> Percentage of IDs (PID): 3.3% (3/91) #> Intensity of IDs (IID): 69.6 #> Proportion of the intensity of constructs of IDs (PICID): 2.3 #>  #> ------------------------------------------------------------------------------- #>  #> PARAMETERS: #>  #> Self: Element No. 1 = self #> Ideal: Element No. 2 = ideal self #>  #> Correlation Criterion: >= 0.5 #> Note: Correlation calculated including elements Self & Ideal #>  #> Criteria (for construct classification): #> Discrepant if Self-Ideal difference: >= 3 #> Congruent if Self-Ideal difference: <= 1 #>  #> ------------------------------------------------------------------------------- #>  #> CLASSIFICATION OF CONSTRUCTS: #>  #>    Note: Constructs aligned so 'Self' corresponds to left pole #>  #>                              Construct Self Ideal Difference Classification #> 1  balanced - get along with conflicts    1     4          3     discrepant #> 2                  isolated - sociable    3     6          3     discrepant #> 3        closely integrated - excluded    2     2          0      congruent #> 4                 passive - discursive    3     6          3     discrepant #> 5            open minded - indifferent    2     1          1      congruent #> 6               dispassionate - dreamy    3     2          1      congruent #> 7     practically oriented - depressed    2     1          1      congruent #> 8                    serious - playful    3     2          1      congruent #> 9            socially minded - selfish    2     1          1      congruent #> 10              peaceful - quarrelsome    2     2          0      congruent #> 11                technical - artistic    2     6          4     discrepant #> 12              scientific - emotional    2     1          1      congruent #> 13               extrovert - introvert    3     2          1      congruent #> 14          wanderlust - home oriented    1     1          0      congruent #>  #> ------------------------------------------------------------------------------- #>  #> IMPLICATIVE DILEMMAS: #>  #>    Note: Congruent constructs on the left - Discrepant constructs on the right #>  #>                        Congruent                             Discrepant    R #> 1   5. open minded - indifferent 1. balanced - get along with conflicts 0.53 #> 2     10. peaceful - quarrelsome 1. balanced - get along with conflicts 0.84 #> 3 14. wanderlust - home oriented 1. balanced - get along with conflicts 0.72 #>              RexSI #> 1             0.63 #> 2 *Not implemented #> 3             0.79 #>  #> \tR = Correlation including Self & Ideal #> \tRexSI = Correlation excluding Self & Ideal #> \tR was used as criterion  # adjust congruence and discrepance ranges indexDilemma(boeker, self = 1, ideal = 2, diff.congruent = 0, diff.discrepant = 4) #>  #> #################### #> Implicative Dilemmas #> #################### #>  #> ------------------------------------------------------------------------------- #>  #> SUMMARY: #>  #> No. of Implicative Dilemmas (IDs): 0 #> No. of possible construct pairs: 91 #> Percentage of IDs (PID): 0.0% (0/91) #> Intensity of IDs (IID): NaN #> Proportion of the intensity of constructs of IDs (PICID): 0 #>  #> ------------------------------------------------------------------------------- #>  #> PARAMETERS: #>  #> Self: Element No. 1 = self #> Ideal: Element No. 2 = ideal self #>  #> Correlation Criterion: >= 0.35 #> Note: Correlation calculated including elements Self & Ideal #>  #> Criteria (for construct classification): #> Discrepant if Self-Ideal difference: >= 4 #> Congruent if Self-Ideal difference: <= 0 #>  #> ------------------------------------------------------------------------------- #>  #> CLASSIFICATION OF CONSTRUCTS: #>  #>    Note: Constructs aligned so 'Self' corresponds to left pole #>  #>                              Construct Self Ideal Difference Classification #> 1  balanced - get along with conflicts    1     4          3        neither #> 2                  isolated - sociable    3     6          3        neither #> 3        closely integrated - excluded    2     2          0      congruent #> 4                 passive - discursive    3     6          3        neither #> 5            open minded - indifferent    2     1          1        neither #> 6               dispassionate - dreamy    3     2          1        neither #> 7     practically oriented - depressed    2     1          1        neither #> 8                    serious - playful    3     2          1        neither #> 9            socially minded - selfish    2     1          1        neither #> 10              peaceful - quarrelsome    2     2          0      congruent #> 11                technical - artistic    2     6          4     discrepant #> 12              scientific - emotional    2     1          1        neither #> 13               extrovert - introvert    3     2          1        neither #> 14          wanderlust - home oriented    1     1          0      congruent #>  #> ------------------------------------------------------------------------------- #>  #> IMPLICATIVE DILEMMAS: #>  #>    Note: Congruent constructs on the left - Discrepant constructs on the right #>  #> No implicative dilemmas detected  # print options (see ?print.indexDilemma for help) print(id, output = \"D\")   # dilemmas only #>  #> #################### #> Implicative Dilemmas #> #################### #>  #> ------------------------------------------------------------------------------- #>  #> IMPLICATIVE DILEMMAS: #>  #>    Note: Congruent constructs on the left - Discrepant constructs on the right #>  #>                        Congruent                             Discrepant    R #> 1   5. open minded - indifferent 1. balanced - get along with conflicts 0.53 #> 2   9. socially minded - selfish 1. balanced - get along with conflicts 0.36 #> 3     10. peaceful - quarrelsome 1. balanced - get along with conflicts 0.84 #> 4 14. wanderlust - home oriented 1. balanced - get along with conflicts 0.72 #>              RexSI #> 1             0.63 #> 2             0.43 #> 3 *Not implemented #> 4             0.79 #>  #> \tR = Correlation including Self & Ideal #> \tRexSI = Correlation excluding Self & Ideal #> \tR was used as criterion print(id, output = \"OD\")  # overview and dilemmas #>  #> #################### #> Implicative Dilemmas #> #################### #>  #> ------------------------------------------------------------------------------- #>  #> IMPLICATIVE DILEMMAS: #>  #>    Note: Congruent constructs on the left - Discrepant constructs on the right #>  #>                        Congruent                             Discrepant    R #> 1   5. open minded - indifferent 1. balanced - get along with conflicts 0.53 #> 2   9. socially minded - selfish 1. balanced - get along with conflicts 0.36 #> 3     10. peaceful - quarrelsome 1. balanced - get along with conflicts 0.84 #> 4 14. wanderlust - home oriented 1. balanced - get along with conflicts 0.72 #>              RexSI #> 1             0.63 #> 2             0.43 #> 3 *Not implemented #> 4             0.79 #>  #> \tR = Correlation including Self & Ideal #> \tRexSI = Correlation excluding Self & Ideal #> \tR was used as criterion  # plot dilemmas as network graph (see ?plot.indexDilemma for help) # set a seed for reproducibility plot(id, layout = \"rows\")  plot(id, layout = \"circle\")  plot(id, layout = \"star\")"},{"path":"https://docs.openrepgrid.org/reference/indexDilemmatic.html","id":null,"dir":"Reference","previous_headings":"","what":"Dilemmatic constructs — indexDilemmatic","title":"Dilemmatic constructs — indexDilemmatic","text":"Dilemmatic Construct (DC) one ideal element rated scale midpoint. means, person decide poles preferable. constructs called \"dilemmatic\". example, rating scale 1 7, rating 4 ideal element means construct dilemmatic. definition, DCs can emerge scales uneven number rating options, .e. 5-point scale, 7-point scale etc. However, function makes possible allow deviation midpoint, still count dilemmatic. useful grid uses large rating scale, e.g. 0 100 visual analog scale, grid administration programs . case may want set ratings, example, 45 55 close enough midpoint indicate poles equally desirable.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexDilemmatic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dilemmatic constructs — indexDilemmatic","text":"","code":"indexDilemmatic(x, ideal, deviation = 0, warn = TRUE)"},{"path":"https://docs.openrepgrid.org/reference/indexDilemmatic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dilemmatic constructs — indexDilemmatic","text":"x repgrid object. ideal Index ideal element. deviation maximal deviation scale midpoint ideal rating considered dilemmatic (default = 0). scales larger 17-point rating scale warning raised, deviation 0 (see details). warn Show warnings?","code":""},{"path":"https://docs.openrepgrid.org/reference/indexDilemmatic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dilemmatic constructs — indexDilemmatic","text":"List class indexDilemmatic: ideal: Name ideal element. n_constructs Number grid's constructs. scale: Minimum maximum grid rating scale. midpoint: Midpoint rating scale. lower,upper: Lower upper value rating considered midpoint range. midpoint_range: Midpoint range interval. n_dilemmatic: Number dilemmatic constructs. perc_dilemmatic: Percentage constructs dilemmatic. i_dilemmatic: Index dilemmatic constructs. dilemmatic_constructs: Labels dilemmatic constructs. summary: Summary dataframe.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexDilemmatic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dilemmatic constructs — indexDilemmatic","text":"","code":"dc <- indexDilemmatic(feixas2004, ideal = 13) dc #>  #> ##################### #> Dilemmatic Constructs #> ##################### #>  #> SUMMARY #>  #> Grid rating scale: 1 (left pole) to 7 (right pole) #> Scale midpoint: 4 #> Ideal element: Ideal Self #> Dilemmatic: Constructs with ideal ratings in the interval [4, 4] #>  #> No. of dilemmatic constructs: 1 #> Percent dilemmatic constructs: 5.0% (1/20) #>  #> DETAILS #>  #>                        Construct Ideal MidpointRange Dilemmatic #> 1 Self-demanding - Takes it easy     4        [4, 4]       TRUE  # control the output print(dc, output = \"S\")  # Summary  #>  #> ##################### #> Dilemmatic Constructs #> ##################### #>  #> SUMMARY #>  #> Grid rating scale: 1 (left pole) to 7 (right pole) #> Scale midpoint: 4 #> Ideal element: Ideal Self #> Dilemmatic: Constructs with ideal ratings in the interval [4, 4] #>  #> No. of dilemmatic constructs: 1 #> Percent dilemmatic constructs: 5.0% (1/20) print(dc, output = \"D\")  # Details #>  #> ##################### #> Dilemmatic Constructs #> ##################### #>  #>  #> DETAILS #>  #>                        Construct Ideal MidpointRange Dilemmatic #> 1 Self-demanding - Takes it easy     4        [4, 4]       TRUE"},{"path":"https://docs.openrepgrid.org/reference/indexIntensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Intensity index — indexIntensity","title":"Intensity index — indexIntensity","text":"Calculate intensity index.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexIntensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intensity index — indexIntensity","text":"","code":"indexIntensity(x, rc = FALSE, trim = 30)"},{"path":"https://docs.openrepgrid.org/reference/indexIntensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intensity index — indexIntensity","text":"x repgrid object. rc Whether use Cohen's rc calculation inter-element correlations. See elementCor() explanations measure. trim number characters construct trimmed (default 30). NA trimming occurs. Trimming simply saves space displaying correlation constructs elements long names.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexIntensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Intensity index — indexIntensity","text":"object class indexIntensity containing list following elements: c.int: Intensity scores construct. e.int: Intensity scores element. c.int.mean: Average intensity score constructs. e.int.mean: Average intensity score elements. total.int: Total intensity score.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexIntensity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Intensity index — indexIntensity","text":"Intensity index suggested Bannister (1960) measure amount construct linkage. Bannister suggested score reflects degree organization construct system investigation (Bannister & Mair, 1968). index resulted colleagues work construction systems patient suffering schizophrenic thought disorder. concept intensity theoretical connection notion \"tight\" \"loose\" construing proposed Kelly (1991). tight constructs lead unvarying prediction, loose constructs allow varying predictions. Bannister hypothesized schizophrenic thought disorder liked process extremely loose construing leading loss predictive power subject's construct system. Intensity score structural measure thought reflect type system disintegration (Bannister, 1960). Implementation Gridcor program explained correspoding help pages: \"... sum squared values correlations construct rest constructs, averaged total number constructs minus one. process repeated element, overall Intensity calculated averaging intensity scores constructs elements.\" (Gridcor manual). Currently total calculated unweighted average single scores (elements construct).","code":""},{"path":"https://docs.openrepgrid.org/reference/indexIntensity.html","id":"development","dir":"Reference","previous_headings":"","what":"Development","title":"Intensity index — indexIntensity","text":"TODO: Results tested programs' results.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexIntensity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Intensity index — indexIntensity","text":"Bannister, D. (1960). Conceptual structure thought-disordered schizophrenics. Journal mental science, 106, 1230-49.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexIntensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Intensity index — indexIntensity","text":"","code":"indexIntensity(bell2010) #>  #> ################ #> Intensity index #> ################ #>  #> Total intensity: 0.19  #>  #>  #> Average intensity of constructs: 0.16  #>  #> Itensity by construct: #>                                     intensity #> 1 relaxed - worried & tense              0.18 #> 2 not so smart (a - smart (academic      0.14 #> 3 dislikes sports - loves sports         0.05 #> 4 not interactive - loves people         0.15 #> 5 not transparent - transparent          0.13 #> 6 insensitive - sensitive                0.16 #> 7 fearful&timid - fearless               0.25 #> 8 rough - gentle                         0.25 #> 9 accept as it is - loves to argue       0.12 #>  #>  #> Average intensity of elements: 0.14  #>  #> Itensity by element: #>                                       intensity #> 1 (1) self                                 0.16 #> 2 (2) closest friend of the same sex       0.16 #> 3 (3) the unhappiest person you know       0.04 #> 4 (4) A person of the opposite sex t       0.14 #> 5 (5) A teacher you respected              0.19 #> 6 (6) Mother (or the person who fill       0.10 #> 7 (7) A person of the opposite sex t       0.13 #> 8 (8) The most confident person you        0.22 #> 9 (9) A person you work well with (a       0.14 #> 10 (10) A teacher you did not respect      0.09 indexIntensity(bell2010, trim = NA) #>  #> ################ #> Intensity index #> ################ #>  #> Total intensity: 0.19  #>  #>  #> Average intensity of constructs: 0.16  #>  #> Itensity by construct: #>                                                      intensity #> 1 relaxed - worried & tense                               0.18 #> 2 not so smart (academically) - smart (academically)      0.14 #> 3 dislikes sports - loves sports                          0.05 #> 4 not interactive - loves people                          0.15 #> 5 not transparent - transparent                           0.13 #> 6 insensitive - sensitive                                 0.16 #> 7 fearful&timid - fearless                                0.25 #> 8 rough - gentle                                          0.25 #> 9 accept as it is - loves to argue                        0.12 #>  #>  #> Average intensity of elements: 0.14  #>  #> Itensity by element: #>                                                                        intensity #> 1 (1) self                                                                  0.16 #> 2 (2) closest friend of the same sex                                        0.16 #> 3 (3) the unhappiest person you know                                        0.04 #> 4 (4) A person of the opposite sex that you don't get along with            0.14 #> 5 (5) A teacher you respected                                               0.19 #> 6 (6) Mother (or the person who filled that kind of role)                   0.10 #> 7 (7) A person of the opposite sex that you like more than you dislike      0.13 #> 8 (8) The most confident person you know                                    0.22 #> 9 (9) A person you work well with (at job or on sports team etc)            0.14 #> 10 (10) A teacher you did not respect                                       0.09  # using Cohen's rc for element correlations indexIntensity(bell2010, rc = TRUE) #>  #> ################ #> Intensity index #> ################ #>  #> Total intensity: 0.25  #>  #>  #> Average intensity of constructs: 0.16  #>  #> Itensity by construct: #>                                     intensity #> 1 relaxed - worried & tense              0.18 #> 2 not so smart (a - smart (academic      0.14 #> 3 dislikes sports - loves sports         0.05 #> 4 not interactive - loves people         0.15 #> 5 not transparent - transparent          0.13 #> 6 insensitive - sensitive                0.16 #> 7 fearful&timid - fearless               0.25 #> 8 rough - gentle                         0.25 #> 9 accept as it is - loves to argue       0.12 #>  #>  #> Average intensity of elements: 0.26  #>  #> Itensity by element: #>                                       intensity #> 1 (1) self                                 0.39 #> 2 (2) closest friend of the same sex       0.31 #> 3 (3) the unhappiest person you know       0.27 #> 4 (4) A person of the opposite sex t       0.29 #> 5 (5) A teacher you respected              0.24 #> 6 (6) Mother (or the person who fill       0.16 #> 7 (7) A person of the opposite sex t       0.32 #> 8 (8) The most confident person you        0.24 #> 9 (9) A person you work well with (a       0.24 #> 10 (10) A teacher you did not respect      0.12  # save output x <- indexIntensity(bell2010) x #>  #> ################ #> Intensity index #> ################ #>  #> Total intensity: 0.19  #>  #>  #> Average intensity of constructs: 0.16  #>  #> Itensity by construct: #>                                     intensity #> 1 relaxed - worried & tense              0.18 #> 2 not so smart (a - smart (academic      0.14 #> 3 dislikes sports - loves sports         0.05 #> 4 not interactive - loves people         0.15 #> 5 not transparent - transparent          0.13 #> 6 insensitive - sensitive                0.16 #> 7 fearful&timid - fearless               0.25 #> 8 rough - gentle                         0.25 #> 9 accept as it is - loves to argue       0.12 #>  #>  #> Average intensity of elements: 0.14  #>  #> Itensity by element: #>                                       intensity #> 1 (1) self                                 0.16 #> 2 (2) closest friend of the same sex       0.16 #> 3 (3) the unhappiest person you know       0.04 #> 4 (4) A person of the opposite sex t       0.14 #> 5 (5) A teacher you respected              0.19 #> 6 (6) Mother (or the person who fill       0.10 #> 7 (7) A person of the opposite sex t       0.13 #> 8 (8) The most confident person you        0.22 #> 9 (9) A person you work well with (a       0.14 #> 10 (10) A teacher you did not respect      0.09  # printing options print(x, digits = 4) #>  #> ################ #> Intensity index #> ################ #>  #> Total intensity: 0.1894  #>  #>  #> Average intensity of constructs: 0.1588  #>  #> Itensity by construct: #>                                     intensity #> 1 relaxed - worried & tense            0.1828 #> 2 not so smart (a - smart (academic    0.1410 #> 3 dislikes sports - loves sports       0.0518 #> 4 not interactive - loves people       0.1488 #> 5 not transparent - transparent        0.1320 #> 6 insensitive - sensitive              0.1560 #> 7 fearful&timid - fearless             0.2492 #> 8 rough - gentle                       0.2474 #> 9 accept as it is - loves to argue     0.1204 #>  #>  #> Average intensity of elements: 0.1358  #>  #> Itensity by element: #>                                       intensity #> 1 (1) self                               0.1553 #> 2 (2) closest friend of the same sex     0.1616 #> 3 (3) the unhappiest person you know     0.0410 #> 4 (4) A person of the opposite sex t     0.1362 #> 5 (5) A teacher you respected            0.1872 #> 6 (6) Mother (or the person who fill     0.0961 #> 7 (7) A person of the opposite sex t     0.1291 #> 8 (8) The most confident person you      0.2153 #> 9 (9) A person you work well with (a     0.1434 #> 10 (10) A teacher you did not respect    0.0924  # accessing the objects' content x$c.int #>         relaxed - worried & tense not so smart (a - smart (academic  #>                         0.1827637                         0.1409762  #>    dislikes sports - loves sports    not interactive - loves people  #>                         0.0518083                         0.1487900  #>     not transparent - transparent           insensitive - sensitive  #>                         0.1320374                         0.1559959  #>          fearful&timid - fearless                    rough - gentle  #>                         0.2491723                         0.2474163  #>  accept as it is - loves to argue  #>                         0.1203857  x$e.int #>                           (1) self (2) closest friend of the same sex  #>                         0.15532806                         0.16164286  #> (3) the unhappiest person you know (4) A person of the opposite sex t  #>                         0.04102202                         0.13620017  #>        (5) A teacher you respected (6) Mother (or the person who fill  #>                         0.18719718                         0.09610145  #> (7) A person of the opposite sex t (8) The most confident person you   #>                         0.12910356                         0.21527250  #> (9) A person you work well with (a (10) A teacher you did not respect  #>                         0.14342080                         0.09241641  x$c.int.mean #> [1] 0.1588162 x$e.int.mean #> [1] 0.1357705 x$total.int #> [1] 0.1893525"},{"path":"https://docs.openrepgrid.org/reference/indexPolarization.html","id":null,"dir":"Reference","previous_headings":"","what":"Polarization (percentage of extreme ratings) — indexPolarization","title":"Polarization (percentage of extreme ratings) — indexPolarization","text":"Polarization percentage extreme ratings, e.g. values 1 7 grid 7-point ratings scale.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexPolarization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polarization (percentage of extreme ratings) — indexPolarization","text":"","code":"indexPolarization(x, deviation = 0)"},{"path":"https://docs.openrepgrid.org/reference/indexPolarization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polarization (percentage of extreme ratings) — indexPolarization","text":"x repgrid object. deviation maximal deviation end rating scale values considered 'extreme' rating. default values lie directly ends ratings scales considered 'extreme' (default = 0).","code":""},{"path":"https://docs.openrepgrid.org/reference/indexPolarization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polarization (percentage of extreme ratings) — indexPolarization","text":"List class indexPolarization: scale: Minimum maximum grid rating scale. lower,upper Lower upper value decide ratings considered extreme. polarization_total: Grid's overall polarization. polarization_constructs: Polarization per construct. polarization_elements: Polarization per element.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexPolarization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polarization (percentage of extreme ratings) — indexPolarization","text":"","code":"p <- indexPolarization(boeker) p #>  #> ################## #> Polarization index #> ################## #>  #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #> Extreme ratings are ratings <= 1 or >= 6 #>  #>  #> POLARIZATION OVERALL #>  #>   Ratings Extreme Polarization #> 1     210      26        12.4% #>  #>  #> POLARIZATION BY CONSTRUCT #>  #>                              Construct Ratings Extremes Polarization #> 1  balanced - get along with conflicts      15        2        13.3% #> 2                  isolated - sociable      15        1         6.7% #> 3        closely integrated - excluded      15        0         0.0% #> 4                 discursive - passive      15        2        13.3% #> 5            open minded - indifferent      15        3        20.0% #> 6               dreamy - dispassionate      15        1         6.7% #> 7     practically oriented - depressed      15        1         6.7% #> 8                    playful - serious      15        0         0.0% #> 9            socially minded - selfish      15        3        20.0% #> 10              quarrelsome - peaceful      15        2        13.3% #> 11                artistic - technical      15        1         6.7% #> 12              scientific - emotional      15        3        20.0% #> 13               introvert - extrovert      15        1         6.7% #> 14          wanderlust - home oriented      15        6        40.0% #>  #>  #> POLARIZATION BY ELEMENT #>  #>                Element Ratings Extremes Polarization #> 1                 self      14        2        14.3% #> 2           ideal self      14        8        57.1% #> 3               mother      14        0         0.0% #> 4               father      14        3        21.4% #> 5                 kurt      14        0         0.0% #> 6                 karl      14        0         0.0% #> 7               george      14        0         0.0% #> 8               martin      14        1         7.1% #> 9            elizabeth      14        0         0.0% #> 10           therapist      14        1         7.1% #> 11               irene      14        7        50.0% #> 12      childhood self      14        2        14.3% #> 13 self before illness      14        1         7.1% #> 14  self with delusion      14        0         0.0% #> 15     self as dreamer      14        1         7.1%  # control the output print(p, output = \"T\")  # total polarization #>  #> ################## #> Polarization index #> ################## #>  #>  #>  #> POLARIZATION OVERALL #>  #>   Ratings Extreme Polarization #> 1     210      26        12.4% print(p, output = \"C\")  # construct polarization #>  #> ################## #> Polarization index #> ################## #>  #>  #> POLARIZATION BY CONSTRUCT #>  #>                              Construct Ratings Extremes Polarization #> 1  balanced - get along with conflicts      15        2        13.3% #> 2                  isolated - sociable      15        1         6.7% #> 3        closely integrated - excluded      15        0         0.0% #> 4                 discursive - passive      15        2        13.3% #> 5            open minded - indifferent      15        3        20.0% #> 6               dreamy - dispassionate      15        1         6.7% #> 7     practically oriented - depressed      15        1         6.7% #> 8                    playful - serious      15        0         0.0% #> 9            socially minded - selfish      15        3        20.0% #> 10              quarrelsome - peaceful      15        2        13.3% #> 11                artistic - technical      15        1         6.7% #> 12              scientific - emotional      15        3        20.0% #> 13               introvert - extrovert      15        1         6.7% #> 14          wanderlust - home oriented      15        6        40.0% print(p, output = \"E\")  # element polarization #>  #> ################## #> Polarization index #> ################## #>  #>  #> POLARIZATION BY ELEMENT #>  #>                Element Ratings Extremes Polarization #> 1                 self      14        2        14.3% #> 2           ideal self      14        8        57.1% #> 3               mother      14        0         0.0% #> 4               father      14        3        21.4% #> 5                 kurt      14        0         0.0% #> 6                 karl      14        0         0.0% #> 7               george      14        0         0.0% #> 8               martin      14        1         7.1% #> 9            elizabeth      14        0         0.0% #> 10           therapist      14        1         7.1% #> 11               irene      14        7        50.0% #> 12      childhood self      14        2        14.3% #> 13 self before illness      14        1         7.1% #> 14  self with delusion      14        0         0.0% #> 15     self as dreamer      14        1         7.1%"},{"path":"https://docs.openrepgrid.org/reference/indexPvaff.html","id":null,"dir":"Reference","previous_headings":"","what":"Percentage of Variance Accounted for by the First Factor (PVAFF) — indexPvaff","title":"Percentage of Variance Accounted for by the First Factor (PVAFF) — indexPvaff","text":"PVAFF used measure cognitive complexity. introduced unpublished PhD thesis Jones (1954, cit. Bonarius, 1965). calculate , 'first factor' two different methods may used. One applies principal component analysis (PCA) construct centered raw data (default), second applies SVD construct correlation matrix. PVAFF reflects amount variation accounted single linear component. single latent component able explain variation grid, cognitive complexity said low. case construct system regarded 'simple' (Bell, 2003).","code":""},{"path":"https://docs.openrepgrid.org/reference/indexPvaff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percentage of Variance Accounted for by the First Factor (PVAFF) — indexPvaff","text":"","code":"indexPvaff(x, method = 1)"},{"path":"https://docs.openrepgrid.org/reference/indexPvaff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Percentage of Variance Accounted for by the First Factor (PVAFF) — indexPvaff","text":"x repgrid object. method Method compute PVAFF: 1 = PCA applied raw data centered constructs (default), 2 = SVD construct correlation matrix.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexPvaff.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Percentage of Variance Accounted for by the First Factor (PVAFF) — indexPvaff","text":"Bell, R. C. (2003). evaluation indices used represent construct structure. G. Chiari & M. L. Nuzzo (Eds.), Psychological Constructivism Social World (pp. 297-305). Milan: FrancoAngeli. Bonarius, J. C. J. (1965). Research personal construct theory George . Kelly: role construct repertory test basic theory. B. . Maher (Ed.), Progress experimental personality research (Vol. 2). New York: Academic Press. James, R. E. (1954). Identification terms personal constructs (Unpublished doctoral thesis). Ohio State University, Columbus, OH.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexPvaff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Percentage of Variance Accounted for by the First Factor (PVAFF) — indexPvaff","text":"","code":"indexPvaff(bell2010) #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> [1] 0.3402002"},{"path":"https://docs.openrepgrid.org/reference/indexSelfConstruction.html","id":null,"dir":"Reference","previous_headings":"","what":"Self construction profile — indexSelfConstruction","title":"Self construction profile — indexSelfConstruction","text":"TBD","code":""},{"path":"https://docs.openrepgrid.org/reference/indexSelfConstruction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Self construction profile — indexSelfConstruction","text":"","code":"indexSelfConstruction(   x,   self,   ideal,   others = c(-self, -ideal),   method = \"euclidean\",   p = 2,   normalize = TRUE,   round = FALSE )"},{"path":"https://docs.openrepgrid.org/reference/indexSelfConstruction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Self construction profile — indexSelfConstruction","text":"x repgrid object. self Numeric. Index self element. ideal Numeric. Index ideal element. others Numeric. Index(es) self related \"\" elements (e.g. father, friend). method distance correlation measure: Distances:  euclidean, manhattan, maximum,  canberra, binary, minkowski Correlations: pearson, kendall, spearman p power Minkowski distance, case minkowski used argument method, otherwise ignored. normalize Normalize values? round Round average rating scores 'others' closest integer?","code":""},{"path":"https://docs.openrepgrid.org/reference/indexSelfConstruction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Self construction profile — indexSelfConstruction","text":"List object class indexSelfConstruction, containing results calculations: grid: Reduced grid self, ideal others method_type: method type (correlation distance) method: correlation distance method used self_element: name self element ideal_element: name ideal element other_elements: name(s) elements self_ideal: measure self ideal self_others: measure self others ideal_others: measure betwen ideal others","code":""},{"path":"https://docs.openrepgrid.org/reference/indexSelfConstruction.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Self construction profile — indexSelfConstruction","text":"TBD","code":""},{"path":"https://docs.openrepgrid.org/reference/indexSelfConstruction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Self construction profile — indexSelfConstruction","text":"","code":"# using distance measures indexSelfConstruction(boeker, 1, 2, c(3:11), method = \"euclidean\") #> ================= #> SELF CONSTRUCTION #> ================= #>  #>   Mean ratings for 'others' rounded to closest integer:  FALSE #>  #> MEASURE #>  #>   normalized euclidean distance #>  #> COMPARISONS #>   #>   * Self - Ideal:  0.38  #>   * Self - Others:  0.3  #>   * Ideal - Others:  0.36 #>  #> ELEMENTS #>  #>   * self: self #>   * ideal: ideal self #>   * others: mother, father, kurt, karl, george, martin, elizabeth, therapist,  #>             irene indexSelfConstruction(boeker, 1, 2, c(3:11), method = \"manhattan\") #> ================= #> SELF CONSTRUCTION #> ================= #>  #>   Mean ratings for 'others' rounded to closest integer:  FALSE #>  #> MEASURE #>  #>   normalized manhattan distance #>  #> COMPARISONS #>   #>   * Self - Ideal:  0.29  #>   * Self - Others:  0.26  #>   * Ideal - Others:  0.33 #>  #> ELEMENTS #>  #>   * self: self #>   * ideal: ideal self #>   * others: mother, father, kurt, karl, george, martin, elizabeth, therapist,  #>             irene indexSelfConstruction(boeker, 1, 2, c(3:11), method = \"minkowski\", p = 3) #> ================= #> SELF CONSTRUCTION #> ================= #>  #>   Mean ratings for 'others' rounded to closest integer:  FALSE #>  #> MEASURE #>  #>   normalized minkowski distance #>  #> COMPARISONS #>   #>   * Self - Ideal:  0.44  #>   * Self - Others:  0.34  #>   * Ideal - Others:  0.39 #>  #> ELEMENTS #>  #>   * self: self #>   * ideal: ideal self #>   * others: mother, father, kurt, karl, george, martin, elizabeth, therapist,  #>             irene  # using correlation measures indexSelfConstruction(boeker, 1, 2, c(3:11), method = \"pearson\") #> ================= #> SELF CONSTRUCTION #> ================= #>  #>   Mean ratings for 'others' rounded to closest integer:  FALSE #>  #> MEASURE #>  #>   normalized pearson correlation #>   Note: All correlations use Cohen's rc version which is invariant to  #>         construct reflections #>  #> COMPARISONS #>   #>   * Self - Ideal:  0.48  #>   * Self - Others:  0.12  #>   * Ideal - Others:  0.6 #>  #> ELEMENTS #>  #>   * self: self #>   * ideal: ideal self #>   * others: mother, father, kurt, karl, george, martin, elizabeth, therapist,  #>             irene indexSelfConstruction(boeker, 1, 2, c(3:11), method = \"spearman\") #> ================= #> SELF CONSTRUCTION #> ================= #>  #>   Mean ratings for 'others' rounded to closest integer:  FALSE #>  #> MEASURE #>  #>   normalized spearman correlation #>   Note: All correlations use Cohen's rc version which is invariant to  #>         construct reflections #>  #> COMPARISONS #>   #>   * Self - Ideal:  0.48  #>   * Self - Others:  0.12  #>   * Ideal - Others:  0.6 #>  #> ELEMENTS #>  #>   * self: self #>   * ideal: ideal self #>   * others: mother, father, kurt, karl, george, martin, elizabeth, therapist,  #>             irene  # using not-normalized distances indexSelfConstruction(boeker, 1, 2, c(3:11), method = \"euclidean\", normalize = FALSE) #> ================= #> SELF CONSTRUCTION #> ================= #>  #>   Mean ratings for 'others' rounded to closest integer:  FALSE #>  #> MEASURE #>  #>    euclidean distance #>  #> COMPARISONS #>   #>   * Self - Ideal:  7.07  #>   * Self - Others:  5.63  #>   * Ideal - Others:  6.72 #>  #> ELEMENTS #>  #>   * self: self #>   * ideal: ideal self #>   * others: mother, father, kurt, karl, george, martin, elizabeth, therapist,  #>             irene  # printing the results (biplot only works with) cp <- indexSelfConstruction(boeker, 1, 2, c(3:11)) cp$grid  # grid with self, ideal and others #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  3  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                        2 - ideal self                         #>               self - 1 | 3 - others                           #>                      | | |                                    #>       balanced (1)   1 4 3.44444444444444   (1) get along wit #>       isolated (2)   3 6 4.33333333333333   (2) sociable      #> ely integrated (3)   2 2 2.88888888888889   (3) excluded      #>     discursive (4)   4 1 2.55555555555556   (4) passive       #>    open minded (5)   2 1                3   (5) indifferent   #>         dreamy (6)   4 5 4.44444444444444   (6) dispassionate #> cally oriented (7)   2 1 2.55555555555556   (7) depressed     #>        playful (8)   4 5 3.55555555555556   (8) serious       #> ocially minded (9)   2 1 3.33333333333333   (9) selfish       #>   quarrelsome (10)   5 5 3.66666666666667   (10) peaceful     #>      artistic (11)   5 1 3.22222222222222   (11) technical    #>    scientific (12)   2 1 3.88888888888889   (12) emotional    #>     introvert (13)   4 5 4.22222222222222   (13) extrovert    #>    wanderlust (14)   1 1                4   (14) home oriente #>  biplot2d(cp$grid, center = 4)  # midopoint centering"},{"path":"https://docs.openrepgrid.org/reference/indexUncertainty.html","id":null,"dir":"Reference","previous_headings":"","what":"Uncertainty index — indexUncertainty","title":"Uncertainty index — indexUncertainty","text":"measure degree dispersion dependency dependency grid (Bell, 2001). normalized measure value range 0 1. index applicable dependency grids (e.g., situation-resource) , .e., grid ratings must 0 1.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexUncertainty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uncertainty index — indexUncertainty","text":"","code":"indexUncertainty(x)"},{"path":"https://docs.openrepgrid.org/reference/indexUncertainty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uncertainty index — indexUncertainty","text":"x repgrid object 0/1 ratings , 1 indicates dependency.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexUncertainty.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Uncertainty index — indexUncertainty","text":"Theoretical Background: Dispersion Dependency: Kelly (1969) proposed problematic view people either independent dependent everyone , greater lesser degrees, dependent upon others life. Kelly felt important well people disperse dependencies across different people. Whereas young children tend dependencies concentrated  small number people (typically parents), adults likely spread dependencies across variety others. Dispersing one's dependencies generally considered psychologically adjusted adults (Walker et al., 1988).","code":""},{"path":"https://docs.openrepgrid.org/reference/indexUncertainty.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Uncertainty index — indexUncertainty","text":"Bell, R. C. (2001). new Measures Dispersion Dependency Situation-Resource Grid. Journal Constructivist Psychology, 14(3), 227-234, doi:10.1080/713840106 .","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/indexUncertainty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uncertainty index — indexUncertainty","text":"","code":"# sample grid from Bell (2001, p.231) file <- system.file(\"extdata\", \"dep_grid_bell_2001.xlsx\" , package = \"OpenRepGrid\") x <- importExcel(file)  indexUncertainty(x)  #> Uncertainty Index  #>         0.9909569"},{"path":"https://docs.openrepgrid.org/reference/indexVariability.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate 'variability' of a grid as defined by Slater (1977). — indexVariability","title":"Calculate 'variability' of a grid as defined by Slater (1977). — indexVariability","text":"Variability records tendency responses gravitate towards end gradings scale. (Slater, 1977, p.88).","code":""},{"path":"https://docs.openrepgrid.org/reference/indexVariability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate 'variability' of a grid as defined by Slater (1977). — indexVariability","text":"","code":"indexVariability(x, min = NULL, max = NULL, digits = 2)"},{"path":"https://docs.openrepgrid.org/reference/indexVariability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate 'variability' of a grid as defined by Slater (1977). — indexVariability","text":"x repgrid object. min, max Minimum maximum grid scale values. needed set grid. digits Numeric. Number digits round (default 2).","code":""},{"path":"https://docs.openrepgrid.org/reference/indexVariability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate 'variability' of a grid as defined by Slater (1977). — indexVariability","text":"Numeric.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexVariability.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate 'variability' of a grid as defined by Slater (1977). — indexVariability","text":"STATUS: working checked example Slater, 1977 , p.88.","code":""},{"path":"https://docs.openrepgrid.org/reference/indexVariability.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate 'variability' of a grid as defined by Slater (1977). — indexVariability","text":"Slater, P. (1977). measurement intrapersonal space Grid technique. London: Wiley.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/indexVariability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate 'variability' of a grid as defined by Slater (1977). — indexVariability","text":"","code":"indexVariability(boeker) #>  max  #> 0.51"},{"path":"https://docs.openrepgrid.org/reference/is.repgrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if object has class repgrid — is.repgrid","title":"Test if object has class repgrid — is.repgrid","text":"Test object class repgrid","code":""},{"path":"https://docs.openrepgrid.org/reference/is.repgrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if object has class repgrid — is.repgrid","text":"","code":"is.repgrid(x)"},{"path":"https://docs.openrepgrid.org/reference/is.repgrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if object has class repgrid — is.repgrid","text":"x object.","code":""},{"path":"https://docs.openrepgrid.org/reference/lapply_pb.html","id":null,"dir":"Reference","previous_headings":"","what":"lapply with a progress bar — lapply_pb","title":"lapply with a progress bar — lapply_pb","text":"Can used like standard base:::lapply. thing create additional progress bar.","code":""},{"path":"https://docs.openrepgrid.org/reference/lapply_pb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lapply with a progress bar — lapply_pb","text":"","code":"lapply_pb(X, FUN, ...)"},{"path":"https://docs.openrepgrid.org/reference/lapply_pb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"lapply with a progress bar — lapply_pb","text":"X see ?lapply parameter explanation FUN see ?lapply ... see ?lapply","code":""},{"path":"https://docs.openrepgrid.org/reference/lapply_pb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"lapply with a progress bar — lapply_pb","text":"list       see ?lapply","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/lapply_pb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lapply with a progress bar — lapply_pb","text":"","code":"if (FALSE) { # \\dontrun{  l <- sapply(1:20000, function(x) list(rnorm(1000))) lapply_pb(l, mean) } # }"},{"path":"https://docs.openrepgrid.org/reference/makeEmptyRepgrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for repgrid class — makeEmptyRepgrid","title":"Constructor for repgrid class — makeEmptyRepgrid","text":"Constructor repgrid class","code":""},{"path":"https://docs.openrepgrid.org/reference/makeEmptyRepgrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for repgrid class — makeEmptyRepgrid","text":"","code":"makeEmptyRepgrid()"},{"path":"https://docs.openrepgrid.org/reference/makeEmptyRepgrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for repgrid class — makeEmptyRepgrid","text":"repgrid object","code":""},{"path":"https://docs.openrepgrid.org/reference/makeRepgrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a new repgrid object. — makeRepgrid","title":"Make a new repgrid object. — makeRepgrid","text":"function creates repgrid object scratch. number parameters defined order make new grid (see parameters).","code":""},{"path":"https://docs.openrepgrid.org/reference/makeRepgrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a new repgrid object. — makeRepgrid","text":"","code":"makeRepgrid(args)"},{"path":"https://docs.openrepgrid.org/reference/makeRepgrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a new repgrid object. — makeRepgrid","text":"args Arguments needed construction grid (list). include name followed vector containing element names. l.name followed vector left construct poles. r.name followed vector right construct poles. scores followed vector containing rating scores row wise.","code":""},{"path":"https://docs.openrepgrid.org/reference/makeRepgrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a new repgrid object. — makeRepgrid","text":"NULL","code":""},{"path":"https://docs.openrepgrid.org/reference/makeRepgrid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a new repgrid object. — makeRepgrid","text":"","code":"if (FALSE) { # \\dontrun{  # make list object containing the arguments args <- list(   name = c(\"element_1\", \"element_2\", \"element_3\", \"element_4\"),   l.name = c(\"left_1\", \"left_2\", \"left_3\"),   r.name = c(\"right_1\", \"right_2\", \"right_3\"),   scores = c(     1, 0, 1, 0,     1, 1, 1, 0,     1, 0, 1, 0   ) ) # make grid object x <- makeRepgrid(args) x } # }"},{"path":"https://docs.openrepgrid.org/reference/map.html","id":null,"dir":"Reference","previous_headings":"","what":"map a value onto others — map","title":"map a value onto others — map","text":"map value onto others","code":""},{"path":"https://docs.openrepgrid.org/reference/map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"map a value onto others — map","text":"","code":"map(x, each)"},{"path":"https://docs.openrepgrid.org/reference/map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"map a value onto others — map","text":"x vector number cuts","code":""},{"path":"https://docs.openrepgrid.org/reference/map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"map a value onto others — map","text":"vector","code":""},{"path":"https://docs.openrepgrid.org/reference/map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"map a value onto others — map","text":"","code":"if (FALSE) { # \\dontrun{ map(1:10, 3)  m <- matrix(1:12, ncol = 4) for (i in 1:12) {   print(m[ring(i, 3), map(i, 4)]) } } # }"},{"path":"https://docs.openrepgrid.org/reference/mapCoordinatesToColor.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine color values according to a given range of values. — mapCoordinatesToColor","title":"Determine color values according to a given range of values. — mapCoordinatesToColor","text":"given numeric vector z range determined values linearly mapped onto interval given val.range. color ramp using colors given color created mapped values transformed hex color values.","code":""},{"path":"https://docs.openrepgrid.org/reference/mapCoordinatesToColor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine color values according to a given range of values. — mapCoordinatesToColor","text":"","code":"mapCoordinatesToColor(z, colors = c(\"white\", \"black\"), val.range = c(0.2, 0.8))"},{"path":"https://docs.openrepgrid.org/reference/mapCoordinatesToColor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine color values according to a given range of values. — mapCoordinatesToColor","text":"z numeric vector. colors vector length two giving color values c(\"white\", \"black\"). val.range numeric vector lengths two (default c(.2, .8)).","code":""},{"path":"https://docs.openrepgrid.org/reference/mapCoordinatesToColor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine color values according to a given range of values. — mapCoordinatesToColor","text":"numeric vector","code":""},{"path":"https://docs.openrepgrid.org/reference/mapCoordinatesToValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Map arbitrary numeric vector to a given range of values. — mapCoordinatesToValue","title":"Map arbitrary numeric vector to a given range of values. — mapCoordinatesToValue","text":"given numeric vector z range determined values linearly mapped onto interval given val.range. function can used order map arbitrary vectors given range values.","code":""},{"path":"https://docs.openrepgrid.org/reference/mapCoordinatesToValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map arbitrary numeric vector to a given range of values. — mapCoordinatesToValue","text":"","code":"mapCoordinatesToValue(z, val.range = c(0.5, 1))"},{"path":"https://docs.openrepgrid.org/reference/mapCoordinatesToValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map arbitrary numeric vector to a given range of values. — mapCoordinatesToValue","text":"z numeric vector. val.range numeric vector lengths two (default c(.5, 1)).","code":""},{"path":"https://docs.openrepgrid.org/reference/mapCoordinatesToValue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map arbitrary numeric vector to a given range of values. — mapCoordinatesToValue","text":"numeric vector","code":""},{"path":"https://docs.openrepgrid.org/reference/matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of matches in ratings — matches","title":"Number of matches in ratings — matches","text":"Count number matches, .e. (near) identical ratings two elements constructs. Matches used basis calculation grid indexes.","code":""},{"path":"https://docs.openrepgrid.org/reference/matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of matches in ratings — matches","text":"","code":"matches(x, deviation = 0, diag.na = TRUE)"},{"path":"https://docs.openrepgrid.org/reference/matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of matches in ratings — matches","text":"x repgrid object. deviation Maximal difference ratings considered match (default 0 = identical rating scores match). Especially useful long rating scale (e.g. 0 100). diag.na Whether set diagonal matrices NA (default TRUE).","code":""},{"path":"https://docs.openrepgrid.org/reference/matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of matches in ratings — matches","text":"list class org.matches : grid: grid used calculate matches. deviation deviation parameter. max_constructs Maximum possible number matches across constructs. max_elements Maximum possible number matches across elements. total_constructs Total number matches across constructs. total_elements Total number matches across elements. constructs: Matrix . matches constructs. elements: Matrix . matches elements.","code":""},{"path":"https://docs.openrepgrid.org/reference/matches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of matches in ratings — matches","text":"","code":"m <- matches(boeker)  # several output options print(m, index = FALSE, names = FALSE, upper = FALSE) #>  #> ############## #> RATING MATCHES #> ############## #>  #> Maximal rating difference to count as match:  0 #>  #> Total no. of matches between constructs:  327 #> Maximum possible no. of matches between constructs:  1365 #>  #> Total no. of matches between elements:  343 #> Maximum possible no. of matches between elements:  1470 #>  #> ELEMENTS #>  #>     1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 #> 1  NA  3  6  3  4  2  3  2  4  4  1  1  4  3  4 #> 2   3 NA  2  4  2  1  3  2  3  1  2  1  2  1  2 #> 3   6  2 NA  2  5  1  5  3  4  4  1  5  7  6  4 #> 4   3  4  2 NA  2  3  4  5  3  3  2  3  3  4  5 #> 5   4  2  5  2 NA  2  8  1  5  6  2  2  3  6  3 #> 6   2  1  1  3  2 NA  2  8  3  3  2  4  1  1  5 #> 7   3  3  5  4  8  2 NA  0  5  5  2  2  4  3  2 #> 8   2  2  3  5  1  8  0 NA  3  3  4  3  2  2  4 #> 9   4  3  4  3  5  3  5  3 NA  3  3  4  3  3  2 #> 10  4  1  4  3  6  3  5  3  3 NA  3  4  4  4  2 #> 11  1  2  1  2  2  2  2  4  3  3 NA  2  1  0  1 #> 12  1  1  5  3  2  4  2  3  4  4  2 NA  9  5  6 #> 13  4  2  7  3  3  1  4  2  3  4  1  9 NA  8  5 #> 14  3  1  6  4  6  1  3  2  3  4  0  5  8 NA  6 #> 15  4  2  4  5  3  5  2  4  2  2  1  6  5  6 NA #>  #> CONSTRUCTS #>  #>     1  2  3  4  5  6  7  8  9 10 11 12 13 14 #> 1  NA  2  3  2  6  5  4  4  6  1  4  5  4  6 #> 2   2 NA  3  2  4  3  2  3  2  4  1  5  6  2 #> 3   3  3 NA  4  3  0  5  5  2  2  5  5  4  2 #> 4   2  2  4 NA  6  4  4  4  6  1  3  3  3  2 #> 5   6  4  3  6 NA  4  5  4  7  2  4  7  4  3 #> 6   5  3  0  4  4 NA  4  6  8  4  2  4  2  4 #> 7   4  2  5  4  5  4 NA  3  8  1  5  4  2  3 #> 8   4  3  5  4  4  6  3 NA  3  3  2  6  8  3 #> 9   6  2  2  6  7  8  8  3 NA  0  2  6  2  5 #> 10  1  4  2  1  2  4  1  3  0 NA  3  3  3  0 #> 11  4  1  5  3  4  2  5  2  2  3 NA  3  0  3 #> 12  5  5  5  3  7  4  4  6  6  3  3 NA  4  3 #> 13  4  6  4  3  4  2  2  8  2  3  0  4 NA  3 #> 14  6  2  2  2  3  4  3  3  5  0  3  3  3 NA print(m, output = \"C\")  # construct matches #>  #> ############## #> RATING MATCHES #> ############## #>  #> CONSTRUCTS #>  #>                                            1  2  3  4  5  6  7  8  9 10 11 12 #> 1  balanced - get along with conflicts  1     2  3  2  6  5  4  4  6  1  4  5 #> 2                  isolated - sociable  2        3  2  4  3  2  3  2  4  1  5 #> 3        closely integrated - excluded  3           4  3  0  5  5  2  2  5  5 #> 4                 discursive - passive  4              6  4  4  4  6  1  3  3 #> 5            open minded - indifferent  5                 4  5  4  7  2  4  7 #> 6               dreamy - dispassionate  6                    4  6  8  4  2  4 #> 7     practically oriented - depressed  7                       3  8  1  5  4 #> 8                    playful - serious  8                          3  3  2  6 #> 9            socially minded - selfish  9                             0  2  6 #> 10              quarrelsome - peaceful 10                                3  3 #> 11                artistic - technical 11                                   3 #> 12              scientific - emotional 12                                     #> 13               introvert - extrovert 13                                     #> 14          wanderlust - home oriented 14                                     #>    13 14 #> 1   4  6 #> 2   6  2 #> 3   4  2 #> 4   3  2 #> 5   4  3 #> 6   2  4 #> 7   2  3 #> 8   8  3 #> 9   2  5 #> 10  3  0 #> 11  0  3 #> 12  4  3 #> 13     3 #> 14       print(m, output = \"E\")  # element matches #>  #> ############## #> RATING MATCHES #> ############## #>  #> ELEMENTS #>  #>                            1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 #> 1                 self  1     3  6  3  4  2  3  2  4  4  1  1  4  3  4 #> 2           ideal self  2        2  4  2  1  3  2  3  1  2  1  2  1  2 #> 3               mother  3           2  5  1  5  3  4  4  1  5  7  6  4 #> 4               father  4              2  3  4  5  3  3  2  3  3  4  5 #> 5                 kurt  5                 2  8  1  5  6  2  2  3  6  3 #> 6                 karl  6                    2  8  3  3  2  4  1  1  5 #> 7               george  7                       0  5  5  2  2  4  3  2 #> 8               martin  8                          3  3  4  3  2  2  4 #> 9            elizabeth  9                             3  3  4  3  3  2 #> 10           therapist 10                                3  4  4  4  2 #> 11               irene 11                                   2  1  0  1 #> 12      childhood self 12                                      9  5  6 #> 13 self before illness 13                                         8  5 #> 14  self with delusion 14                                            6 #> 15     self as dreamer 15                                               # extract the matrices m$constructs #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>  [1,]   NA    2    3    2    6    5    4    4    6     1     4     5     4 #>  [2,]    2   NA    3    2    4    3    2    3    2     4     1     5     6 #>  [3,]    3    3   NA    4    3    0    5    5    2     2     5     5     4 #>  [4,]    2    2    4   NA    6    4    4    4    6     1     3     3     3 #>  [5,]    6    4    3    6   NA    4    5    4    7     2     4     7     4 #>  [6,]    5    3    0    4    4   NA    4    6    8     4     2     4     2 #>  [7,]    4    2    5    4    5    4   NA    3    8     1     5     4     2 #>  [8,]    4    3    5    4    4    6    3   NA    3     3     2     6     8 #>  [9,]    6    2    2    6    7    8    8    3   NA     0     2     6     2 #> [10,]    1    4    2    1    2    4    1    3    0    NA     3     3     3 #> [11,]    4    1    5    3    4    2    5    2    2     3    NA     3     0 #> [12,]    5    5    5    3    7    4    4    6    6     3     3    NA     4 #> [13,]    4    6    4    3    4    2    2    8    2     3     0     4    NA #> [14,]    6    2    2    2    3    4    3    3    5     0     3     3     3 #>       [,14] #>  [1,]     6 #>  [2,]     2 #>  [3,]     2 #>  [4,]     2 #>  [5,]     3 #>  [6,]     4 #>  [7,]     3 #>  [8,]     3 #>  [9,]     5 #> [10,]     0 #> [11,]     3 #> [12,]     3 #> [13,]     3 #> [14,]    NA m$elements #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>  [1,]   NA    3    6    3    4    2    3    2    4     4     1     1     4 #>  [2,]    3   NA    2    4    2    1    3    2    3     1     2     1     2 #>  [3,]    6    2   NA    2    5    1    5    3    4     4     1     5     7 #>  [4,]    3    4    2   NA    2    3    4    5    3     3     2     3     3 #>  [5,]    4    2    5    2   NA    2    8    1    5     6     2     2     3 #>  [6,]    2    1    1    3    2   NA    2    8    3     3     2     4     1 #>  [7,]    3    3    5    4    8    2   NA    0    5     5     2     2     4 #>  [8,]    2    2    3    5    1    8    0   NA    3     3     4     3     2 #>  [9,]    4    3    4    3    5    3    5    3   NA     3     3     4     3 #> [10,]    4    1    4    3    6    3    5    3    3    NA     3     4     4 #> [11,]    1    2    1    2    2    2    2    4    3     3    NA     2     1 #> [12,]    1    1    5    3    2    4    2    3    4     4     2    NA     9 #> [13,]    4    2    7    3    3    1    4    2    3     4     1     9    NA #> [14,]    3    1    6    4    6    1    3    2    3     4     0     5     8 #> [15,]    4    2    4    5    3    5    2    4    2     2     1     6     5 #>       [,14] [,15] #>  [1,]     3     4 #>  [2,]     1     2 #>  [3,]     6     4 #>  [4,]     4     5 #>  [5,]     6     3 #>  [6,]     1     5 #>  [7,]     3     2 #>  [8,]     2     4 #>  [9,]     3     2 #> [10,]     4     2 #> [11,]     0     1 #> [12,]     5     6 #> [13,]     8     5 #> [14,]    NA     6 #> [15,]     6    NA"},{"path":"https://docs.openrepgrid.org/reference/midpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Midpoint of the grid rating scale — midpoint","title":"Midpoint of the grid rating scale — midpoint","text":"Midpoint grid rating scale","code":""},{"path":"https://docs.openrepgrid.org/reference/midpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Midpoint of the grid rating scale — midpoint","text":"","code":"midpoint(x)"},{"path":"https://docs.openrepgrid.org/reference/midpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Midpoint of the grid rating scale — midpoint","text":"x repgrid object.","code":""},{"path":"https://docs.openrepgrid.org/reference/midpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Midpoint of the grid rating scale — midpoint","text":"Midpoint scale.","code":""},{"path":"https://docs.openrepgrid.org/reference/midpoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Midpoint of the grid rating scale — midpoint","text":"","code":"midpoint(bell2010) #> [1] 4"},{"path":"https://docs.openrepgrid.org/reference/modifyConstruct.html","id":null,"dir":"Reference","previous_headings":"","what":"modify a construct — modifyConstruct","title":"modify a construct — modifyConstruct","text":"change attributes construct","code":""},{"path":"https://docs.openrepgrid.org/reference/modifyConstruct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"modify a construct — modifyConstruct","text":"","code":"modifyConstruct(   x,   pos,   l.name = NA,   l.preferred = NA,   l.emerged = NA,   r.name = NA,   r.preferred = NA,   r.emerged = NA,   replace = FALSE )"},{"path":"https://docs.openrepgrid.org/reference/modifyConstruct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"modify a construct — modifyConstruct","text":"x repgrid object pos row number construct grid changed l.name (optional) name left pole (string) l.preferred (optional) left one preferred pole? (logical) l.emerged (optional) left one emergent pole? (logical) r.name (optional) name right pole (string) r.preferred (optional) right one preferred pole? (logical) r.emerged (optional) right one emergent pole? (logical) replace sttributes replaced NA provided?","code":""},{"path":"https://docs.openrepgrid.org/reference/modifyConstruct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"modify a construct — modifyConstruct","text":"repgrid object","code":""},{"path":"https://docs.openrepgrid.org/reference/modifyConstruct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"modify a construct — modifyConstruct","text":"","code":"if (FALSE) { # \\dontrun{  ####  TODO  #### } # }"},{"path":"https://docs.openrepgrid.org/reference/modifyElement.html","id":null,"dir":"Reference","previous_headings":"","what":"modifyElement — modifyElement","title":"modifyElement — modifyElement","text":"change attributes element .e. name, abbreviation, status etc.","code":""},{"path":"https://docs.openrepgrid.org/reference/modifyElement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"modifyElement — modifyElement","text":"","code":"modifyElement(   x,   pos,   name = NA,   abbreviation = NA,   status = NA,   replace = FALSE )"},{"path":"https://docs.openrepgrid.org/reference/modifyElement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"modifyElement — modifyElement","text":"x repgrid object pos column number element grid whose attributes changed name (optional) new name abbreviation (optional) abbreviation element name status (optional) status element (e.g. ideal etc.) replace logical. whether overwrite current settings NA provided","code":""},{"path":"https://docs.openrepgrid.org/reference/modifyElement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"modifyElement — modifyElement","text":"repgrid object","code":""},{"path":"https://docs.openrepgrid.org/reference/modifyElement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"modifyElement — modifyElement","text":"","code":"if (FALSE) { # \\dontrun{  ####  TODO  #### } # }"},{"path":"https://docs.openrepgrid.org/reference/move.html","id":null,"dir":"Reference","previous_headings":"","what":"Move construct or element in grid to the left, right, up or down. — left","title":"Move construct or element in grid to the left, right, up or down. — left","text":"Move element grid right.","code":""},{"path":"https://docs.openrepgrid.org/reference/move.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move construct or element in grid to the left, right, up or down. — left","text":"","code":"left(x, pos = 0)  right(x, pos = 0)  up(x, pos = 0)  down(x, pos = 0)"},{"path":"https://docs.openrepgrid.org/reference/move.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move construct or element in grid to the left, right, up or down. — left","text":"x repgrid object. pos Row (column) number construct (element) moved leftwards, rightwards, upwards downwards. default 0. indexes outside range grid moving done.","code":""},{"path":"https://docs.openrepgrid.org/reference/move.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move construct or element in grid to the left, right, up or down. — left","text":"repgrid object. repgrid object repgrid object repgrid object","code":""},{"path":"https://docs.openrepgrid.org/reference/move.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Move construct or element in grid to the left, right, up or down. — left","text":"","code":"if (FALSE) { # \\dontrun{ x <- randomGrid() left(x, 2) # 2nd element to the left right(x, 1) # 1st element to the right up(x, 2) # 2nd construct upwards down(x, 1) # 1st construct downwards } # }"},{"path":"https://docs.openrepgrid.org/reference/multigridFileToSinglegridFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a Gridstat multigrid file into temporary single grid files and returns their path — multigridFileToSinglegridFiles","title":"Converts a Gridstat multigrid file into temporary single grid files and returns their path — multigridFileToSinglegridFiles","text":"format multigrid file resembles single Gridstat data file. lines single files simply placed without blank lines . function reads file tests multigrid file. Multigrid files separated single Gridstat temp files. file path temp files returned. file single grid files path left unaltered.","code":""},{"path":"https://docs.openrepgrid.org/reference/multigridFileToSinglegridFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a Gridstat multigrid file into temporary single grid files and returns their path — multigridFileToSinglegridFiles","text":"","code":"multigridFileToSinglegridFiles(file)"},{"path":"https://docs.openrepgrid.org/reference/multigridFileToSinglegridFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a Gridstat multigrid file into temporary single grid files and returns their path — multigridFileToSinglegridFiles","text":"file Filenames Gridstat file","code":""},{"path":"https://docs.openrepgrid.org/reference/multigridFileToSinglegridFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a Gridstat multigrid file into temporary single grid files and returns their path — multigridFileToSinglegridFiles","text":"vector containing paths temp files","code":""},{"path":"https://docs.openrepgrid.org/reference/normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize rows or columns by its standard deviation. — normalize","title":"Normalize rows or columns by its standard deviation. — normalize","text":"Normalize rows columns standard deviation.","code":""},{"path":"https://docs.openrepgrid.org/reference/normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize rows or columns by its standard deviation. — normalize","text":"","code":"normalize(x, normalize = 0, ...)"},{"path":"https://docs.openrepgrid.org/reference/normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize rows or columns by its standard deviation. — normalize","text":"x matrix normalize numeric value indicating along direction (rows, columns) normalize standard deviations. 0 = none, 1= rows, 2 = columns (default 0). ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize rows or columns by its standard deviation. — normalize","text":"yet defined TODO!","code":""},{"path":"https://docs.openrepgrid.org/reference/normalize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize rows or columns by its standard deviation. — normalize","text":"","code":"x <- matrix(sample(1:5, 20, rep = TRUE), 4) normalize(x, 1) # normalizing rows #>          [,1]     [,2]      [,3]     [,4]     [,5] #> [1,] 1.533930 2.300895 3.0678600 0.766965 3.067860 #> [2,] 1.825742 1.825742 0.9128709 1.825742 3.651484 #> [3,] 0.559017 0.559017 1.6770510 0.559017 2.795085 #> [4,] 1.118034 3.354102 3.3541020 2.236068 3.354102 #> attr(,\"scaled:scale\") #> [1] 1.3038405 1.0954451 1.7888544 0.8944272 normalize(x, 2) # normalizing columns #>          [,1]     [,2]      [,3]     [,4]     [,5] #> [1,] 3.464102 3.133398 3.1788777 1.732051 4.898979 #> [2,] 3.464102 2.088932 0.7947194 3.464102 4.898979 #> [3,] 1.732051 1.044466 2.3841582 1.732051 6.123724 #> [4,] 1.732051 3.133398 2.3841582 3.464102 3.674235 #> attr(,\"scaled:scale\") #> [1] 0.5773503 0.9574271 1.2583057 0.5773503 0.8164966"},{"path":"https://docs.openrepgrid.org/reference/openrepgridSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"subset method for openrepgridSettings class — [.openrepgridSettings","title":"subset method for openrepgridSettings class — [.openrepgridSettings","text":"subset method openrepgridSettings class Print method openrepgridSettings class","code":""},{"path":"https://docs.openrepgrid.org/reference/openrepgridSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"subset method for openrepgridSettings class — [.openrepgridSettings","text":"","code":"# S3 method for class 'openrepgridSettings' x[i, ...]  # S3 method for class 'openrepgridSettings' print(x, ...)"},{"path":"https://docs.openrepgrid.org/reference/ops-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate repgrid objects. — +,repgrid,repgrid-method","title":"Concatenate repgrid objects. — +,repgrid,repgrid-method","text":"Simple concatenation repgrid objects list containing repgrid objects using '+' operator.","code":""},{"path":"https://docs.openrepgrid.org/reference/ops-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate repgrid objects. — +,repgrid,repgrid-method","text":"","code":"# S4 method for class 'repgrid,repgrid' e1 + e2  # S4 method for class 'list,repgrid' e1 + e2  # S4 method for class 'repgrid,list' e1 + e2  # S4 method for class 'repgrid,repgrid' e1/e2"},{"path":"https://docs.openrepgrid.org/reference/ops-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate repgrid objects. — +,repgrid,repgrid-method","text":"e1, e2 repgrid object.","code":""},{"path":"https://docs.openrepgrid.org/reference/ops-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate repgrid objects. — +,repgrid,repgrid-method","text":"","code":"# join constructs x <- bell2010 x + x #>  #> META DATA: #> Number of constructs:  18  #> Number of elements:  10  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 7 (right pole) #>  #> RATINGS: #>    A teacher you respected - 5 6 - Mother (or the person who #> on of the opposite sex t - 4 | | 7 - A person of the opposit #> ppiest person you know - 3 | | | | 8 - The most confident pe #> iend of the same sex - 2 | | | | | | 9 - A person you work w #>               self - 1 | | | | | | | | 10 - A teacher you di #>                      | | | | | | | | | |                     #>        relaxed (1)   4 4 6 5 3 6 5 2 2 6   (1) worried & ten #> (academically) (2)   6 7 6 5 7 4 6 7 4 7   (2) smart (academ #> islikes sports (3)   6 3 7 6 4 4 2 3 6 3   (3) loves sports  #> ot interactive (4)   6 7 5 6 6 5 6 7 7 4   (4) loves people  #> ot transparent (5)   6 4 5 7 3 7 6 5 6 3   (5) transparent   #>    insensitive (6)   4 6 5 4 4 6 5 3 4 2   (6) sensitive     #>  fearful&timid (7)   5 4 4 6 5 3 5 6 5 5   (7) fearless      #>          rough (8)   5 6 6 4 5 7 7 3 5 6   (8) gentle        #> ccept as it is (9)   5 5 6 7 4 4 6 7 5 5   (9) loves to argu #>       relaxed (10)   4 4 6 5 3 6 5 2 2 6   (10) worried & te #> academically) (11)   6 7 6 5 7 4 6 7 4 7   (11) smart (acade #> slikes sports (12)   6 3 7 6 4 4 2 3 6 3   (12) loves sports #> t interactive (13)   6 7 5 6 6 5 6 7 7 4   (13) loves people #> t transparent (14)   6 4 5 7 3 7 6 5 6 3   (14) transparent  #>   insensitive (15)   4 6 5 4 4 6 5 3 4 2   (15) sensitive    #> fearful&timid (16)   5 4 4 6 5 3 5 6 5 5   (16) fearless     #>         rough (17)   5 6 6 4 5 7 7 3 5 6   (17) gentle       #> cept as it is (18)   5 5 6 7 4 4 6 7 5 5   (18) loves to arg #>  x + list(x, x) #>  #> META DATA: #> Number of constructs:  27  #> Number of elements:  10  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 7 (right pole) #>  #> RATINGS: #>    A teacher you respected - 5 6 - Mother (or the person who #> on of the opposite sex t - 4 | | 7 - A person of the opposit #> ppiest person you know - 3 | | | | 8 - The most confident pe #> iend of the same sex - 2 | | | | | | 9 - A person you work w #>               self - 1 | | | | | | | | 10 - A teacher you di #>                      | | | | | | | | | |                     #>        relaxed (1)   4 4 6 5 3 6 5 2 2 6   (1) worried & ten #> (academically) (2)   6 7 6 5 7 4 6 7 4 7   (2) smart (academ #> islikes sports (3)   6 3 7 6 4 4 2 3 6 3   (3) loves sports  #> ot interactive (4)   6 7 5 6 6 5 6 7 7 4   (4) loves people  #> ot transparent (5)   6 4 5 7 3 7 6 5 6 3   (5) transparent   #>    insensitive (6)   4 6 5 4 4 6 5 3 4 2   (6) sensitive     #>  fearful&timid (7)   5 4 4 6 5 3 5 6 5 5   (7) fearless      #>          rough (8)   5 6 6 4 5 7 7 3 5 6   (8) gentle        #> ccept as it is (9)   5 5 6 7 4 4 6 7 5 5   (9) loves to argu #>       relaxed (10)   4 4 6 5 3 6 5 2 2 6   (10) worried & te #> academically) (11)   6 7 6 5 7 4 6 7 4 7   (11) smart (acade #> slikes sports (12)   6 3 7 6 4 4 2 3 6 3   (12) loves sports #> t interactive (13)   6 7 5 6 6 5 6 7 7 4   (13) loves people #> t transparent (14)   6 4 5 7 3 7 6 5 6 3   (14) transparent  #>   insensitive (15)   4 6 5 4 4 6 5 3 4 2   (15) sensitive    #> fearful&timid (16)   5 4 4 6 5 3 5 6 5 5   (16) fearless     #>         rough (17)   5 6 6 4 5 7 7 3 5 6   (17) gentle       #> cept as it is (18)   5 5 6 7 4 4 6 7 5 5   (18) loves to arg #>       relaxed (19)   4 4 6 5 3 6 5 2 2 6   (19) worried & te #> academically) (20)   6 7 6 5 7 4 6 7 4 7   (20) smart (acade #> slikes sports (21)   6 3 7 6 4 4 2 3 6 3   (21) loves sports #> t interactive (22)   6 7 5 6 6 5 6 7 7 4   (22) loves people #> t transparent (23)   6 4 5 7 3 7 6 5 6 3   (23) transparent  #>   insensitive (24)   4 6 5 4 4 6 5 3 4 2   (24) sensitive    #> fearful&timid (25)   5 4 4 6 5 3 5 6 5 5   (25) fearless     #>         rough (26)   5 6 6 4 5 7 7 3 5 6   (26) gentle       #> cept as it is (27)   5 5 6 7 4 4 6 7 5 5   (27) loves to arg #>  list(x, x) + x #>  #> META DATA: #> Number of constructs:  27  #> Number of elements:  10  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 7 (right pole) #>  #> RATINGS: #>    A teacher you respected - 5 6 - Mother (or the person who #> on of the opposite sex t - 4 | | 7 - A person of the opposit #> ppiest person you know - 3 | | | | 8 - The most confident pe #> iend of the same sex - 2 | | | | | | 9 - A person you work w #>               self - 1 | | | | | | | | 10 - A teacher you di #>                      | | | | | | | | | |                     #>        relaxed (1)   4 4 6 5 3 6 5 2 2 6   (1) worried & ten #> (academically) (2)   6 7 6 5 7 4 6 7 4 7   (2) smart (academ #> islikes sports (3)   6 3 7 6 4 4 2 3 6 3   (3) loves sports  #> ot interactive (4)   6 7 5 6 6 5 6 7 7 4   (4) loves people  #> ot transparent (5)   6 4 5 7 3 7 6 5 6 3   (5) transparent   #>    insensitive (6)   4 6 5 4 4 6 5 3 4 2   (6) sensitive     #>  fearful&timid (7)   5 4 4 6 5 3 5 6 5 5   (7) fearless      #>          rough (8)   5 6 6 4 5 7 7 3 5 6   (8) gentle        #> ccept as it is (9)   5 5 6 7 4 4 6 7 5 5   (9) loves to argu #>       relaxed (10)   4 4 6 5 3 6 5 2 2 6   (10) worried & te #> academically) (11)   6 7 6 5 7 4 6 7 4 7   (11) smart (acade #> slikes sports (12)   6 3 7 6 4 4 2 3 6 3   (12) loves sports #> t interactive (13)   6 7 5 6 6 5 6 7 7 4   (13) loves people #> t transparent (14)   6 4 5 7 3 7 6 5 6 3   (14) transparent  #>   insensitive (15)   4 6 5 4 4 6 5 3 4 2   (15) sensitive    #> fearful&timid (16)   5 4 4 6 5 3 5 6 5 5   (16) fearless     #>         rough (17)   5 6 6 4 5 7 7 3 5 6   (17) gentle       #> cept as it is (18)   5 5 6 7 4 4 6 7 5 5   (18) loves to arg #>       relaxed (19)   4 4 6 5 3 6 5 2 2 6   (19) worried & te #> academically) (20)   6 7 6 5 7 4 6 7 4 7   (20) smart (acade #> slikes sports (21)   6 3 7 6 4 4 2 3 6 3   (21) loves sports #> t interactive (22)   6 7 5 6 6 5 6 7 7 4   (22) loves people #> t transparent (23)   6 4 5 7 3 7 6 5 6 3   (23) transparent  #>   insensitive (24)   4 6 5 4 4 6 5 3 4 2   (24) sensitive    #> fearful&timid (25)   5 4 4 6 5 3 5 6 5 5   (25) fearless     #>         rough (26)   5 6 6 4 5 7 7 3 5 6   (26) gentle       #> cept as it is (27)   5 5 6 7 4 4 6 7 5 5   (27) loves to arg #>"},{"path":"https://docs.openrepgrid.org/reference/orderBy.html","id":null,"dir":"Reference","previous_headings":"","what":"order one vector by another — orderBy","title":"order one vector by another — orderBy","text":"small wrapper order one vector another, hardly worth function","code":""},{"path":"https://docs.openrepgrid.org/reference/orderBy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"order one vector by another — orderBy","text":"","code":"orderBy(x, y)"},{"path":"https://docs.openrepgrid.org/reference/orderBy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"order one vector by another — orderBy","text":"x vector y vector","code":""},{"path":"https://docs.openrepgrid.org/reference/orderBy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"order one vector by another — orderBy","text":"vector","code":""},{"path":"https://docs.openrepgrid.org/reference/orderByString.html","id":null,"dir":"Reference","previous_headings":"","what":"find the order of a string vector so it will match the order of another — orderByString","title":"find the order of a string vector so it will match the order of another — orderByString","text":"find order string vector match order another","code":""},{"path":"https://docs.openrepgrid.org/reference/orderByString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"find the order of a string vector so it will match the order of another — orderByString","text":"","code":"orderByString(x, y)"},{"path":"https://docs.openrepgrid.org/reference/orderByString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"find the order of a string vector so it will match the order of another — orderByString","text":"x vector strings y vector strings","code":""},{"path":"https://docs.openrepgrid.org/reference/orderByString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"find the order of a string vector so it will match the order of another — orderByString","text":"vector strings","code":""},{"path":"https://docs.openrepgrid.org/reference/orderByString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"find the order of a string vector so it will match the order of another — orderByString","text":"","code":"if (FALSE) { # \\dontrun{ a <- c(\"c\", \"a\", \"b\") b <- c(\"b\", \"c\", \"a\") index <- orderByString(a, b) # to order b like a needs what indexes? index b[index] } # }"},{"path":"https://docs.openrepgrid.org/reference/permuteConstructs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a list with all possible construct reflections of a grid. — permuteConstructs","title":"Generate a list with all possible construct reflections of a grid. — permuteConstructs","text":"Generate list possible construct reflections grid.","code":""},{"path":"https://docs.openrepgrid.org/reference/permuteConstructs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a list with all possible construct reflections of a grid. — permuteConstructs","text":"","code":"permuteConstructs(x, progress = TRUE)"},{"path":"https://docs.openrepgrid.org/reference/permuteConstructs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a list with all possible construct reflections of a grid. — permuteConstructs","text":"x repgrid object. progress Whether show progress bar (default TRUE). may sensible larger number elements.","code":""},{"path":"https://docs.openrepgrid.org/reference/permuteConstructs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a list with all possible construct reflections of a grid. — permuteConstructs","text":"list repgrid objects possible permutations grid.","code":""},{"path":"https://docs.openrepgrid.org/reference/permuteConstructs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a list with all possible construct reflections of a grid. — permuteConstructs","text":"","code":"if (FALSE) { # \\dontrun{  l <- permuteConstructs(mackay1992) l } # }"},{"path":"https://docs.openrepgrid.org/reference/permuteGrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Permute rows, columns or whole grid matrix. — permuteGrid","title":"Permute rows, columns or whole grid matrix. — permuteGrid","text":"Generate one many permutations grid shuffling rows, columns whole grid matrix.","code":""},{"path":"https://docs.openrepgrid.org/reference/permuteGrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permute rows, columns or whole grid matrix. — permuteGrid","text":"","code":"permuteGrid(x, along = 1, n = 1)"},{"path":"https://docs.openrepgrid.org/reference/permuteGrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permute rows, columns or whole grid matrix. — permuteGrid","text":"x repgrid object. along permute. along=1 (default) permute rows along=2 columns, along=3 whole matrix. n number permutations produce.","code":""},{"path":"https://docs.openrepgrid.org/reference/permuteGrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Permute rows, columns or whole grid matrix. — permuteGrid","text":"repgrid object n = 1 list repgrid objects n > 1.","code":""},{"path":"https://docs.openrepgrid.org/reference/permuteGrid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Permute rows, columns or whole grid matrix. — permuteGrid","text":"","code":"if (FALSE) { # \\dontrun{  # permute grid permuteGrid(bell2010) permuteGrid(bell2010) permuteGrid(bell2010)  # generate a list of permuted grids permuteGrid(bell2010, n = 5) } # }"},{"path":"https://docs.openrepgrid.org/reference/perturbate.html","id":null,"dir":"Reference","previous_headings":"","what":"Perturbate grid ratings — perturbate","title":"Perturbate grid ratings — perturbate","text":"Randomly subtract add amount proportion grid ratings. emulates randomness rating process, producing grid might also resulted.","code":""},{"path":"https://docs.openrepgrid.org/reference/perturbate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perturbate grid ratings — perturbate","text":"","code":"perturbate(x, prop = 0.1, amount = c(-1, 1), prob = c(0.5, 0.5))  grids_perturbate(x, n = 10, prop = 0.1, amount = c(-1, 1), prob = c(0.5, 0.5))"},{"path":"https://docs.openrepgrid.org/reference/perturbate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perturbate grid ratings — perturbate","text":"x repgrid object. prop proportion ratings perturbated. amount amount set possible perturbations. depend scale range. Usually {-1, 1} reasonable settings. prob Probability amount occur. n Number perturbated grid generate.","code":""},{"path":"https://docs.openrepgrid.org/reference/perturbate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perturbate grid ratings — perturbate","text":"","code":"## All results for PVAFF index when ratings are slightly perturbated p <- indexPvaff(boeker) #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  l <- grids_perturbate(boeker, n = 100, prop = .1) pp <- sapply(l, indexPvaff)  # apply indexPvaff function to all perturbated grids #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  range(pp)   # min and max PVAFF #> [1] 0.3664383 0.4404958 hist(pp, xlab = \"PVAFF values\")    # visualize abline(v = p, col = \"blue\", lty = 2)"},{"path":"https://docs.openrepgrid.org/reference/plot.indexDilemma.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for indexDilemma (network graph) — plot.indexDilemma","title":"Plot method for indexDilemma (network graph) — plot.indexDilemma","text":"Produces network graph using detected implicative dilemmas using igraph package.","code":""},{"path":"https://docs.openrepgrid.org/reference/plot.indexDilemma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for indexDilemma (network graph) — plot.indexDilemma","text":"","code":"# S3 method for class 'indexDilemma' plot(   x,   layout = \"rows\",   both.poles = TRUE,   node.size = 50,   node.text.cex = 1,   node.label.color = \"black\",   node.color.discrepant = \"darkolivegreen3\",   node.color.congruent = \"lightcoral\",   edge.label.color = grey(0.4),   edge.label.cex = 1,   edge.digits = 2,   edge.arrow.size = 0.5,   edge.color = grey(0.6),   edge.lty = 2,   ... )"},{"path":"https://docs.openrepgrid.org/reference/plot.indexDilemma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for indexDilemma (network graph) — plot.indexDilemma","text":"x Object returned indexDilemma. layout Name layout. One rows, circle, star, nicely igraph layout function. .poles Show construct poles? (default TRUE). FALSE poles corresponding implied undesired changes shown. node.size Size nodes (default 50). node.text.cex Text size construct labels. node.label.color Color construct labels. node.color.discrepant, node.color.congruent Color discrepant congruent constructs nodes. edge.label.color, edge.label.cex Color size correlation labels. edge.color, edge.arrow.size Color Size arrow. edge.lty Linetype arrow. digits Number digits correlations.","code":""},{"path":"https://docs.openrepgrid.org/reference/prepareBiplotData.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare dataframe passed to drawing functions for biplots. — prepareBiplotData","title":"Prepare dataframe passed to drawing functions for biplots. — prepareBiplotData","text":"Data frame contains variables type, show, x, y, z, labels, color, cex.","code":""},{"path":"https://docs.openrepgrid.org/reference/prepareBiplotData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare dataframe passed to drawing functions for biplots. — prepareBiplotData","text":"","code":"prepareBiplotData(   x,   dim = c(1, 2),   map.dim = 3,   e.label.cex = 0.8,   c.label.cex = 0.6,   e.label.col = \"black\",   c.label.col = grey(0.8),   c.label.col.left = NULL,   c.label.col.right = NULL,   e.point.cex = 0.7,   c.point.cex = 0.8,   e.point.col = \"black\",   c.point.col = \"darkred\",   e.color.map = c(0.4, 1),   c.color.map = c(0.4, 1),   c.points.devangle = 90,   c.labels.devangle = 90,   c.points.show = TRUE,   c.labels.show = TRUE,   e.points.show = TRUE,   e.labels.show = TRUE,   unity = TRUE,   unity3d = FALSE,   scale.e = 0.9,   ... )"},{"path":"https://docs.openrepgrid.org/reference/prepareBiplotData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare dataframe passed to drawing functions for biplots. — prepareBiplotData","text":"x repgrid object. dim Dimensions used biplot (default c(1,2)). map.dim Third dimension used map aesthetic attributes (depth) (default 3). e.label.cex Size element labels. Two values can entered represents lower upper size range cex values map.dim mapped onto. default c(.4, .8). one cex value supplied (e.g. .7) mapping occurs element labels size irrespective value map.dim dimension. c.label.cex Size construct labels. Two values can entered represents lower upper size range cex values map.dim mapped onto. default c(.4, .8). one cex value supplied (e.g. .7) mapping occurs construct labels size irrespective value map.dim dimension. e.label.col Color(s) element labels. Two values can entered create color ramp. values map.dim mapped onto ramp. default c(\"white\", \"black\"). one color color value supplied (e.g. \"black\") mapping occurs element labels color irrespective value map.dim dimension. c.label.col Color(s) construct labels. Two values can entered create color ramp. values map.dim mapped onto ramp. default c(\"white\", \"black\"). one color color value supplied (e.g. \"black\") mapping occurs construct labels color irrespective value map.dim dimension. c.label.col.left, c.label.col.right Explicit color values left right construct poles. NULL default. overwrite c.label.col. e.point.cex Size element symbols. Two values can entered represents lower upper size range cex values map.dim mapped onto. default c(.4, .8). one cex value supplied (e.g. .7) mapping occurs elements size irrespective value map.dim dimension. c.point.cex Size construct symbols. Two values can entered represents lower upper size range cex values map.dim mapped onto. default c(.4, .8). one cex value supplied (e.g. .7) mapping occurs elements size irrespective value map.dim dimension. e.point.col Color(s) element symbols. Two values can entered create color ramp. values map.dim mapped onto ramp. default c(\"white\", \"black\"). one color color value supplied (e.g. \"black\") mapping occurs elements color irrespective value map.dim dimension. c.point.col Color(s) construct symbols. Two values can entered create color ramp. values map.dim mapped onto ramp. default c(\"white\", \"darkred\"). one color color value supplied (e.g. \"black\") mapping occurs elements color irrespective value map.dim dimension. e.color.map Value range determine range color ramp defined e.color used mapping colors. Default c(.4, ,1). Usually important user. c.color.map Value range determine range color ramp defined c.color used mapping. Default c(.4, ,1). Usually important user. unity Scale elements constructs coordinates unit scale 2D (maximum 1) printed neatly (default TRUE). unity3d Scale elements constructs coordinates unit scale 3D (maximum 1) printed neatly (default TRUE). scale.e Scaling factor element vectors. cause element points move bit center. argument visual appeal . ... evaluated. devangle deviation angle x-y plane degrees. can calculated third dimension map.dim specified. constructs vectors depart specified degrees shown x-y plane printed. facilitates visual interpretation, vectors represented current plane shown. Set value 91 (default) show vectors.","code":""},{"path":"https://docs.openrepgrid.org/reference/prepareBiplotData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare dataframe passed to drawing functions for biplots. — prepareBiplotData","text":"dataframe containing variables type, show, x, y, z, labels, color, cex. Usually interest user.","code":""},{"path":"https://docs.openrepgrid.org/reference/prepareBiplotData.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Prepare dataframe passed to drawing functions for biplots. — prepareBiplotData","text":"","code":"TODO:  How to omit `map.dim`?"},{"path":"https://docs.openrepgrid.org/reference/print.alignByLoadings.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for class alignByLoadings. — print.alignByLoadings","title":"Print method for class alignByLoadings. — print.alignByLoadings","text":"Print method class alignByLoadings.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.alignByLoadings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for class alignByLoadings. — print.alignByLoadings","text":"","code":"# S3 method for class 'alignByLoadings' print(x, digits = 2, col.index = TRUE, ...)"},{"path":"https://docs.openrepgrid.org/reference/print.alignByLoadings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for class alignByLoadings. — print.alignByLoadings","text":"x Object class alignByLoadings. digits Numeric. Number digits round (default 2). col.index Logical. Whether add extra index column column names indexes instead construct names (e.g. correlation matrices). option renders neater output long construct names stretch output (default TRUE). ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.constructCor.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for class constructCor. — print.constructCor","title":"Print method for class constructCor. — print.constructCor","text":"Print method class constructCor.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.constructCor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for class constructCor. — print.constructCor","text":"","code":"# S3 method for class 'constructCor' print(x, digits = 2, col.index = TRUE, upper = TRUE, header = TRUE, ...)"},{"path":"https://docs.openrepgrid.org/reference/print.constructCor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for class constructCor. — print.constructCor","text":"x Object class constructCor. digits Numeric. Number digits round (default 2). col.index Logical. Whether add extra index column column names indexes instead construct names. option renders neater output long construct names stretch output (default TRUE). upper Whether display upper triangle correlation matrix (default TRUE). header Whether print additional information header. ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.constructD.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for class constructD. — print.constructD","title":"Print method for class constructD. — print.constructD","text":"Print method class constructD.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.constructD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for class constructD. — print.constructD","text":"","code":"# S3 method for class 'constructD' print(x, digits = 1, col.index = TRUE, ...)"},{"path":"https://docs.openrepgrid.org/reference/print.constructD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for class constructD. — print.constructD","text":"x Object class constructD. digits Numeric. Number digits round (default 2). col.index Logical. Whether add extra index column column names indexes instead construct names. option renders neater output long construct names stretch output (default TRUE). ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.constructPca.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for class constructPca. — print.constructPca","title":"Print method for class constructPca. — print.constructPca","text":"Print method class constructPca.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.constructPca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for class constructPca. — print.constructPca","text":"","code":"# S3 method for class 'constructPca' print(x, digits = 2, cutoff = 0, ...)"},{"path":"https://docs.openrepgrid.org/reference/print.constructPca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for class constructPca. — print.constructPca","text":"x Object class constructPca. digits Numeric. Number digits round (default 2). cutoff Loadings smaller cutoff printed. ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for class distance. — print.distance","title":"Print method for class distance. — print.distance","text":"Print method class distance.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for class distance. — print.distance","text":"","code":"# S3 method for class 'distance' print(   x,   digits = 2,   col.index = TRUE,   upper = TRUE,   diag = FALSE,   cutoffs = NA,   ... )"},{"path":"https://docs.openrepgrid.org/reference/print.distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for class distance. — print.distance","text":"x Object class distance. digits Numeric. Number digits round (default 2). col.index Logical. Whether add extra index column column names indexes instead construct names. option renders neater output long construct names stretch output (default TRUE). upper Whether display upper triangle correlation matrix (default TRUE). diag Whether show matrix diagonal. cutoffs Cutoff values. Values interval printed. Slater distances c(.8, 1.2) common values. ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.elementCor.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for class elementCor. — print.elementCor","title":"Print method for class elementCor. — print.elementCor","text":"Print method class elementCor.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.elementCor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for class elementCor. — print.elementCor","text":"","code":"# S3 method for class 'elementCor' print(x, digits = 2, col.index = TRUE, upper = TRUE, ...)"},{"path":"https://docs.openrepgrid.org/reference/print.elementCor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for class elementCor. — print.elementCor","text":"x Object class elementCor digits Numeric. Number digits round (default 2). col.index Logical. Whether add extra index column column names indexes instead construct names. option renders neater output long construct names stretch output (default TRUE). upper Whether display upper triangle correlation matrix (default TRUE). ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.gridlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for gridlist objects — print.gridlist","title":"Print method for gridlist objects — print.gridlist","text":"Print method gridlist objects","code":""},{"path":"https://docs.openrepgrid.org/reference/print.gridlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for gridlist objects — print.gridlist","text":"","code":"# S3 method for class 'gridlist' print(x, all = FALSE, ...)"},{"path":"https://docs.openrepgrid.org/reference/print.gridlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for gridlist objects — print.gridlist","text":"x gridlist object. Display repgrids console?","code":""},{"path":"https://docs.openrepgrid.org/reference/print.hdistance.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for class hdistance (Hartmann distance objects). — print.hdistance","title":"Print method for class hdistance (Hartmann distance objects). — print.hdistance","text":"Additionally allows specification p-values. corresponding quantiles calculated.  contained attributes hdistance object returned distanceHartmann. lowest highest values used cutoffs print.distance.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.hdistance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for class hdistance (Hartmann distance objects). — print.hdistance","text":"","code":"# S3 method for class 'hdistance' print(   x,   digits = 2,   col.index = TRUE,   upper = TRUE,   diag = FALSE,   cutoffs = NA,   p = NA,   ... )"},{"path":"https://docs.openrepgrid.org/reference/print.hdistance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for class hdistance (Hartmann distance objects). — print.hdistance","text":"x Object class hdistance. digits Numeric. Number digits round (default 2). col.index Logical. Whether add extra index column column names indexes instead construct names. option renders neater output long construct names stretch output (default TRUE). upper Whether display upper triangle correlation matrix (default TRUE). diag Whether show matrix diagonal. cutoffs Cutoff values. Values interval printed. Slater distances c(.8, 1.2) common values. p Quantiles corresponding probabilities used cutoffs. Currently works Hartmann distances. used cutoffs overwritten. ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.indexBieri.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for class indexBieri — print.indexBieri","title":"Print method for class indexBieri — print.indexBieri","text":"Print method class indexBieri","code":""},{"path":"https://docs.openrepgrid.org/reference/print.indexBieri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for class indexBieri — print.indexBieri","text":"","code":"# S3 method for class 'indexBieri' print(x, output = \"I\", digits = 3, ...)"},{"path":"https://docs.openrepgrid.org/reference/print.indexBieri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for class indexBieri — print.indexBieri","text":"x Object class indexBieri. output String letter indicating parts output print (default \"IC\", order matter): = Information, C = Matrix matches. digits Number digits display.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.indexConflict1.html","id":null,"dir":"Reference","previous_headings":"","what":"Print function for class indexConflict1 — print.indexConflict1","title":"Print function for class indexConflict1 — print.indexConflict1","text":"Print function class indexConflict1","code":""},{"path":"https://docs.openrepgrid.org/reference/print.indexConflict1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print function for class indexConflict1 — print.indexConflict1","text":"","code":"# S3 method for class 'indexConflict1' print(x, digits = 1, ...)"},{"path":"https://docs.openrepgrid.org/reference/print.indexConflict1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print function for class indexConflict1 — print.indexConflict1","text":"x Object class indexConflict1. digits Numeric. Number digits round (default 1). ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.indexConflict2.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for class indexConflict2 — print.indexConflict2","title":"Print method for class indexConflict2 — print.indexConflict2","text":"Print method class indexConflict2","code":""},{"path":"https://docs.openrepgrid.org/reference/print.indexConflict2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for class indexConflict2 — print.indexConflict2","text":"","code":"# S3 method for class 'indexConflict2' print(x, digits = 1, output = 1, ...)"},{"path":"https://docs.openrepgrid.org/reference/print.indexConflict2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for class indexConflict2 — print.indexConflict2","text":"x repgrid object. digits Numeric. Number digits round (default 1). output Numeric. output printed console. output=1 (default) print information conflicts console. output = 2 additionally print conflictive triads. ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.indexConflict3.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for class indexConflict3 — print.indexConflict3","title":"print method for class indexConflict3 — print.indexConflict3","text":"print method class indexConflict3","code":""},{"path":"https://docs.openrepgrid.org/reference/print.indexConflict3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for class indexConflict3 — print.indexConflict3","text":"","code":"# S3 method for class 'indexConflict3' print(x, digits = 2, output = 1, discrepancies = TRUE, ...)"},{"path":"https://docs.openrepgrid.org/reference/print.indexConflict3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print method for class indexConflict3 — print.indexConflict3","text":"x Output function indexConflict3 digits Numeric. Number digits round (default 2). output Type output. output=1 print results console, output=2 print detailed statistics elements constructs. discrepancies Logical. Whether show matrices discrepancies detailed element construct stats (default TRUE). ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.indexDilemma.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for class indexDilemma — print.indexDilemma","title":"Print method for class indexDilemma — print.indexDilemma","text":"Print method class indexDilemma","code":""},{"path":"https://docs.openrepgrid.org/reference/print.indexDilemma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for class indexDilemma — print.indexDilemma","text":"","code":"# S3 method for class 'indexDilemma' print(x, digits = 2, output = \"SPCD\", ...)"},{"path":"https://docs.openrepgrid.org/reference/print.indexDilemma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for class indexDilemma — print.indexDilemma","text":"x Object class indexDilemma digits Numeric. Number digits round (default 2). output String letter indicating parts output print (default \"OCD\", order matter): S = Summary (Number IDs, PID, etc.), P = Analysis parameters, C = Construct classification table, D = Implicative dilemmas table. ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.indexDilemmatic.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for class indexDilemmatic — print.indexDilemmatic","title":"Print method for class indexDilemmatic — print.indexDilemmatic","text":"Print method class indexDilemmatic","code":""},{"path":"https://docs.openrepgrid.org/reference/print.indexDilemmatic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for class indexDilemmatic — print.indexDilemmatic","text":"","code":"# S3 method for class 'indexDilemmatic' print(x, output = \"SD\", ...)"},{"path":"https://docs.openrepgrid.org/reference/print.indexDilemmatic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for class indexDilemmatic — print.indexDilemmatic","text":"x Object class indexDilemmatic output String letter indicating parts output print (default \"SD\", order matter): S = Summary, D = Details (dilemmatic constructs).","code":""},{"path":"https://docs.openrepgrid.org/reference/print.indexIntensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for class indexIntensity. — print.indexIntensity","title":"Print method for class indexIntensity. — print.indexIntensity","text":"Print method class indexIntensity.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.indexIntensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for class indexIntensity. — print.indexIntensity","text":"","code":"# S3 method for class 'indexIntensity' print(x, digits = 2, output = \"TCE\", ...)"},{"path":"https://docs.openrepgrid.org/reference/print.indexIntensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for class indexIntensity. — print.indexIntensity","text":"x Object class indexIntensity. digits Numeric. Number digits round (default 2). output String letter indicating parts output print (default \"TCE\", order matter): T = Total Intensity, C = Constructs' intensities, E = Elements' intensities.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.indexPolarization.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for class indexPolarization. — print.indexPolarization","title":"Print method for class indexPolarization. — print.indexPolarization","text":"Print method class indexPolarization.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.indexPolarization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for class indexPolarization. — print.indexPolarization","text":"","code":"# S3 method for class 'indexPolarization' print(x, output = \"ITCE\", ...)"},{"path":"https://docs.openrepgrid.org/reference/print.indexPolarization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for class indexPolarization. — print.indexPolarization","text":"x Object class indexPolarization. output String letter indicating parts output print (default \"ITCE\", order matter): = Information, T = Total Intensity, C = Constructs' intensities, E = Elements' intensities.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.indexSelfConstruction.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for indexSelfConstruction — print.indexSelfConstruction","title":"Print method for indexSelfConstruction — print.indexSelfConstruction","text":"Print method indexSelfConstruction","code":""},{"path":"https://docs.openrepgrid.org/reference/print.indexSelfConstruction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for indexSelfConstruction — print.indexSelfConstruction","text":"","code":"# S3 method for class 'indexSelfConstruction' print(x, digits = 2, ...)"},{"path":"https://docs.openrepgrid.org/reference/print.org.matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for class org.matches. — print.org.matches","title":"Print method for class org.matches. — print.org.matches","text":"Print method class org.matches.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.org.matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for class org.matches. — print.org.matches","text":"","code":"# S3 method for class 'org.matches' print(   x,   output = \"ICE\",   index = TRUE,   names = TRUE,   trim = 50,   upper = TRUE,   width = NA,   ... )"},{"path":"https://docs.openrepgrid.org/reference/print.org.matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for class org.matches. — print.org.matches","text":"x Object class org.matches. output String letter indicating parts output print (default \"ICE\", order matter): = Information, C = Constructs' matches, E = Elements' matches. index Whether add index columns (default TRUE). names names vector row names. trim Trimmed length names (default = 50). upper Whether show upper triangle (default TRUE). width Column width output (numeric).","code":""},{"path":"https://docs.openrepgrid.org/reference/print.rmsCor.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for class rmsCor (RMS correlation for constructs or elements) — print.rmsCor","title":"Print method for class rmsCor (RMS correlation for constructs or elements) — print.rmsCor","text":"Print method class rmsCor (RMS correlation constructs elements)","code":""},{"path":"https://docs.openrepgrid.org/reference/print.rmsCor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for class rmsCor (RMS correlation for constructs or elements) — print.rmsCor","text":"","code":"# S3 method for class 'rmsCor' print(x, digits = 2, ...)"},{"path":"https://docs.openrepgrid.org/reference/print.rmsCor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for class rmsCor (RMS correlation for constructs or elements) — print.rmsCor","text":"x Object class rmsCor. digits Numeric. Number digits round (default 2). ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.ssq.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for class ssq. — print.ssq","title":"Print method for class ssq. — print.ssq","text":"Print method class ssq.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.ssq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for class ssq. — print.ssq","text":"","code":"# S3 method for class 'ssq' print(x, digits = 2, dim = 5, cumulated = TRUE, ...)"},{"path":"https://docs.openrepgrid.org/reference/print.ssq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for class ssq. — print.ssq","text":"x Object class ssq. digits Number digits round output (default 2). dim number PCA dimensions print. Default 5 dimensions. NA print dimensions. cumulated Logical (default TRUE). Print cumulated table sum--squares? FALSE non-cumulated sum--squares printed. (default TRUE). ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.statsConstructs.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for class statsConstructs — print.statsConstructs","title":"Print method for class statsConstructs — print.statsConstructs","text":"Print method class statsConstructs","code":""},{"path":"https://docs.openrepgrid.org/reference/print.statsConstructs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for class statsConstructs — print.statsConstructs","text":"","code":"# S3 method for class 'statsConstructs' print(x, digits = 2, ...)"},{"path":"https://docs.openrepgrid.org/reference/print.statsConstructs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for class statsConstructs — print.statsConstructs","text":"x Object class statsConstructs. digits Numeric. Number digits round (default 1). ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/print.statsElements.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for class statsElements — print.statsElements","title":"Print method for class statsElements — print.statsElements","text":"Print method class statsElements","code":""},{"path":"https://docs.openrepgrid.org/reference/print.statsElements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for class statsElements — print.statsElements","text":"","code":"# S3 method for class 'statsElements' print(x, digits = 2, ...)"},{"path":"https://docs.openrepgrid.org/reference/print.statsElements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for class statsElements — print.statsElements","text":"x Object class statsElements. digits Numeric. Number digits round (default 1). ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/print_square_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a square matrix in well readable format — print_square_matrix","title":"Print a square matrix in well readable format — print_square_matrix","text":"Helper function produce output square matrices, e.g. distance matrices etc. Adds (trimmed) name index column. Displays upper triangle default. function used inside print method several classes.","code":""},{"path":"https://docs.openrepgrid.org/reference/print_square_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a square matrix in well readable format — print_square_matrix","text":"","code":"print_square_matrix(   x,   names = NA,   trim = NA,   index = TRUE,   width = NA,   upper = TRUE )"},{"path":"https://docs.openrepgrid.org/reference/print_square_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a square matrix in well readable format — print_square_matrix","text":"x square matrix. names names vector row names. trim Trimmed length names (numeric). index Whether add index columns (default TRUE). width Column width output (numeric). upper Whether show upper triangle (default TRUE).","code":""},{"path":"https://docs.openrepgrid.org/reference/quasiDistributionDistanceSlater.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random grids and calculate 'Slater distances' for the elements. — quasiDistributionDistanceSlater","title":"Generate random grids and calculate 'Slater distances' for the elements. — quasiDistributionDistanceSlater","text":"Slater distances returned vector. values can used e.g. assess distributions standard deviation.","code":""},{"path":"https://docs.openrepgrid.org/reference/quasiDistributionDistanceSlater.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random grids and calculate 'Slater distances' for the elements. — quasiDistributionDistanceSlater","text":"","code":"quasiDistributionDistanceSlater(   reps,   nc,   ne,   range,   prob = NULL,   progress = TRUE )"},{"path":"https://docs.openrepgrid.org/reference/quasiDistributionDistanceSlater.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random grids and calculate 'Slater distances' for the elements. — quasiDistributionDistanceSlater","text":"reps Number grids produced (default 3). nc Number constructs (default 10). ne Number elements (default 15). range Minimal maximal scale value (default c(1, 5)). prob probability rating value occur. NULL (default) distribution uniform. progress Whether show progress bar.","code":""},{"path":"https://docs.openrepgrid.org/reference/quasiDistributionDistanceSlater.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate random grids and calculate 'Slater distances' for the elements. — quasiDistributionDistanceSlater","text":"vector containing Slater distance values.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/quasiDistributionDistanceSlater.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate random grids and calculate 'Slater distances' for the elements. — quasiDistributionDistanceSlater","text":"","code":"if (FALSE) { # \\dontrun{  vals <- quasiDistributionDistanceSlater(100, 10, 10, c(1, 5), pro = T) vals sd(vals) hist(vals, breaks = 50) } # }"},{"path":"https://docs.openrepgrid.org/reference/randomGrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random grid (quasis) of prompted size. — randomGrid","title":"Generate a random grid (quasis) of prompted size. — randomGrid","text":"feature useful research purposes like exploring distributions indexes etc.","code":""},{"path":"https://docs.openrepgrid.org/reference/randomGrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random grid (quasis) of prompted size. — randomGrid","text":"","code":"randomGrid(   nc = 10,   ne = 15,   nwc = 8,   nwe = 5,   range = c(1, 5),   prob = NULL,   options = 1 )"},{"path":"https://docs.openrepgrid.org/reference/randomGrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random grid (quasis) of prompted size. — randomGrid","text":"nc Number constructs (default 10). ne Number elements (default 15). nwc Number random words per construct. nwe Number random words per element. range Minimal maximal scale value (default c(1, 5)). prob probability rating value occur. NULL (default) distribution uniform. options Use random sentences constructs elements (1) (0). , elements constructs given default names numbered.","code":""},{"path":"https://docs.openrepgrid.org/reference/randomGrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a random grid (quasis) of prompted size. — randomGrid","text":"repgrid object.","code":""},{"path":"https://docs.openrepgrid.org/reference/randomGrid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a random grid (quasis) of prompted size. — randomGrid","text":"","code":"if (FALSE) { # \\dontrun{  x <- randomGrid() x x <- randomGrid(10, 25) x x <- randomGrid(10, 25, options = 0) x } # }"},{"path":"https://docs.openrepgrid.org/reference/randomGrids.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a list of random grids (quasis) of prompted size. — randomGrids","title":"Generate a list of random grids (quasis) of prompted size. — randomGrids","text":"feature useful research purposes like exploring distributions indexes etc. function simple wrapper around randomGrid().","code":""},{"path":"https://docs.openrepgrid.org/reference/randomGrids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a list of random grids (quasis) of prompted size. — randomGrids","text":"","code":"randomGrids(   rep = 3,   nc = 10,   ne = 15,   nwc = 8,   nwe = 5,   range = c(1, 5),   prob = NULL,   options = 1 )"},{"path":"https://docs.openrepgrid.org/reference/randomGrids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a list of random grids (quasis) of prompted size. — randomGrids","text":"rep Number grids produced (default 3). nc Number constructs (default 10). ne Number elements (default 15). nwc Number random words per construct. nwe Number random words per element. range Minimal maximal scale value (default c(1, 5)). prob probability rating value occur. NULL (default) distribution uniform. options Use random sentences constructs elements (1) (0). , elements constructs given default names numbered.","code":""},{"path":"https://docs.openrepgrid.org/reference/randomGrids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a list of random grids (quasis) of prompted size. — randomGrids","text":"list repgrid objects.","code":""},{"path":"https://docs.openrepgrid.org/reference/randomGrids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a list of random grids (quasis) of prompted size. — randomGrids","text":"","code":"if (FALSE) { # \\dontrun{  x <- randomGrids() x x <- randomGrids(5, 3, 3) x x <- randomGrids(5, 3, 3, options = 0) x } # }"},{"path":"https://docs.openrepgrid.org/reference/randomSentence.html","id":null,"dir":"Reference","previous_headings":"","what":"generate a random sentence with n words — randomSentence","title":"generate a random sentence with n words — randomSentence","text":"generate random sentence n words","code":""},{"path":"https://docs.openrepgrid.org/reference/randomSentence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate a random sentence with n words — randomSentence","text":"","code":"randomSentence(n, maxchar = Inf)"},{"path":"https://docs.openrepgrid.org/reference/randomSentence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate a random sentence with n words — randomSentence","text":"n number word sentence maxchar maximal number characters per sentence. Note whole words (part words) excluded maximal number exceeded.","code":""},{"path":"https://docs.openrepgrid.org/reference/randomSentence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate a random sentence with n words — randomSentence","text":"string n words (length constrained)","code":""},{"path":"https://docs.openrepgrid.org/reference/randomSentence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generate a random sentence with n words — randomSentence","text":"","code":"randomSentence(10) # one random sentence with 10 words #> [1] \"essentially activity essentially he he the activity economic by airplane\""},{"path":"https://docs.openrepgrid.org/reference/randomSentences.html","id":null,"dir":"Reference","previous_headings":"","what":"generate n random sentences with a given or random number of words — randomSentences","title":"generate n random sentences with a given or random number of words — randomSentences","text":"generate n random sentences given random number words","code":""},{"path":"https://docs.openrepgrid.org/reference/randomSentences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate n random sentences with a given or random number of words — randomSentences","text":"","code":"randomSentences(n, nwords, maxchar = Inf)"},{"path":"https://docs.openrepgrid.org/reference/randomSentences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate n random sentences with a given or random number of words — randomSentences","text":"n number sentences generate (integer) nwords number words per sentence. vector sentence lengths randomly drawn vector maxchar maximal number characters per sentence. Note whole words (part words) excluded maximal number exceeded.","code":""},{"path":"https://docs.openrepgrid.org/reference/randomSentences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate n random sentences with a given or random number of words — randomSentences","text":"vector n random sentences","code":""},{"path":"https://docs.openrepgrid.org/reference/randomSentences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generate n random sentences with a given or random number of words — randomSentences","text":"","code":"randomSentences(5, 10) # five random sentences with ten words each #> [1] \"away customer by he economic has money charter\"                #> [2] \"he\"                                                            #> [3] \"he airplane forced what the an\"                                #> [4] \"mainland initially owes Harry without back away money the has\" #> [5] \"him blackmarket of\"                                            randomSentences(5, 2:10) # five random sentences between two and ten words #> [1] \"blackmarket money tricks forces has\"          #> [2] \"any owes realizes\"                            #> [3] \"as economic to of paying by who he owes what\" #> [4] \"without economic charter Mr.\"                 #> [5] \"beyond any forced his is Mr. essentially\""},{"path":"https://docs.openrepgrid.org/reference/randomWords.html","id":null,"dir":"Reference","previous_headings":"","what":"generate a random words — randomWords","title":"generate a random words — randomWords","text":"randomWords generates vector random words taken small set words","code":""},{"path":"https://docs.openrepgrid.org/reference/randomWords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate a random words — randomWords","text":"","code":"randomWords(n)"},{"path":"https://docs.openrepgrid.org/reference/randomWords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate a random words — randomWords","text":"n number words generated (integer)","code":""},{"path":"https://docs.openrepgrid.org/reference/randomWords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate a random words — randomWords","text":"string n words (length constrained)","code":""},{"path":"https://docs.openrepgrid.org/reference/randomWords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generate a random words — randomWords","text":"","code":"randomWords(10) # 10 random words #>  [1] \"to\"          \"an\"          \"essentially\" \"money\"       \"economic\"    #>  [6] \"tricks\"      \"he\"          \"blackmarket\" \"the\"         \"has\""},{"path":"https://docs.openrepgrid.org/reference/ratings.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract ratings (wide or long format) — ratings","title":"Extract ratings (wide or long format) — ratings","text":"Extract ratings (wide long format)","code":""},{"path":"https://docs.openrepgrid.org/reference/ratings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract ratings (wide or long format) — ratings","text":"","code":"ratings(x, names = TRUE, trim = 10)  ratings_df(x, long = FALSE, names = TRUE, trim = NA)  ratings(x, i, j) <- value"},{"path":"https://docs.openrepgrid.org/reference/ratings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract ratings (wide or long format) — ratings","text":"x repgrid object. names Extract row columns names (constructs elements). trim number characters row column name trimmed (default 10). NA trimming done. Trimming simply saves space displaying output. long Return long format? (default FALSE) , j Row column indices. value Numeric replacement value(s).","code":""},{"path":"https://docs.openrepgrid.org/reference/ratings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract ratings (wide or long format) — ratings","text":"matrix.#'","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/ratings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract ratings (wide or long format) — ratings","text":"","code":"## store Bell's dataset in x x <- bell2010  ## get ratings ratings(x) #>                          elements #> constructs                self closest fr the unhapp A person o A teacher  #>   relaxed - worried &        4          4          6          5          3 #>   not so sma - smart (aca    6          7          6          5          7 #>   dislikes s - loves spor    6          3          7          6          4 #>   not intera - loves peop    6          7          5          6          6 #>   not transp - transparen    6          4          5          7          3 #>   insensitiv - sensitive     4          6          5          4          4 #>   fearful&ti - fearless      5          4          4          6          5 #>   rough - gentle             5          6          6          4          5 #>   accept as  - loves to a    5          5          6          7          4 #>                          elements #> constructs                Mother (or A person o The most c A person y #>   relaxed - worried &              6          5          2          2 #>   not so sma - smart (aca          4          6          7          4 #>   dislikes s - loves spor          4          2          3          6 #>   not intera - loves peop          5          6          7          7 #>   not transp - transparen          7          6          5          6 #>   insensitiv - sensitive           6          5          3          4 #>   fearful&ti - fearless            3          5          6          5 #>   rough - gentle                   7          7          3          5 #>   accept as  - loves to a          4          6          7          5 #>                          elements #> constructs                A teacher  #>   relaxed - worried &              6 #>   not so sma - smart (aca          7 #>   dislikes s - loves spor          3 #>   not intera - loves peop          4 #>   not transp - transparen          3 #>   insensitiv - sensitive           2 #>   fearful&ti - fearless            5 #>   rough - gentle                   6 #>   accept as  - loves to a          5   ## replace ratings  ratings(x)[1, 1] <- 1 # noet that this is even simpler using the repgrid object directly x[1, 1] <- 2  # replace several values  ratings(x)[1, 1:5] <- 1 x[1, 1:5] <- 2 # the same  ratings(x)[1:3, 5:6] <- matrix(5, 3, 2) x[1:3, 5:6] <- matrix(5, 3, 2) # the same   ## ratings as dataframe in wide or long format  ratings_df(x) #>   construct_index                    leftpole            rightpole self #> 1               1                     relaxed      worried & tense    2 #> 2               2 not so smart (academically) smart (academically)    6 #> 3               3             dislikes sports         loves sports    6 #> 4               4             not interactive         loves people    6 #> 5               5             not transparent          transparent    6 #> 6               6                 insensitive            sensitive    4 #> 7               7               fearful&timid             fearless    5 #> 8               8                       rough               gentle    5 #> 9               9             accept as it is       loves to argue    5 #>   closest friend of the same sex the unhappiest person you know #> 1                              2                              2 #> 2                              7                              6 #> 3                              3                              7 #> 4                              7                              5 #> 5                              4                              5 #> 6                              6                              5 #> 7                              4                              4 #> 8                              6                              6 #> 9                              5                              6 #>   A person of the opposite sex that you don't get along with #> 1                                                          2 #> 2                                                          5 #> 3                                                          6 #> 4                                                          6 #> 5                                                          7 #> 6                                                          4 #> 7                                                          6 #> 8                                                          4 #> 9                                                          7 #>   A teacher you respected Mother (or the person who filled that kind of role) #> 1                       5                                                   5 #> 2                       5                                                   5 #> 3                       5                                                   5 #> 4                       6                                                   5 #> 5                       3                                                   7 #> 6                       4                                                   6 #> 7                       5                                                   3 #> 8                       5                                                   7 #> 9                       4                                                   4 #>   A person of the opposite sex that you like more than you dislike #> 1                                                                5 #> 2                                                                6 #> 3                                                                2 #> 4                                                                6 #> 5                                                                6 #> 6                                                                5 #> 7                                                                5 #> 8                                                                7 #> 9                                                                6 #>   The most confident person you know #> 1                                  2 #> 2                                  7 #> 3                                  3 #> 4                                  7 #> 5                                  5 #> 6                                  3 #> 7                                  6 #> 8                                  3 #> 9                                  7 #>   A person you work well with (at job or on sports team etc) #> 1                                                          2 #> 2                                                          4 #> 3                                                          6 #> 4                                                          7 #> 5                                                          6 #> 6                                                          4 #> 7                                                          5 #> 8                                                          5 #> 9                                                          5 #>   A teacher you did not respect #> 1                             6 #> 2                             7 #> 3                             3 #> 4                             4 #> 5                             3 #> 6                             2 #> 7                             5 #> 8                             6 #> 9                             5 ratings_df(x, long = TRUE) #> # A tibble: 90 × 5 #>    construct_index leftpole rightpole       element                       rating #>              <int> <chr>    <chr>           <chr>                          <dbl> #>  1               1 relaxed  worried & tense self                               2 #>  2               1 relaxed  worried & tense closest friend of the same s…      2 #>  3               1 relaxed  worried & tense the unhappiest person you kn…      2 #>  4               1 relaxed  worried & tense A person of the opposite sex…      2 #>  5               1 relaxed  worried & tense A teacher you respected            5 #>  6               1 relaxed  worried & tense Mother (or the person who fi…      5 #>  7               1 relaxed  worried & tense A person of the opposite sex…      5 #>  8               1 relaxed  worried & tense The most confident person yo…      2 #>  9               1 relaxed  worried & tense A person you work well with …      2 #> 10               1 relaxed  worried & tense A teacher you did not respect      6 #> # ℹ 80 more rows"},{"path":"https://docs.openrepgrid.org/reference/recycle.html","id":null,"dir":"Reference","previous_headings":"","what":"recycle vector to given length — recycle","title":"recycle vector to given length — recycle","text":"recycle vector given length","code":""},{"path":"https://docs.openrepgrid.org/reference/recycle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"recycle vector to given length — recycle","text":"","code":"recycle(vec, length, na.fill = FALSE)"},{"path":"https://docs.openrepgrid.org/reference/recycle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"recycle vector to given length — recycle","text":"vec vector recycled length integer vector. integer determines length recycling. vector provided length vector used. na.fill Use NAs filling given length (default=FALSE)","code":""},{"path":"https://docs.openrepgrid.org/reference/recycle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"recycle vector to given length — recycle","text":"vector","code":""},{"path":"https://docs.openrepgrid.org/reference/recycle.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"recycle vector to given length — recycle","text":"2nd argument vector, first argument recycled length second vector. Instead recycling vector can also added extra NAs length argument smaller number elements vec, vec cut make usable many purposes.","code":""},{"path":"https://docs.openrepgrid.org/reference/recycle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"recycle vector to given length — recycle","text":"","code":"recycle(c(1, 2, 3), 7) #> [1] 1 2 3 1 2 3 1 recycle(c(1, 2, 3), letters[1:7]) #> [1] 1 2 3 1 2 3 1 recycle(c(1, 2, 3), 7, na.fill = TRUE) #> [1]  1  2  3 NA NA NA NA recycle(1, letters[1:3], na.fill = TRUE) #> [1]  1 NA NA recycle(letters[1:3], 7) #> [1] \"a\" \"b\" \"c\" \"a\" \"b\" \"c\" \"a\" recycle(letters[1:3], letters[1:7]) #> [1] \"a\" \"b\" \"c\" \"a\" \"b\" \"c\" \"a\" recycle(letters[1:40], letters[1:7]) # vec is cut off #> [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\""},{"path":"https://docs.openrepgrid.org/reference/recycle2.html","id":null,"dir":"Reference","previous_headings":"","what":"variation of recycle that recycles one vector x or y to the length of the longer one — recycle2","title":"variation of recycle that recycles one vector x or y to the length of the longer one — recycle2","text":"variation recycle recycles one vector x y length longer one","code":""},{"path":"https://docs.openrepgrid.org/reference/recycle2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"variation of recycle that recycles one vector x or y to the length of the longer one — recycle2","text":"","code":"recycle2(x, y, na.fill = FALSE)"},{"path":"https://docs.openrepgrid.org/reference/recycle2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"variation of recycle that recycles one vector x or y to the length of the longer one — recycle2","text":"x vector recycled shorter y y vector recycled shorter x na.fill Use NAs filling given length (default=FALSE)","code":""},{"path":"https://docs.openrepgrid.org/reference/recycle2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"variation of recycle that recycles one vector x or y to the length of the longer one — recycle2","text":"list     list containing recycled x vector first recycled y vector second element","code":""},{"path":"https://docs.openrepgrid.org/reference/recycle2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"variation of recycle that recycles one vector x or y to the length of the longer one — recycle2","text":"","code":"recycle2(1:10, 1:3) #> $x #>  [1]  1  2  3  4  5  6  7  8  9 10 #>  #> $y #>  [1] 1 2 3 1 2 3 1 2 3 1 #>  recycle2(1, 1:5) #> $x #> [1] 1 1 1 1 1 #>  #> $y #> [1] 1 2 3 4 5 #>  recycle2(1, 1:5, na.fill = TRUE) #> $x #> [1]  1 NA NA NA NA #>  #> $y #> [1] 1 2 3 4 5 #>  recycle2(1:5, 5:1) # vectors unchanged #> $x #> [1] 1 2 3 4 5 #>  #> $y #> [1] 5 4 3 2 1 #>"},{"path":"https://docs.openrepgrid.org/reference/reorder.html","id":null,"dir":"Reference","previous_headings":"","what":"Invert construct and element order — reorder.repgrid","title":"Invert construct and element order — reorder.repgrid","text":"Invert construct element order","code":""},{"path":"https://docs.openrepgrid.org/reference/reorder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invert construct and element order — reorder.repgrid","text":"","code":"# S3 method for class 'repgrid' reorder(x, what = \"CE\", ...)"},{"path":"https://docs.openrepgrid.org/reference/reorder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Invert construct and element order — reorder.repgrid","text":"x repgrid object. string numeric indicate constructs (\"C\", 1) elements (\"C\", 1), (\"CE\", 12) reversed. ... Ignored.","code":""},{"path":"https://docs.openrepgrid.org/reference/reorder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Invert construct and element order — reorder.repgrid","text":"","code":"# invert order of constructs reorder(boeker, \"C\") #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  15  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                                    8 - martin                          #>                         george - 7 | 9 - elizabeth                     #>                         karl - 6 | | | 10 - therapist                  #>                       kurt - 5 | | | | | 11 - irene                    #>                   father - 4 | | | | | | | 12 - childhood self         #>                 mother - 3 | | | | | | | | | 13 - self before illness  #>           ideal self - 2 | | | | | | | | | | | 14 - self with delusion #>               self - 1 | | | | | | | | | | | | | 15 - self as dreamer  #>                      | | | | | | | | | | | | | | |                     #>     wanderlust (1)   1 1 4 2 4 5 2 5 5 3 6 1 1 2 1   (1) home oriented #>      introvert (2)   4 5 4 6 5 3 5 3 5 2 5 2 2 2 3   (2) extrovert     #>     scientific (3)   2 1 5 3 4 4 5 3 4 1 6 4 2 3 3   (3) emotional     #>       artistic (4)   5 1 2 4 3 5 3 2 4 3 3 4 4 4 4   (4) technical     #>    quarrelsome (5)   5 5 5 5 5 2 5 2 4 4 1 6 5 5 5   (5) peaceful      #> ocially minded (6)   2 1 3 2 4 5 4 1 3 2 6 3 3 3 3   (6) selfish       #>        playful (7)   4 5 4 3 4 3 2 3 4 4 5 3 2 4 3   (7) serious       #> cally oriented (8)   2 1 3 2 3 3 3 2 2 3 2 3 3 3 3   (8) depressed     #>         dreamy (9)   4 5 3 5 4 5 4 5 4 4 6 3 3 3 2   (9) dispassionate #>   open minded (10)   2 1 2 1 2 4 4 2 4 2 6 3 2 2 3   (10) indifferent  #>    discursive (11)   4 1 3 1 2 4 2 3 3 2 3 3 3 5 4   (11) passive      #> ly integrated (12)   2 2 2 3 5 3 2 3 2 3 3 4 4 5 3   (12) excluded     #>      isolated (13)   3 6 3 5 5 4 5 4 5 4 4 4 2 2 3   (13) sociable     #>      balanced (14)   1 4 2 2 3 5 2 5 4 2 6 2 2 3 3   (14) get along wi #>  reorder(boeker, 1) #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  15  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                                    8 - martin                          #>                         george - 7 | 9 - elizabeth                     #>                         karl - 6 | | | 10 - therapist                  #>                       kurt - 5 | | | | | 11 - irene                    #>                   father - 4 | | | | | | | 12 - childhood self         #>                 mother - 3 | | | | | | | | | 13 - self before illness  #>           ideal self - 2 | | | | | | | | | | | 14 - self with delusion #>               self - 1 | | | | | | | | | | | | | 15 - self as dreamer  #>                      | | | | | | | | | | | | | | |                     #>     wanderlust (1)   1 1 4 2 4 5 2 5 5 3 6 1 1 2 1   (1) home oriented #>      introvert (2)   4 5 4 6 5 3 5 3 5 2 5 2 2 2 3   (2) extrovert     #>     scientific (3)   2 1 5 3 4 4 5 3 4 1 6 4 2 3 3   (3) emotional     #>       artistic (4)   5 1 2 4 3 5 3 2 4 3 3 4 4 4 4   (4) technical     #>    quarrelsome (5)   5 5 5 5 5 2 5 2 4 4 1 6 5 5 5   (5) peaceful      #> ocially minded (6)   2 1 3 2 4 5 4 1 3 2 6 3 3 3 3   (6) selfish       #>        playful (7)   4 5 4 3 4 3 2 3 4 4 5 3 2 4 3   (7) serious       #> cally oriented (8)   2 1 3 2 3 3 3 2 2 3 2 3 3 3 3   (8) depressed     #>         dreamy (9)   4 5 3 5 4 5 4 5 4 4 6 3 3 3 2   (9) dispassionate #>   open minded (10)   2 1 2 1 2 4 4 2 4 2 6 3 2 2 3   (10) indifferent  #>    discursive (11)   4 1 3 1 2 4 2 3 3 2 3 3 3 5 4   (11) passive      #> ly integrated (12)   2 2 2 3 5 3 2 3 2 3 3 4 4 5 3   (12) excluded     #>      isolated (13)   3 6 3 5 5 4 5 4 5 4 4 4 2 2 3   (13) sociable     #>      balanced (14)   1 4 2 2 3 5 2 5 4 2 6 2 2 3 3   (14) get along wi #>   # invert order of elements reorder(boeker, \"E\") #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  15  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                                    8 - martin                          #>                      elizabeth - 7 | 9 - george                        #>                    therapist - 6 | | | 10 - karl                       #>                      irene - 5 | | | | | 11 - kurt                     #>           childhood self - 4 | | | | | | | 12 - father                 #>    self before illness - 3 | | | | | | | | | 13 - mother               #>   self with delusion - 2 | | | | | | | | | | | 14 - ideal self         #>    self as dreamer - 1 | | | | | | | | | | | | | 15 - self             #>                      | | | | | | | | | | | | | | |                     #>       balanced (1)   3 3 2 2 6 2 4 5 2 5 3 2 2 4 1   (1) get along wit #>       isolated (2)   3 2 2 4 4 4 5 4 5 4 5 5 3 6 3   (2) sociable      #> ely integrated (3)   3 5 4 4 3 3 2 3 2 3 5 3 2 2 2   (3) excluded      #>     discursive (4)   4 5 3 3 3 2 3 3 2 4 2 1 3 1 4   (4) passive       #>    open minded (5)   3 2 2 3 6 2 4 2 4 4 2 1 2 1 2   (5) indifferent   #>         dreamy (6)   2 3 3 3 6 4 4 5 4 5 4 5 3 5 4   (6) dispassionate #> cally oriented (7)   3 3 3 3 2 3 2 2 3 3 3 2 3 1 2   (7) depressed     #>        playful (8)   3 4 2 3 5 4 4 3 2 3 4 3 4 5 4   (8) serious       #> ocially minded (9)   3 3 3 3 6 2 3 1 4 5 4 2 3 1 2   (9) selfish       #>   quarrelsome (10)   5 5 5 6 1 4 4 2 5 2 5 5 5 5 5   (10) peaceful     #>      artistic (11)   4 4 4 4 3 3 4 2 3 5 3 4 2 1 5   (11) technical    #>    scientific (12)   3 3 2 4 6 1 4 3 5 4 4 3 5 1 2   (12) emotional    #>     introvert (13)   3 2 2 2 5 2 5 3 5 3 5 6 4 5 4   (13) extrovert    #>    wanderlust (14)   1 2 1 1 6 3 5 5 2 5 4 2 4 1 1   (14) home oriente #>  reorder(boeker, 2) #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  15  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                                    8 - martin                          #>                      elizabeth - 7 | 9 - george                        #>                    therapist - 6 | | | 10 - karl                       #>                      irene - 5 | | | | | 11 - kurt                     #>           childhood self - 4 | | | | | | | 12 - father                 #>    self before illness - 3 | | | | | | | | | 13 - mother               #>   self with delusion - 2 | | | | | | | | | | | 14 - ideal self         #>    self as dreamer - 1 | | | | | | | | | | | | | 15 - self             #>                      | | | | | | | | | | | | | | |                     #>       balanced (1)   3 3 2 2 6 2 4 5 2 5 3 2 2 4 1   (1) get along wit #>       isolated (2)   3 2 2 4 4 4 5 4 5 4 5 5 3 6 3   (2) sociable      #> ely integrated (3)   3 5 4 4 3 3 2 3 2 3 5 3 2 2 2   (3) excluded      #>     discursive (4)   4 5 3 3 3 2 3 3 2 4 2 1 3 1 4   (4) passive       #>    open minded (5)   3 2 2 3 6 2 4 2 4 4 2 1 2 1 2   (5) indifferent   #>         dreamy (6)   2 3 3 3 6 4 4 5 4 5 4 5 3 5 4   (6) dispassionate #> cally oriented (7)   3 3 3 3 2 3 2 2 3 3 3 2 3 1 2   (7) depressed     #>        playful (8)   3 4 2 3 5 4 4 3 2 3 4 3 4 5 4   (8) serious       #> ocially minded (9)   3 3 3 3 6 2 3 1 4 5 4 2 3 1 2   (9) selfish       #>   quarrelsome (10)   5 5 5 6 1 4 4 2 5 2 5 5 5 5 5   (10) peaceful     #>      artistic (11)   4 4 4 4 3 3 4 2 3 5 3 4 2 1 5   (11) technical    #>    scientific (12)   3 3 2 4 6 1 4 3 5 4 4 3 5 1 2   (12) emotional    #>     introvert (13)   3 2 2 2 5 2 5 3 5 3 5 6 4 5 4   (13) extrovert    #>    wanderlust (14)   1 2 1 1 6 3 5 5 2 5 4 2 4 1 1   (14) home oriente #>   # invert both (default) reorder(boeker) #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  15  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                                    8 - martin                          #>                      elizabeth - 7 | 9 - george                        #>                    therapist - 6 | | | 10 - karl                       #>                      irene - 5 | | | | | 11 - kurt                     #>           childhood self - 4 | | | | | | | 12 - father                 #>    self before illness - 3 | | | | | | | | | 13 - mother               #>   self with delusion - 2 | | | | | | | | | | | 14 - ideal self         #>    self as dreamer - 1 | | | | | | | | | | | | | 15 - self             #>                      | | | | | | | | | | | | | | |                     #>     wanderlust (1)   1 2 1 1 6 3 5 5 2 5 4 2 4 1 1   (1) home oriented #>      introvert (2)   3 2 2 2 5 2 5 3 5 3 5 6 4 5 4   (2) extrovert     #>     scientific (3)   3 3 2 4 6 1 4 3 5 4 4 3 5 1 2   (3) emotional     #>       artistic (4)   4 4 4 4 3 3 4 2 3 5 3 4 2 1 5   (4) technical     #>    quarrelsome (5)   5 5 5 6 1 4 4 2 5 2 5 5 5 5 5   (5) peaceful      #> ocially minded (6)   3 3 3 3 6 2 3 1 4 5 4 2 3 1 2   (6) selfish       #>        playful (7)   3 4 2 3 5 4 4 3 2 3 4 3 4 5 4   (7) serious       #> cally oriented (8)   3 3 3 3 2 3 2 2 3 3 3 2 3 1 2   (8) depressed     #>         dreamy (9)   2 3 3 3 6 4 4 5 4 5 4 5 3 5 4   (9) dispassionate #>   open minded (10)   3 2 2 3 6 2 4 2 4 4 2 1 2 1 2   (10) indifferent  #>    discursive (11)   4 5 3 3 3 2 3 3 2 4 2 1 3 1 4   (11) passive      #> ly integrated (12)   3 5 4 4 3 3 2 3 2 3 5 3 2 2 2   (12) excluded     #>      isolated (13)   3 2 2 4 4 4 5 4 5 4 5 5 3 6 3   (13) sociable     #>      balanced (14)   3 3 2 2 6 2 4 5 2 5 3 2 2 4 1   (14) get along wi #>  reorder(boeker, \"CE\") #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  15  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                                    8 - martin                          #>                      elizabeth - 7 | 9 - george                        #>                    therapist - 6 | | | 10 - karl                       #>                      irene - 5 | | | | | 11 - kurt                     #>           childhood self - 4 | | | | | | | 12 - father                 #>    self before illness - 3 | | | | | | | | | 13 - mother               #>   self with delusion - 2 | | | | | | | | | | | 14 - ideal self         #>    self as dreamer - 1 | | | | | | | | | | | | | 15 - self             #>                      | | | | | | | | | | | | | | |                     #>     wanderlust (1)   1 2 1 1 6 3 5 5 2 5 4 2 4 1 1   (1) home oriented #>      introvert (2)   3 2 2 2 5 2 5 3 5 3 5 6 4 5 4   (2) extrovert     #>     scientific (3)   3 3 2 4 6 1 4 3 5 4 4 3 5 1 2   (3) emotional     #>       artistic (4)   4 4 4 4 3 3 4 2 3 5 3 4 2 1 5   (4) technical     #>    quarrelsome (5)   5 5 5 6 1 4 4 2 5 2 5 5 5 5 5   (5) peaceful      #> ocially minded (6)   3 3 3 3 6 2 3 1 4 5 4 2 3 1 2   (6) selfish       #>        playful (7)   3 4 2 3 5 4 4 3 2 3 4 3 4 5 4   (7) serious       #> cally oriented (8)   3 3 3 3 2 3 2 2 3 3 3 2 3 1 2   (8) depressed     #>         dreamy (9)   2 3 3 3 6 4 4 5 4 5 4 5 3 5 4   (9) dispassionate #>   open minded (10)   3 2 2 3 6 2 4 2 4 4 2 1 2 1 2   (10) indifferent  #>    discursive (11)   4 5 3 3 3 2 3 3 2 4 2 1 3 1 4   (11) passive      #> ly integrated (12)   3 5 4 4 3 3 2 3 2 3 5 3 2 2 2   (12) excluded     #>      isolated (13)   3 2 2 4 4 4 5 4 5 4 5 5 3 6 3   (13) sociable     #>      balanced (14)   3 3 2 2 6 2 4 5 2 5 3 2 2 4 1   (14) get along wi #>  reorder(boeker, 12) #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  15  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                                    8 - martin                          #>                      elizabeth - 7 | 9 - george                        #>                    therapist - 6 | | | 10 - karl                       #>                      irene - 5 | | | | | 11 - kurt                     #>           childhood self - 4 | | | | | | | 12 - father                 #>    self before illness - 3 | | | | | | | | | 13 - mother               #>   self with delusion - 2 | | | | | | | | | | | 14 - ideal self         #>    self as dreamer - 1 | | | | | | | | | | | | | 15 - self             #>                      | | | | | | | | | | | | | | |                     #>     wanderlust (1)   1 2 1 1 6 3 5 5 2 5 4 2 4 1 1   (1) home oriented #>      introvert (2)   3 2 2 2 5 2 5 3 5 3 5 6 4 5 4   (2) extrovert     #>     scientific (3)   3 3 2 4 6 1 4 3 5 4 4 3 5 1 2   (3) emotional     #>       artistic (4)   4 4 4 4 3 3 4 2 3 5 3 4 2 1 5   (4) technical     #>    quarrelsome (5)   5 5 5 6 1 4 4 2 5 2 5 5 5 5 5   (5) peaceful      #> ocially minded (6)   3 3 3 3 6 2 3 1 4 5 4 2 3 1 2   (6) selfish       #>        playful (7)   3 4 2 3 5 4 4 3 2 3 4 3 4 5 4   (7) serious       #> cally oriented (8)   3 3 3 3 2 3 2 2 3 3 3 2 3 1 2   (8) depressed     #>         dreamy (9)   2 3 3 3 6 4 4 5 4 5 4 5 3 5 4   (9) dispassionate #>   open minded (10)   3 2 2 3 6 2 4 2 4 4 2 1 2 1 2   (10) indifferent  #>    discursive (11)   4 5 3 3 3 2 3 3 2 4 2 1 3 1 4   (11) passive      #> ly integrated (12)   3 5 4 4 3 3 2 3 2 3 5 3 2 2 2   (12) excluded     #>      isolated (13)   3 2 2 4 4 4 5 4 5 4 5 5 3 6 3   (13) sociable     #>      balanced (14)   3 3 2 2 6 2 4 5 2 5 3 2 2 4 1   (14) get along wi #>   # not reordering reorder(boeker, NA) #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  15  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                                    8 - martin                          #>                         george - 7 | 9 - elizabeth                     #>                         karl - 6 | | | 10 - therapist                  #>                       kurt - 5 | | | | | 11 - irene                    #>                   father - 4 | | | | | | | 12 - childhood self         #>                 mother - 3 | | | | | | | | | 13 - self before illness  #>           ideal self - 2 | | | | | | | | | | | 14 - self with delusion #>               self - 1 | | | | | | | | | | | | | 15 - self as dreamer  #>                      | | | | | | | | | | | | | | |                     #>       balanced (1)   1 4 2 2 3 5 2 5 4 2 6 2 2 3 3   (1) get along wit #>       isolated (2)   3 6 3 5 5 4 5 4 5 4 4 4 2 2 3   (2) sociable      #> ely integrated (3)   2 2 2 3 5 3 2 3 2 3 3 4 4 5 3   (3) excluded      #>     discursive (4)   4 1 3 1 2 4 2 3 3 2 3 3 3 5 4   (4) passive       #>    open minded (5)   2 1 2 1 2 4 4 2 4 2 6 3 2 2 3   (5) indifferent   #>         dreamy (6)   4 5 3 5 4 5 4 5 4 4 6 3 3 3 2   (6) dispassionate #> cally oriented (7)   2 1 3 2 3 3 3 2 2 3 2 3 3 3 3   (7) depressed     #>        playful (8)   4 5 4 3 4 3 2 3 4 4 5 3 2 4 3   (8) serious       #> ocially minded (9)   2 1 3 2 4 5 4 1 3 2 6 3 3 3 3   (9) selfish       #>   quarrelsome (10)   5 5 5 5 5 2 5 2 4 4 1 6 5 5 5   (10) peaceful     #>      artistic (11)   5 1 2 4 3 5 3 2 4 3 3 4 4 4 4   (11) technical    #>    scientific (12)   2 1 5 3 4 4 5 3 4 1 6 4 2 3 3   (12) emotional    #>     introvert (13)   4 5 4 6 5 3 5 3 5 2 5 2 2 2 3   (13) extrovert    #>    wanderlust (14)   1 1 4 2 4 5 2 5 5 3 6 1 1 2 1   (14) home oriente #>"},{"path":"https://docs.openrepgrid.org/reference/reorder2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Order grid by angles between construct and/or elements in 2D. — reorder2d","title":"Order grid by angles between construct and/or elements in 2D. — reorder2d","text":"approach reorder grid matrix polar angles first two principal components data reduction technique (biplot, .e. SVD). function reorder2d reorders grid according angles x-axis element (construct) vectors derived 2D biplot solution. approach apt identify circumplex structures data indicated diagonal stripe display (see examples).","code":""},{"path":"https://docs.openrepgrid.org/reference/reorder2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order grid by angles between construct and/or elements in 2D. — reorder2d","text":"","code":"reorder2d(   x,   dim = c(1, 2),   center = 1,   normalize = 0,   g = 0,   h = 1 - g,   rc = TRUE,   re = TRUE,   ... )"},{"path":"https://docs.openrepgrid.org/reference/reorder2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order grid by angles between construct and/or elements in 2D. — reorder2d","text":"x repgrid object. dim Dimension 2D solution used calculate angles (default c(1,2)). center Numeric. type centering performed. 0= centering, 1= row mean centering (construct), 2= column mean centering (elements), 3= double-centering (construct element means), 4= midpoint centering rows (constructs). default 1 (row centering). normalize numeric value indicating along direction (rows, columns) normalize standard deviations. 0 = none, 1= rows, 2 = columns (default 0). g Power singular value matrix assigned left singular vectors, .e. constructs. h Power singular value matrix assigned right singular vectors, .e. elements. rc Logical. Reorder constructs similarity (default TRUE). re Logical. Reorder elements similarity (default TRUE). ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/reorder2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order grid by angles between construct and/or elements in 2D. — reorder2d","text":"Reordered repgrid object.","code":""},{"path":"https://docs.openrepgrid.org/reference/reorder2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Order grid by angles between construct and/or elements in 2D. — reorder2d","text":"","code":"x <- feixas2004 reorder2d(x) # reorder grid by angles in first two dimensions #>  #> META DATA: #> Number of constructs:  20  #> Number of elements:  13  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 7 (right pole) #>  #> RATINGS: #>                                  7 - Non-grata                     #>                       Father - 6 | 8 - Brother                     #>                   Friend 1 - 5 | | | 9 - Mother                    #>                 Friend 2 - 4 | | | | | 10 - Friend 4               #>                 Cousin - 3 | | | | | | | 11 - Self now             #>           Ideal Self - 2 | | | | | | | | | 12 - Friend 3           #>          Boyfriend - 1 | | | | | | | | | | | 13 - Godmother        #>                      | | | | | | | | | | | | |                     #>   Hypocritical (1)   6 7 6 5 5 4 1 2 4 4 5 6 5   (1) Sincere       #>  Lives to work (2)   6 7 7 6 6 2 1 2 1 6 5 6 6   (2) Works to live #>    Blackmailer (3)   5 7 6 6 6 2 1 1 2 3 3 6 6   (3) Non blackmail #>    Pessimistic (4)   7 7 4 6 3 5 2 2 1 2 1 6 3   (4) Optimistic    #>    Introverted (5)   4 5 6 7 5 6 5 2 2 5 1 2 6   (5) Extroverted   #>        Fearful (6)   4 5 3 6 5 6 5 2 2 5 2 2 4   (6) Enterprising  #> pressed easily (7)   6 6 3 7 3 6 6 3 2 3 1 1 3   (7) Does not get  #> Self-demanding (8)   2 4 6 6 5 6 3 2 6 5 1 5 4   (8) Takes it easy #> d about others (9)   2 2 3 5 3 6 7 7 2 2 2 3 2   (9) Selfish       #>     Sensitive (10)   1 1 4 5 4 7 7 7 5 4 1 1 3   (10) Materialisti #> ciates others (11)   1 1 2 4 5 6 7 6 6 5 2 4 2   (11) Does not app #>       Teasing (12)   4 3 3 4 3 1 6 6 7 6 2 3 5   (12) Touchy       #>  good in thin (13)   1 1 3 2 5 4 7 6 6 5 6 6 3   (13) Sees only th #> er the friend (14)   6 7 4 1 2 3 2 3 3 4 6 4 6   (14) Looks after  #> onger than is (15)   5 6 6 4 2 1 2 2 3 5 6 7 6   (15) Natural      #> is/her wishes (16)   4 7 3 6 3 1 1 1 2 2 6 7 4   (16) Tolerant wit #> on Accessible (17)   4 7 3 4 2 2 1 1 2 2 5 6 5   (17) Accessible   #>        Cheeky (18)   6 7 5 6 6 5 1 4 6 5 6 6 6   (18) Respectful   #>    Avaricious (19)   7 7 3 5 5 1 1 1 1 6 6 6 3   (19) Generous     #>    Aggressive (20)   7 7 6 6 4 2 2 2 4 3 6 6 6   (20) Calm         #>  reorder2d(x, rc = FALSE) # reorder elements only #>  #> META DATA: #> Number of constructs:  20  #> Number of elements:  13  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 7 (right pole) #>  #> RATINGS: #>                                  7 - Non-grata                     #>                       Father - 6 | 8 - Brother                     #>                   Friend 1 - 5 | | | 9 - Mother                    #>                 Friend 2 - 4 | | | | | 10 - Friend 4               #>                 Cousin - 3 | | | | | | | 11 - Self now             #>           Ideal Self - 2 | | | | | | | | | 12 - Friend 3           #>          Boyfriend - 1 | | | | | | | | | | | 13 - Godmother        #>                      | | | | | | | | | | | | |                     #>    Pessimistic (1)   7 7 4 6 3 5 2 2 1 2 1 6 3   (1) Optimistic    #> Self-demanding (2)   2 4 6 6 5 6 3 2 6 5 1 5 4   (2) Takes it easy #>        Fearful (3)   4 5 3 6 5 6 5 2 2 5 2 2 4   (3) Enterprising  #>  Lives to work (4)   6 7 7 6 6 2 1 2 1 6 5 6 6   (4) Works to live #> his/her wishes (5)   4 7 3 6 3 1 1 1 2 2 6 7 4   (5) Tolerant with #>        Teasing (6)   4 3 3 4 3 1 6 6 7 6 2 3 5   (6) Touchy        #> eciates others (7)   1 1 2 4 5 6 7 6 6 5 2 4 2   (7) Does not appr #>     Aggressive (8)   7 7 6 6 4 2 2 2 4 3 6 6 6   (8) Calm          #> d about others (9)   2 2 3 5 3 6 7 7 2 2 2 3 2   (9) Selfish       #>    Avaricious (10)   7 7 3 5 5 1 1 1 1 6 6 6 3   (10) Generous     #>     Sensitive (11)   1 1 4 5 4 7 7 7 5 4 1 1 3   (11) Materialisti #>        Cheeky (12)   6 7 5 6 6 5 1 4 6 5 6 6 6   (12) Respectful   #>  Hypocritical (13)   6 7 6 5 5 4 1 2 4 4 5 6 5   (13) Sincere      #>   Blackmailer (14)   5 7 6 6 6 2 1 1 2 3 3 6 6   (14) Non blackmai #> onger than is (15)   5 6 6 4 2 1 2 2 3 5 6 7 6   (15) Natural      #> er the friend (16)   6 7 4 1 2 3 2 3 3 4 6 4 6   (16) Looks after  #> on Accessible (17)   4 7 3 4 2 2 1 1 2 2 5 6 5   (17) Accessible   #>   Introverted (18)   4 5 6 7 5 6 5 2 2 5 1 2 6   (18) Extroverted  #> ressed easily (19)   6 6 3 7 3 6 6 3 2 3 1 1 3   (19) Does not get #>  good in thin (20)   1 1 3 2 5 4 7 6 6 5 6 6 3   (20) Sees only th #>  reorder2d(x, re = FALSE) # reorder constructs only #>  #> META DATA: #> Number of constructs:  20  #> Number of elements:  13  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 7 (right pole) #>  #> RATINGS: #>                                  7 - Friend 2                      #>                     Friend 1 - 6 | 8 - Non-grata                   #>                  Boyfriend - 5 | | | 9 - Friend 3                  #>                  Brother - 4 | | | | | 10 - Cousin                 #>                 Father - 3 | | | | | | | 11 - Godmother            #>               Mother - 2 | | | | | | | | | 12 - Friend 4           #>           Self now - 1 | | | | | | | | | | | 13 - Ideal Self       #>                      | | | | | | | | | | | | |                     #>   Hypocritical (1)   5 4 4 2 6 5 5 1 6 6 5 4 7   (1) Sincere       #>  Lives to work (2)   5 1 2 2 6 6 6 1 6 7 6 6 7   (2) Works to live #>    Blackmailer (3)   3 2 2 1 5 6 6 1 6 6 6 3 7   (3) Non blackmail #>    Pessimistic (4)   1 1 5 2 7 3 6 2 6 4 3 2 7   (4) Optimistic    #>    Introverted (5)   1 2 6 2 4 5 7 5 2 6 6 5 5   (5) Extroverted   #>        Fearful (6)   2 2 6 2 4 5 6 5 2 3 4 5 5   (6) Enterprising  #> pressed easily (7)   1 2 6 3 6 3 7 6 1 3 3 3 6   (7) Does not get  #> Self-demanding (8)   1 6 6 2 2 5 6 3 5 6 4 5 4   (8) Takes it easy #> d about others (9)   2 2 6 7 2 3 5 7 3 3 2 2 2   (9) Selfish       #>     Sensitive (10)   1 5 7 7 1 4 5 7 1 4 3 4 1   (10) Materialisti #> ciates others (11)   2 6 6 6 1 5 4 7 4 2 2 5 1   (11) Does not app #>       Teasing (12)   2 7 1 6 4 3 4 6 3 3 5 6 3   (12) Touchy       #>  good in thin (13)   6 6 4 6 1 5 2 7 6 3 3 5 1   (13) Sees only th #> er the friend (14)   6 3 3 3 6 2 1 2 4 4 6 4 7   (14) Looks after  #> onger than is (15)   6 3 1 2 5 2 4 2 7 6 6 5 6   (15) Natural      #> is/her wishes (16)   6 2 1 1 4 3 6 1 7 3 4 2 7   (16) Tolerant wit #> on Accessible (17)   5 2 2 1 4 2 4 1 6 3 5 2 7   (17) Accessible   #>        Cheeky (18)   6 6 5 4 6 6 6 1 6 5 6 5 7   (18) Respectful   #>    Avaricious (19)   6 1 1 1 7 5 5 1 6 3 3 6 7   (19) Generous     #>    Aggressive (20)   6 4 2 2 7 4 6 2 6 6 6 3 7   (20) Calm         #>"},{"path":"https://docs.openrepgrid.org/reference/rep.repgrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Replicate repgrid objects — rep.repgrid","title":"Replicate repgrid objects — rep.repgrid","text":"Implements rep method repgrid objects.","code":""},{"path":"https://docs.openrepgrid.org/reference/rep.repgrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replicate repgrid objects — rep.repgrid","text":"","code":"# S3 method for class 'repgrid' rep(x, n = 1, ...)"},{"path":"https://docs.openrepgrid.org/reference/rep.repgrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replicate repgrid objects — rep.repgrid","text":"x `repgrid“ object. n Number times replicate grid.","code":""},{"path":"https://docs.openrepgrid.org/reference/rep.repgrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replicate repgrid objects — rep.repgrid","text":"`gridlist“ object.","code":""},{"path":"https://docs.openrepgrid.org/reference/rep.repgrid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replicate repgrid objects — rep.repgrid","text":"","code":"l <- rep(boeker, 3) # gridlist with 3 boeker grids"},{"path":"https://docs.openrepgrid.org/reference/resampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample constructs — grids_leave_n_out","title":"Resample constructs — grids_leave_n_out","text":"goal resampling build variations single grid. Two variants implemented: first leave-n-approach builds possible grids dropping n constructs. second bootstrap approach, randomly drawing n constructs grid.","code":""},{"path":"https://docs.openrepgrid.org/reference/resampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample constructs — grids_leave_n_out","text":"","code":"grids_leave_n_out(x, n = 0)  grids_bootstrap(x, n = nrow(x), reps = 100, replace = TRUE)"},{"path":"https://docs.openrepgrid.org/reference/resampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample constructs — grids_leave_n_out","text":"x repgrid object. n Number constructs drop sample generated grid. reps Number grids generate. replace Resample constructs replacement?","code":""},{"path":"https://docs.openrepgrid.org/reference/resampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resample constructs — grids_leave_n_out","text":"List grids.","code":""},{"path":"https://docs.openrepgrid.org/reference/resampling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resample constructs — grids_leave_n_out","text":"","code":"## All results for PVAFF index when one construct is left out  p <- indexPvaff(boeker) #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  l <- grids_leave_n_out(boeker, n = 1) pp <- sapply(l, indexPvaff)  # apply indexPvaff function to all grids #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  #> Note: As of v0.1.14 PVAFF is derived using PCA of the construct centered ratings by default.Before that the construct correlation matrix was used (see method=2). #>  range(pp)   # min and max PVAFF #> [1] 0.3659271 0.4505245 hist(pp, xlab = \"PVAFF values\")    # visualize abline(v = p, col = \"blue\", lty = 2)"},{"path":"https://docs.openrepgrid.org/reference/reverse.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse constructs / swaps construct poles — swapPoles","title":"Reverse constructs / swaps construct poles — swapPoles","text":"Constructs bipolar. can reversed without change meaning. function swaps constructs poles re-adjusts ratings accordingly, .e. reversed selected constructs.","code":""},{"path":"https://docs.openrepgrid.org/reference/reverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse constructs / swaps construct poles — swapPoles","text":"","code":"swapPoles(x, pos)  reverse(x, pos = 1L:nrow(x))"},{"path":"https://docs.openrepgrid.org/reference/reverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse constructs / swaps construct poles — swapPoles","text":"x repgrid object. pos Row indexes constructs reverse..","code":""},{"path":"https://docs.openrepgrid.org/reference/reverse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse constructs / swaps construct poles — swapPoles","text":"repgrid object reversed constructs.","code":""},{"path":"https://docs.openrepgrid.org/reference/reverse.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Reverse constructs / swaps construct poles — swapPoles","text":"Please note scale rating grid set order reverse constructs. scale unknown reversal occurs error raised.","code":""},{"path":"https://docs.openrepgrid.org/reference/reverse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse constructs / swaps construct poles — swapPoles","text":"","code":"x <- boeker  reverse(x) # reverse all constructs #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  15  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                                    8 - martin                          #>                         george - 7 | 9 - elizabeth                     #>                         karl - 6 | | | 10 - therapist                  #>                       kurt - 5 | | | | | 11 - irene                    #>                   father - 4 | | | | | | | 12 - childhood self         #>                 mother - 3 | | | | | | | | | 13 - self before illness  #>           ideal self - 2 | | | | | | | | | | | 14 - self with delusion #>               self - 1 | | | | | | | | | | | | | 15 - self as dreamer  #>                      | | | | | | | | | | | | | | |                     #> with conflicts (1)   6 3 5 5 4 2 5 2 3 5 1 5 5 4 4   (1) balanced      #>       sociable (2)   4 1 4 2 2 3 2 3 2 3 3 3 5 5 4   (2) isolated      #>       excluded (3)   5 5 5 4 2 4 5 4 5 4 4 3 3 2 4   (3) closely integ #>        passive (4)   3 6 4 6 5 3 5 4 4 5 4 4 4 2 3   (4) discursive    #>    indifferent (5)   5 6 5 6 5 3 3 5 3 5 1 4 5 5 4   (5) open minded   #>  dispassionate (6)   3 2 4 2 3 2 3 2 3 3 1 4 4 4 5   (6) dreamy        #>      depressed (7)   5 6 4 5 4 4 4 5 5 4 5 4 4 4 4   (7) practically o #>        serious (8)   3 2 3 4 3 4 5 4 3 3 2 4 5 3 4   (8) playful       #>        selfish (9)   5 6 4 5 3 2 3 6 4 5 1 4 4 4 4   (9) socially mind #>      peaceful (10)   2 2 2 2 2 5 2 5 3 3 6 1 2 2 2   (10) quarrelsome  #>     technical (11)   2 6 5 3 4 2 4 5 3 4 4 3 3 3 3   (11) artistic     #>     emotional (12)   5 6 2 4 3 3 2 4 3 6 1 3 5 4 4   (12) scientific   #>     extrovert (13)   3 2 3 1 2 4 2 4 2 5 2 5 5 5 4   (13) introvert    #> home oriented (14)   6 6 3 5 3 2 5 2 2 4 1 6 6 5 6   (14) wanderlust   #>  reverse(x, 1) # reverse construct 1 #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  15  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                                    8 - martin                          #>                         george - 7 | 9 - elizabeth                     #>                         karl - 6 | | | 10 - therapist                  #>                       kurt - 5 | | | | | 11 - irene                    #>                   father - 4 | | | | | | | 12 - childhood self         #>                 mother - 3 | | | | | | | | | 13 - self before illness  #>           ideal self - 2 | | | | | | | | | | | 14 - self with delusion #>               self - 1 | | | | | | | | | | | | | 15 - self as dreamer  #>                      | | | | | | | | | | | | | | |                     #> with conflicts (1)   6 3 5 5 4 2 5 2 3 5 1 5 5 4 4   (1) balanced      #>       isolated (2)   3 6 3 5 5 4 5 4 5 4 4 4 2 2 3   (2) sociable      #> ely integrated (3)   2 2 2 3 5 3 2 3 2 3 3 4 4 5 3   (3) excluded      #>     discursive (4)   4 1 3 1 2 4 2 3 3 2 3 3 3 5 4   (4) passive       #>    open minded (5)   2 1 2 1 2 4 4 2 4 2 6 3 2 2 3   (5) indifferent   #>         dreamy (6)   4 5 3 5 4 5 4 5 4 4 6 3 3 3 2   (6) dispassionate #> cally oriented (7)   2 1 3 2 3 3 3 2 2 3 2 3 3 3 3   (7) depressed     #>        playful (8)   4 5 4 3 4 3 2 3 4 4 5 3 2 4 3   (8) serious       #> ocially minded (9)   2 1 3 2 4 5 4 1 3 2 6 3 3 3 3   (9) selfish       #>   quarrelsome (10)   5 5 5 5 5 2 5 2 4 4 1 6 5 5 5   (10) peaceful     #>      artistic (11)   5 1 2 4 3 5 3 2 4 3 3 4 4 4 4   (11) technical    #>    scientific (12)   2 1 5 3 4 4 5 3 4 1 6 4 2 3 3   (12) emotional    #>     introvert (13)   4 5 4 6 5 3 5 3 5 2 5 2 2 2 3   (13) extrovert    #>    wanderlust (14)   1 1 4 2 4 5 2 5 5 3 6 1 1 2 1   (14) home oriente #>  reverse(x, 1:2) # reverse constructs 1 and 2 #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  15  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                                    8 - martin                          #>                         george - 7 | 9 - elizabeth                     #>                         karl - 6 | | | 10 - therapist                  #>                       kurt - 5 | | | | | 11 - irene                    #>                   father - 4 | | | | | | | 12 - childhood self         #>                 mother - 3 | | | | | | | | | 13 - self before illness  #>           ideal self - 2 | | | | | | | | | | | 14 - self with delusion #>               self - 1 | | | | | | | | | | | | | 15 - self as dreamer  #>                      | | | | | | | | | | | | | | |                     #> with conflicts (1)   6 3 5 5 4 2 5 2 3 5 1 5 5 4 4   (1) balanced      #>       sociable (2)   4 1 4 2 2 3 2 3 2 3 3 3 5 5 4   (2) isolated      #> ely integrated (3)   2 2 2 3 5 3 2 3 2 3 3 4 4 5 3   (3) excluded      #>     discursive (4)   4 1 3 1 2 4 2 3 3 2 3 3 3 5 4   (4) passive       #>    open minded (5)   2 1 2 1 2 4 4 2 4 2 6 3 2 2 3   (5) indifferent   #>         dreamy (6)   4 5 3 5 4 5 4 5 4 4 6 3 3 3 2   (6) dispassionate #> cally oriented (7)   2 1 3 2 3 3 3 2 2 3 2 3 3 3 3   (7) depressed     #>        playful (8)   4 5 4 3 4 3 2 3 4 4 5 3 2 4 3   (8) serious       #> ocially minded (9)   2 1 3 2 4 5 4 1 3 2 6 3 3 3 3   (9) selfish       #>   quarrelsome (10)   5 5 5 5 5 2 5 2 4 4 1 6 5 5 5   (10) peaceful     #>      artistic (11)   5 1 2 4 3 5 3 2 4 3 3 4 4 4 4   (11) technical    #>    scientific (12)   2 1 5 3 4 4 5 3 4 1 6 4 2 3 3   (12) emotional    #>     introvert (13)   4 5 4 6 5 3 5 3 5 2 5 2 2 2 3   (13) extrovert    #>    wanderlust (14)   1 1 4 2 4 5 2 5 5 3 6 1 1 2 1   (14) home oriente #>   # swapPoles will become deprecated, use reverse instead swapPoles(x, 1) # swap construct poles of construct #>  #> META DATA: #> Number of constructs:  14  #> Number of elements:  15  #>  #> SCALE INFO: #> The grid is rated on a scale from 1 (left pole) to 6 (right pole) #>  #> RATINGS: #>                                    8 - martin                          #>                         george - 7 | 9 - elizabeth                     #>                         karl - 6 | | | 10 - therapist                  #>                       kurt - 5 | | | | | 11 - irene                    #>                   father - 4 | | | | | | | 12 - childhood self         #>                 mother - 3 | | | | | | | | | 13 - self before illness  #>           ideal self - 2 | | | | | | | | | | | 14 - self with delusion #>               self - 1 | | | | | | | | | | | | | 15 - self as dreamer  #>                      | | | | | | | | | | | | | | |                     #> with conflicts (1)   6 3 5 5 4 2 5 2 3 5 1 5 5 4 4   (1) balanced      #>       isolated (2)   3 6 3 5 5 4 5 4 5 4 4 4 2 2 3   (2) sociable      #> ely integrated (3)   2 2 2 3 5 3 2 3 2 3 3 4 4 5 3   (3) excluded      #>     discursive (4)   4 1 3 1 2 4 2 3 3 2 3 3 3 5 4   (4) passive       #>    open minded (5)   2 1 2 1 2 4 4 2 4 2 6 3 2 2 3   (5) indifferent   #>         dreamy (6)   4 5 3 5 4 5 4 5 4 4 6 3 3 3 2   (6) dispassionate #> cally oriented (7)   2 1 3 2 3 3 3 2 2 3 2 3 3 3 3   (7) depressed     #>        playful (8)   4 5 4 3 4 3 2 3 4 4 5 3 2 4 3   (8) serious       #> ocially minded (9)   2 1 3 2 4 5 4 1 3 2 6 3 3 3 3   (9) selfish       #>   quarrelsome (10)   5 5 5 5 5 2 5 2 4 4 1 6 5 5 5   (10) peaceful     #>      artistic (11)   5 1 2 4 3 5 3 2 4 3 3 4 4 4 4   (11) technical    #>    scientific (12)   2 1 5 3 4 4 5 3 4 1 6 4 2 3 3   (12) emotional    #>     introvert (13)   4 5 4 6 5 3 5 3 5 2 5 2 2 2 3   (13) extrovert    #>    wanderlust (14)   1 1 4 2 4 5 2 5 5 3 6 1 1 2 1   (14) home oriente #>"},{"path":"https://docs.openrepgrid.org/reference/rglDrawConstructLabels.html","id":null,"dir":"Reference","previous_headings":"","what":"draw constructs in rgl — rglDrawConstructLabels","title":"draw constructs in rgl — rglDrawConstructLabels","text":"draw constructs rgl","code":""},{"path":"https://docs.openrepgrid.org/reference/rglDrawConstructLabels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"draw constructs in rgl — rglDrawConstructLabels","text":"","code":"rglDrawConstructLabels(   coords,   labels = FALSE,   dim = 1:3,   c.cex = 0.6,   c.text.col = grey(0.4),   ... )"},{"path":"https://docs.openrepgrid.org/reference/rglDrawConstructLabels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"draw constructs in rgl — rglDrawConstructLabels","text":"coords coordinates constructs labels. labels labels constructs. dim dimensions coordinates use. c.cex cex construct text. c.text.col color construct text. ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/rglDrawConstructPoints.html","id":null,"dir":"Reference","previous_headings":"","what":"draw constructs in rgl — rglDrawConstructPoints","title":"draw constructs in rgl — rglDrawConstructPoints","text":"draw constructs rgl","code":""},{"path":"https://docs.openrepgrid.org/reference/rglDrawConstructPoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"draw constructs in rgl — rglDrawConstructPoints","text":"","code":"rglDrawConstructPoints(   coords,   dim = 1:3,   c.radius = 0.02,   c.sphere.col = grey(0.4),   ... )"},{"path":"https://docs.openrepgrid.org/reference/rglDrawConstructPoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"draw constructs in rgl — rglDrawConstructPoints","text":"coords coordinates construct points. dim dimensions coordinates use. c.radius radius construct spheres. c.sphere.col color construct spheres. ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/rglDrawStandardAxes.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw standard axes in the origin in an rgl plot. — rglDrawStandardAxes","title":"Draw standard axes in the origin in an rgl plot. — rglDrawStandardAxes","text":"Draw standard axes origin rgl plot.","code":""},{"path":"https://docs.openrepgrid.org/reference/rglDrawStandardAxes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw standard axes in the origin in an rgl plot. — rglDrawStandardAxes","text":"","code":"rglDrawStandardAxes(   max.dim = 1,   lwd = 1,   a.cex = 1.1,   a.col = \"black\",   a.radius = 0.05,   labels = TRUE,   spheres = FALSE,   ... )"},{"path":"https://docs.openrepgrid.org/reference/rglDrawStandardAxes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw standard axes in the origin in an rgl plot. — rglDrawStandardAxes","text":"max.dim maximum length axis. lwd line width. .cex cex axis labels. .col axis color. .radius radius spheres end points axes. labels logical. whether draw axis labels. spheres logical. whether draw axis spheres end points. ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/rglDrawStandardEllipses.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw standard ellipses in the origin in an rgl plot. — rglDrawStandardEllipses","title":"Draw standard ellipses in the origin in an rgl plot. — rglDrawStandardEllipses","text":"Draw standard ellipses origin rgl plot.","code":""},{"path":"https://docs.openrepgrid.org/reference/rglDrawStandardEllipses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw standard ellipses in the origin in an rgl plot. — rglDrawStandardEllipses","text":"","code":"rglDrawStandardEllipses(max.dim = 1, lwd = 1, col = \"black\")"},{"path":"https://docs.openrepgrid.org/reference/rglDrawStandardEllipses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw standard ellipses in the origin in an rgl plot. — rglDrawStandardEllipses","text":"max.dim soon lwd soon col soon","code":""},{"path":"https://docs.openrepgrid.org/reference/ring.html","id":null,"dir":"Reference","previous_headings":"","what":"bring vector values into ring form — ring","title":"bring vector values into ring form — ring","text":"values vector outside given range remapped values range. function useful loops rows columns matrix ","code":""},{"path":"https://docs.openrepgrid.org/reference/ring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bring vector values into ring form — ring","text":"","code":"ring(x, upper)"},{"path":"https://docs.openrepgrid.org/reference/ring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"bring vector values into ring form — ring","text":"x vector upper upper limit range (lower one. TODO: maybe extend???)","code":""},{"path":"https://docs.openrepgrid.org/reference/ring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"bring vector values into ring form — ring","text":"vector","code":""},{"path":"https://docs.openrepgrid.org/reference/ring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"bring vector values into ring form — ring","text":"","code":"if (FALSE) { # \\dontrun{ ring(1:10, 3)  m <- matrix(1:12, ncol = 4) for (i in 1:12) {   print(m[ring(i, 3), map(i, 4)]) } } # }"},{"path":"https://docs.openrepgrid.org/reference/sapply_pb.html","id":null,"dir":"Reference","previous_headings":"","what":"sapply with a progress bar — sapply_pb","title":"sapply with a progress bar — sapply_pb","text":"Can used like standard base:::sapply. thing create additional progress bar.","code":""},{"path":"https://docs.openrepgrid.org/reference/sapply_pb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sapply with a progress bar — sapply_pb","text":"","code":"sapply_pb(X, FUN, ...)"},{"path":"https://docs.openrepgrid.org/reference/sapply_pb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sapply with a progress bar — sapply_pb","text":"X see ?sapply parameter explanation FUN see ?sapply ... see ?sapply","code":""},{"path":"https://docs.openrepgrid.org/reference/sapply_pb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sapply with a progress bar — sapply_pb","text":"list       see ?sapply","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/sapply_pb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sapply with a progress bar — sapply_pb","text":"","code":"if (FALSE) { # \\dontrun{  l <- sapply(1:20000, function(x) list(rnorm(1000))) head(sapply_pb(l, mean))  # performance comparison l <- sapply(1:20000, function(x) list(rnorm(1000))) system.time(sapply(l, mean)) system.time(sapply_pb(l, mean)) } # }"},{"path":"https://docs.openrepgrid.org/reference/saveAsExcel.html","id":null,"dir":"Reference","previous_headings":"","what":"Save grid in a Microsoft Excel file (.xlsx) — saveAsExcel","title":"Save grid in a Microsoft Excel file (.xlsx) — saveAsExcel","text":"saveAsExcel save grid Microsoft Excel file (.xlsx).","code":""},{"path":"https://docs.openrepgrid.org/reference/saveAsExcel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save grid in a Microsoft Excel file (.xlsx) — saveAsExcel","text":"","code":"saveAsExcel(x, file, sheet = 1)"},{"path":"https://docs.openrepgrid.org/reference/saveAsExcel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save grid in a Microsoft Excel file (.xlsx) — saveAsExcel","text":"x repgrid object. file Filename save grid . name suffix .xlsx. sheet Index sheet write .","code":""},{"path":"https://docs.openrepgrid.org/reference/saveAsExcel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save grid in a Microsoft Excel file (.xlsx) — saveAsExcel","text":"Invisibly returns name file.","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/saveAsExcel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save grid in a Microsoft Excel file (.xlsx) — saveAsExcel","text":"","code":"if (FALSE) { # \\dontrun{  x <- randomGrid(options = 0) saveAsExcel(x, \"grid.xlsx\") } # }"},{"path":"https://docs.openrepgrid.org/reference/saveAsTxt.html","id":null,"dir":"Reference","previous_headings":"","what":"Save grid in a text file (txt). — saveAsTxt","title":"Save grid in a text file (txt). — saveAsTxt","text":"saveAsTxt save grid .txt file format used OpenRepGrid. file format can also easily edited hand (see importTxt() description).","code":""},{"path":"https://docs.openrepgrid.org/reference/saveAsTxt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save grid in a text file (txt). — saveAsTxt","text":"","code":"saveAsTxt(x, file = NA)"},{"path":"https://docs.openrepgrid.org/reference/saveAsTxt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save grid in a text file (txt). — saveAsTxt","text":"x repgrid object. file Filename save grid . name suffix .txt.","code":""},{"path":"https://docs.openrepgrid.org/reference/saveAsTxt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save grid in a text file (txt). — saveAsTxt","text":"Invisibly returns name file.","code":""},{"path":"https://docs.openrepgrid.org/reference/saveAsTxt.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Save grid in a text file (txt). — saveAsTxt","text":"Structure txt file can read importTxt(). ---------------- .txt file ----------------- anything contained within tags discarded ---------------- end file ----------------","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/saveAsTxt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save grid in a text file (txt). — saveAsTxt","text":"","code":"if (FALSE) { # \\dontrun{  x <- randomGrid() saveAsTxt(x, \"random.txt\") } # }"},{"path":"https://docs.openrepgrid.org/reference/setConstructAttr.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the attributes of a construct — setConstructAttr","title":"Set the attributes of a construct — setConstructAttr","text":"Set attributes construct .e. name, abbreviation, status etc.","code":""},{"path":"https://docs.openrepgrid.org/reference/setConstructAttr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the attributes of a construct — setConstructAttr","text":"","code":"setConstructAttr(   x,   pos,   l.name,   r.name,   l.preferred,   r.preferred,   l.emerged,   r.emerged )"},{"path":"https://docs.openrepgrid.org/reference/setConstructAttr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the attributes of a construct — setConstructAttr","text":"x repgrid object. pos Row number construct grid changed l.name Name left pole (string) (optional). r.name Name right pole (string) (optional). l.preferred Logical. left one preferred pole? (optional). r.preferred Logical. right one preferred pole? (optional). l.emerged Logical. left one emergent pole?  (optional). r.emerged Logical. right one emergent pole? (optional).","code":""},{"path":"https://docs.openrepgrid.org/reference/setConstructAttr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the attributes of a construct — setConstructAttr","text":"repgrid object","code":""},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/setConstructAttr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the attributes of a construct — setConstructAttr","text":"","code":"if (FALSE) { # \\dontrun{  x <- setConstructAttr(   bell2010, 1,   \"new left pole\", \"new right pole\" ) x } # }"},{"path":"https://docs.openrepgrid.org/reference/setElementAttr.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the attributes of an element — setElementAttr","title":"Set the attributes of an element — setElementAttr","text":"Set attributes element .e. name, abbreviation, status etc.","code":""},{"path":"https://docs.openrepgrid.org/reference/setElementAttr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the attributes of an element — setElementAttr","text":"","code":"setElementAttr(x, pos, name, abb, status)"},{"path":"https://docs.openrepgrid.org/reference/setElementAttr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the attributes of an element — setElementAttr","text":"x repgrid object. pos Column number element grid whose attributes changed. name New element name (optional). abb Abbreviation element name (optional). status Status element (e.g. ideal etc.) (optional).","code":""},{"path":"https://docs.openrepgrid.org/reference/setElementAttr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the attributes of an element — setElementAttr","text":"repgrid object","code":""},{"path":"https://docs.openrepgrid.org/reference/setElementAttr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Set the attributes of an element — setElementAttr","text":"","code":"Currently the main purpose is to change element names.              Future implementations will allow to set further attributes."},{"path":[]},{"path":"https://docs.openrepgrid.org/reference/setElementAttr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the attributes of an element — setElementAttr","text":"","code":"if (FALSE) { # \\dontrun{  x <- setElementAttr(boeker, 1, \"new name\") # change name of first element x } # }"},{"path":"https://docs.openrepgrid.org/reference/setMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"setMeta — setMeta","title":"setMeta — setMeta","text":"set meta data grid (e.g. id, name interview partner)","code":""},{"path":"https://docs.openrepgrid.org/reference/setMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"setMeta — setMeta","text":"","code":"setMeta(x, type, id, name)"},{"path":"https://docs.openrepgrid.org/reference/setMeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"setMeta — setMeta","text":"x repgrid object type type grid use (rating, ranked, implication) id id interview name name interview partner","code":""},{"path":"https://docs.openrepgrid.org/reference/setMeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"setMeta — setMeta","text":"repgrid object","code":""},{"path":"https://docs.openrepgrid.org/reference/setMeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"setMeta — setMeta","text":"","code":"if (FALSE) { # \\dontrun{  ####  TODO  #### } # }"},{"path":"https://docs.openrepgrid.org/reference/setScale.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the scale range of a grid. — setScale","title":"Set the scale range of a grid. — setScale","text":"scale must known certain operations, e.g. swap construct poles. user construes grid make sure scale range set correctly.","code":""},{"path":"https://docs.openrepgrid.org/reference/setScale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the scale range of a grid. — setScale","text":"","code":"setScale(x, min, max, step, ...)"},{"path":"https://docs.openrepgrid.org/reference/setScale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the scale range of a grid. — setScale","text":"x repgrid object. min Minimal possible scale value ratings. max Maximal possible scale value ratings. step Steps scales uses (yet use). ... evaluated.","code":""},{"path":"https://docs.openrepgrid.org/reference/setScale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the scale range of a grid. — setScale","text":"repgrid object","code":""},{"path":"https://docs.openrepgrid.org/reference/setScale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the scale range of a grid. — setScale","text":"","code":"if (FALSE) { # \\dontrun{  x <- bell2010 x <- setScale(x, 0, 8) # not set correctly x x <- setScale(x, 1, 7) # set correctly x } # }"},{"path":"https://docs.openrepgrid.org/reference/settings.html","id":null,"dir":"Reference","previous_headings":"","what":"global settings for OpenRepGrid — settings","title":"global settings for OpenRepGrid — settings","text":"global settings OpenRepGrid","code":""},{"path":"https://docs.openrepgrid.org/reference/settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global settings for OpenRepGrid — settings","text":"","code":"settings(...)"},{"path":"https://docs.openrepgrid.org/reference/settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"global settings for OpenRepGrid — settings","text":"... Use parameter value pairs (par1=val1, par2=val2) change parameter. Use parameter names request parameter's value (\"par1\", \"par2\").","code":""},{"path":"https://docs.openrepgrid.org/reference/settings.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"global settings for OpenRepGrid — settings","text":"Currently following parameters can changed, ordered topic. default value shown brackets end line. show.scale: Show grid scale info? (TRUE) show.meta: Show grid meta data? (TRUE) show.trim: Number chars trim strings (30) show.cut: Maximum number characters printed sides grid (20) c.: Print construct ID number? (TRUE) e.: Print element ID number? (TRUE)","code":""},{"path":"https://docs.openrepgrid.org/reference/settings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"global settings for OpenRepGrid — settings","text":"","code":"if (FALSE) { # \\dontrun{ # get current settings settings()  # get some parameters settings(\"show.scale\", \"show.meta\")  # change parameters bell2010  settings(show.meta = F) bell2010  settings(show.scale = F, show.cut = 30) bell2010 } # }"},{"path":"https://docs.openrepgrid.org/reference/settingsLoad.html","id":null,"dir":"Reference","previous_headings":"","what":"Load OpenRepGrid settings — settingsLoad","title":"Load OpenRepGrid settings — settingsLoad","text":"OpenRepGrid settings saved settings file extension .orgset can loaded restore settings.","code":""},{"path":"https://docs.openrepgrid.org/reference/settingsLoad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load OpenRepGrid settings — settingsLoad","text":"","code":"settingsLoad(file)"},{"path":"https://docs.openrepgrid.org/reference/settingsLoad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load OpenRepGrid settings — settingsLoad","text":"file Path file loaded.","code":""},{"path":"https://docs.openrepgrid.org/reference/settingsSave.html","id":null,"dir":"Reference","previous_headings":"","what":"Save OpenRepGrid settings — settingsSave","title":"Save OpenRepGrid settings — settingsSave","text":"current settings OpenRepGrid can saved file extension .orgset.","code":""},{"path":"https://docs.openrepgrid.org/reference/settingsSave.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save OpenRepGrid settings — settingsSave","text":"","code":"settingsSave(file)"},{"path":"https://docs.openrepgrid.org/reference/settingsSave.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save OpenRepGrid settings — settingsSave","text":"file Path file saved .","code":""},{"path":"https://docs.openrepgrid.org/reference/shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Shift construct or element to first position. — shift","title":"Shift construct or element to first position. — shift","text":"Shifts whole grid vertically horizontally order remains prompted element construct appears first position.","code":""},{"path":"https://docs.openrepgrid.org/reference/shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shift construct or element to first position. — shift","text":"","code":"shift(x, c = 1, e = 1)"},{"path":"https://docs.openrepgrid.org/reference/shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shift construct or element to first position. — shift","text":"x repgrid object. c Index construct shifted first position. e Index element shifted first position.","code":""},{"path":"https://docs.openrepgrid.org/reference/shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shift construct or element to first position. — shift","text":"repgrid object.","code":""},{"path":"https://docs.openrepgrid.org/reference/shift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shift construct or element to first position. — shift","text":"","code":"if (FALSE) { # \\dontrun{  # shift element 13: 'Ideal self' to first position shift(feixas2004, 13)  x <- randomGrid(5, 10) shift(x, 3, 5) } # }"},{"path":"https://docs.openrepgrid.org/reference/show-repgrid-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show method for repgrid — show,repgrid-method","title":"Show method for repgrid — show,repgrid-method","text":"Show method repgrid","code":""},{"path":"https://docs.openrepgrid.org/reference/show-repgrid-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show method for repgrid — show,repgrid-method","text":"","code":"# S4 method for class 'repgrid' show(object)"},{"path":"https://docs.openrepgrid.org/reference/show-repgrid-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show method for repgrid — show,repgrid-method","text":"object repgrid object.","code":""},{"path":"https://docs.openrepgrid.org/reference/showMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"showMeta — showMeta","title":"showMeta — showMeta","text":"prints meta information grid console (id, name interviewee etc.)","code":""},{"path":"https://docs.openrepgrid.org/reference/showMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"showMeta — showMeta","text":"","code":"showMeta(x)"},{"path":"https://docs.openrepgrid.org/reference/showMeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"showMeta — showMeta","text":"x repgrid object","code":""},{"path":"https://docs.openrepgrid.org/reference/showMeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"showMeta — showMeta","text":"NULL","code":""},{"path":"https://docs.openrepgrid.org/reference/showMeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"showMeta — showMeta","text":"","code":"if (FALSE) { # \\dontrun{  ####  TODO  #### } # }"},{"path":"https://docs.openrepgrid.org/reference/showScale.html","id":null,"dir":"Reference","previous_headings":"","what":"Print scale range information to the console. — showScale","title":"Print scale range information to the console. — showScale","text":"Print scale range information console.","code":""},{"path":"https://docs.openrepgrid.org/reference/showScale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print scale range information to the console. — showScale","text":"","code":"showScale(x)"},{"path":"https://docs.openrepgrid.org/reference/showScale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print scale range information to the console. — showScale","text":"x repgrid object.","code":""},{"path":"https://docs.openrepgrid.org/reference/showScale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print scale range information to the console. — showScale","text":"NULL.","code":""},{"path":"https://docs.openrepgrid.org/reference/showScale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print scale range information to the console. — showScale","text":"","code":"if (FALSE) { # \\dontrun{  showScale(raeithel) showScale(bell2010) } # }"},{"path":"https://docs.openrepgrid.org/reference/slaterStandardization.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal workhorse for Slater standardization. — slaterStandardization","title":"Internal workhorse for Slater standardization. — slaterStandardization","text":"Function uses matrix input. overhead repgrid class avoided. Needed speedy simulations.","code":""},{"path":"https://docs.openrepgrid.org/reference/slaterStandardization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal workhorse for Slater standardization. — slaterStandardization","text":"","code":"slaterStandardization(x)"},{"path":"https://docs.openrepgrid.org/reference/slaterStandardization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal workhorse for Slater standardization. — slaterStandardization","text":"x matrix.","code":""},{"path":"https://docs.openrepgrid.org/reference/ssq.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate SSQ (accuracy) of biplot representation for elements and constructs. — ssq","title":"Calculate SSQ (accuracy) of biplot representation for elements and constructs. — ssq","text":"construct element vectors multidimensional space. reducing representation lower dimensional space, loss information (sum--squares) usually occur. output function shows proportion sum--squares (SSQ) explained elements (constructs) amount explained principal component. allows assess elements (construct) represented well current representation. Also shows much total variation explained.","code":""},{"path":"https://docs.openrepgrid.org/reference/ssq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate SSQ (accuracy) of biplot representation for elements and constructs. — ssq","text":"","code":"ssq(   x,   along = 2,   center = 1,   normalize = 0,   g = 0,   h = 1 - g,   col.active = NA,   col.passive = NA,   ... )"},{"path":"https://docs.openrepgrid.org/reference/ssq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate SSQ (accuracy) of biplot representation for elements and constructs. — ssq","text":"x repgrid object. along Numeric. Table sum--squares (SSQ) 1=constructs, 2=elements (default). Note currently calculations make sense biplot representations g=1 h=1 respectively. center Numeric. type centering performed. 0= centering, 1= row mean centering (construct), 2= column mean centering (elements), 3= double-centering (construct element means), 4= midpoint centering rows (constructs). default 1 (row centering). normalize numeric value indicating along direction (rows, columns) normalize standard deviations. 0 = none, 1= rows, 2 = columns (default 0). g Power singular value matrix assigned left singular vectors, .e. constructs. h Power singular value matrix assigned right singular vectors, .e. elements. col.active Columns (elements) supplementary points, .e. used SVD find principal components. default use elements. col.passive Columns (elements) supplementary points, .e. used SVD projected component space afterwards. determine solution. Default NA, .e. elements set supplementary.","code":""},{"path":"https://docs.openrepgrid.org/reference/ssq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate SSQ (accuracy) of biplot representation for elements and constructs. — ssq","text":"list containing three elements: ssq.table: dataframe sum--squares explained element/construct dimension ssq.table.cumsum: dataframe cumulated sum--squares explained element/construct number dimensions ssq.total: total sum--squares pre-transforming grid matrix","code":""},{"path":"https://docs.openrepgrid.org/reference/ssq.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate SSQ (accuracy) of biplot representation for elements and constructs. — ssq","text":"TODO: g h equal 1 SSQ measure accuracy representation currently ssq point set contrast pre-transformed matrix.","code":""},{"path":"https://docs.openrepgrid.org/reference/ssq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate SSQ (accuracy) of biplot representation for elements and constructs. — ssq","text":"","code":"# explained sum-of-squares for elements ssq(bell2010) #>  #> Cumulated proportionof explained sum-of-squares for elements #>  #>                                                                     1D    2D #> self                                                              0.08 59.22 #> closest friend of the same sex                                    0.38 35.04 #> the unhappiest person you know                                   38.26 42.08 #> A person of the opposite sex that you don't get along with        0.10 64.94 #> A teacher you respected                                          35.87 58.43 #> Mother (or the person who filled that kind of role)              85.10 85.34 #> A person of the opposite sex that you like more than you dislike  7.62 31.87 #> The most confident person you know                               86.90 88.75 #> A person you work well with (at job or on sports team etc)        2.76 64.62 #> A teacher you did not respect                                     1.18 59.89 #> TOTAL                                                            34.02 63.63 #>                                                                     3D    4D #> self                                                             68.95 79.91 #> closest friend of the same sex                                   71.89 77.48 #> the unhappiest person you know                                   75.12 80.07 #> A person of the opposite sex that you don't get along with       76.38 96.73 #> A teacher you respected                                          58.50 97.25 #> Mother (or the person who filled that kind of role)              93.33 93.44 #> A person of the opposite sex that you like more than you dislike 54.54 93.82 #> The most confident person you know                               90.31 97.98 #> A person you work well with (at job or on sports team etc)       72.26 85.03 #> A teacher you did not respect                                    92.74 93.51 #> TOTAL                                                            79.58 91.19 #>                                                                     5D #> self                                                             79.98 #> closest friend of the same sex                                   99.11 #> the unhappiest person you know                                   98.02 #> A person of the opposite sex that you don't get along with       97.60 #> A teacher you respected                                          97.53 #> Mother (or the person who filled that kind of role)              97.42 #> A person of the opposite sex that you like more than you dislike 93.83 #> The most confident person you know                               98.11 #> A person you work well with (at job or on sports team etc)       96.12 #> A teacher you did not respect                                    99.73 #> TOTAL                                                            97.19 #>  #> Total sum-of-squares of pre-transformed  (i.e. centered and scaled) matrix: 136.4  # explained sum-of-squares for constructs ssq(bell2010, along = 1) #>  #> Cumulated proportionof explained sum-of-squares for constructs #>  #>                        1D   2D   3D   4D   5D #> worried & tense      1.27 1.56 2.44 2.95 3.11 #> smart (academically) 0.74 1.73 1.93 1.93 4.09 #> loves sports         0.14 1.54 2.45 3.41 3.63 #> loves people         0.58 1.04 3.14 3.18 3.91 #> transparent          0.47 1.72 2.01 3.17 3.30 #> sensitive            0.89 0.90 2.57 2.68 5.02 #> fearless             1.32 1.53 1.81 2.71 2.78 #> gentle               1.32 1.98 2.12 2.14 2.18 #> loves to argue       0.26 0.63 0.84 3.87 5.76 #> TOTAL                0.73 1.47 2.20 2.93 3.67 #>  #> Total sum-of-squares of pre-transformed  (i.e. centered and scaled) matrix: 136.4  # save results s <- ssq(bell2010)  # printing options print(s) #>  #> Cumulated proportionof explained sum-of-squares for elements #>  #>                                                                     1D    2D #> self                                                              0.08 59.22 #> closest friend of the same sex                                    0.38 35.04 #> the unhappiest person you know                                   38.26 42.08 #> A person of the opposite sex that you don't get along with        0.10 64.94 #> A teacher you respected                                          35.87 58.43 #> Mother (or the person who filled that kind of role)              85.10 85.34 #> A person of the opposite sex that you like more than you dislike  7.62 31.87 #> The most confident person you know                               86.90 88.75 #> A person you work well with (at job or on sports team etc)        2.76 64.62 #> A teacher you did not respect                                     1.18 59.89 #> TOTAL                                                            34.02 63.63 #>                                                                     3D    4D #> self                                                             68.95 79.91 #> closest friend of the same sex                                   71.89 77.48 #> the unhappiest person you know                                   75.12 80.07 #> A person of the opposite sex that you don't get along with       76.38 96.73 #> A teacher you respected                                          58.50 97.25 #> Mother (or the person who filled that kind of role)              93.33 93.44 #> A person of the opposite sex that you like more than you dislike 54.54 93.82 #> The most confident person you know                               90.31 97.98 #> A person you work well with (at job or on sports team etc)       72.26 85.03 #> A teacher you did not respect                                    92.74 93.51 #> TOTAL                                                            79.58 91.19 #>                                                                     5D #> self                                                             79.98 #> closest friend of the same sex                                   99.11 #> the unhappiest person you know                                   98.02 #> A person of the opposite sex that you don't get along with       97.60 #> A teacher you respected                                          97.53 #> Mother (or the person who filled that kind of role)              97.42 #> A person of the opposite sex that you like more than you dislike 93.83 #> The most confident person you know                               98.11 #> A person you work well with (at job or on sports team etc)       96.12 #> A teacher you did not respect                                    99.73 #> TOTAL                                                            97.19 #>  #> Total sum-of-squares of pre-transformed  (i.e. centered and scaled) matrix: 136.4 print(s, digits = 4) #>  #> Cumulated proportionof explained sum-of-squares for elements #>  #>                                                                       1D #> self                                                              0.0836 #> closest friend of the same sex                                    0.3804 #> the unhappiest person you know                                   38.2615 #> A person of the opposite sex that you don't get along with        0.1026 #> A teacher you respected                                          35.8667 #> Mother (or the person who filled that kind of role)              85.0970 #> A person of the opposite sex that you like more than you dislike  7.6217 #> The most confident person you know                               86.9022 #> A person you work well with (at job or on sports team etc)        2.7614 #> A teacher you did not respect                                     1.1828 #> TOTAL                                                            34.0200 #>                                                                       2D #> self                                                             59.2232 #> closest friend of the same sex                                   35.0418 #> the unhappiest person you know                                   42.0789 #> A person of the opposite sex that you don't get along with       64.9417 #> A teacher you respected                                          58.4313 #> Mother (or the person who filled that kind of role)              85.3414 #> A person of the opposite sex that you like more than you dislike 31.8658 #> The most confident person you know                               88.7542 #> A person you work well with (at job or on sports team etc)       64.6224 #> A teacher you did not respect                                    59.8890 #> TOTAL                                                            63.6341 #>                                                                       3D #> self                                                             68.9476 #> closest friend of the same sex                                   71.8892 #> the unhappiest person you know                                   75.1178 #> A person of the opposite sex that you don't get along with       76.3800 #> A teacher you respected                                          58.5036 #> Mother (or the person who filled that kind of role)              93.3255 #> A person of the opposite sex that you like more than you dislike 54.5405 #> The most confident person you know                               90.3087 #> A person you work well with (at job or on sports team etc)       72.2573 #> A teacher you did not respect                                    92.7388 #> TOTAL                                                            79.5828 #>                                                                       4D #> self                                                             79.9061 #> closest friend of the same sex                                   77.4804 #> the unhappiest person you know                                   80.0680 #> A person of the opposite sex that you don't get along with       96.7276 #> A teacher you respected                                          97.2529 #> Mother (or the person who filled that kind of role)              93.4384 #> A person of the opposite sex that you like more than you dislike 93.8156 #> The most confident person you know                               97.9777 #> A person you work well with (at job or on sports team etc)       85.0277 #> A teacher you did not respect                                    93.5145 #> TOTAL                                                            91.1857 #>                                                                       5D #> self                                                             79.9832 #> closest friend of the same sex                                   99.1082 #> the unhappiest person you know                                   98.0241 #> A person of the opposite sex that you don't get along with       97.5974 #> A teacher you respected                                          97.5286 #> Mother (or the person who filled that kind of role)              97.4151 #> A person of the opposite sex that you like more than you dislike 93.8295 #> The most confident person you know                               98.1139 #> A person you work well with (at job or on sports team etc)       96.1209 #> A teacher you did not respect                                    99.7333 #> TOTAL                                                            97.1910 #>  #> Total sum-of-squares of pre-transformed  (i.e. centered and scaled) matrix: 136.4 print(s, dim = 3) #>  #> Cumulated proportionof explained sum-of-squares for elements #>  #>                                                                     1D    2D #> self                                                              0.08 59.22 #> closest friend of the same sex                                    0.38 35.04 #> the unhappiest person you know                                   38.26 42.08 #> A person of the opposite sex that you don't get along with        0.10 64.94 #> A teacher you respected                                          35.87 58.43 #> Mother (or the person who filled that kind of role)              85.10 85.34 #> A person of the opposite sex that you like more than you dislike  7.62 31.87 #> The most confident person you know                               86.90 88.75 #> A person you work well with (at job or on sports team etc)        2.76 64.62 #> A teacher you did not respect                                     1.18 59.89 #> TOTAL                                                            34.02 63.63 #>                                                                     3D #> self                                                             68.95 #> closest friend of the same sex                                   71.89 #> the unhappiest person you know                                   75.12 #> A person of the opposite sex that you don't get along with       76.38 #> A teacher you respected                                          58.50 #> Mother (or the person who filled that kind of role)              93.33 #> A person of the opposite sex that you like more than you dislike 54.54 #> The most confident person you know                               90.31 #> A person you work well with (at job or on sports team etc)       72.26 #> A teacher you did not respect                                    92.74 #> TOTAL                                                            79.58 #>  #> Total sum-of-squares of pre-transformed  (i.e. centered and scaled) matrix: 136.4 print(s, cumulated = FALSE) #>  #> Proportionof explained sum-of-squares for elements #>  #>                                                                     1D    2D #> self                                                              0.08 59.14 #> closest friend of the same sex                                    0.38 34.66 #> the unhappiest person you know                                   38.26  3.82 #> A person of the opposite sex that you don't get along with        0.10 64.84 #> A teacher you respected                                          35.87 22.56 #> Mother (or the person who filled that kind of role)              85.10  0.24 #> A person of the opposite sex that you like more than you dislike  7.62 24.24 #> The most confident person you know                               86.90  1.85 #> A person you work well with (at job or on sports team etc)        2.76 61.86 #> A teacher you did not respect                                     1.18 58.71 #> TOTAL                                                            34.02 29.61 #>                                                                     3D    4D #> self                                                              9.72 10.96 #> closest friend of the same sex                                   36.85  5.59 #> the unhappiest person you know                                   33.04  4.95 #> A person of the opposite sex that you don't get along with       11.44 20.35 #> A teacher you respected                                           0.07 38.75 #> Mother (or the person who filled that kind of role)               7.98  0.11 #> A person of the opposite sex that you like more than you dislike 22.67 39.28 #> The most confident person you know                                1.55  7.67 #> A person you work well with (at job or on sports team etc)        7.63 12.77 #> A teacher you did not respect                                    32.85  0.78 #> TOTAL                                                            15.95 11.60 #>                                                                     5D #> self                                                              0.08 #> closest friend of the same sex                                   21.63 #> the unhappiest person you know                                   17.96 #> A person of the opposite sex that you don't get along with        0.87 #> A teacher you respected                                           0.28 #> Mother (or the person who filled that kind of role)               3.98 #> A person of the opposite sex that you like more than you dislike  0.01 #> The most confident person you know                                0.14 #> A person you work well with (at job or on sports team etc)       11.09 #> A teacher you did not respect                                     6.22 #> TOTAL                                                             6.01 #>  #> Total sum-of-squares of pre-transformed  (i.e. centered and scaled) matrix: 136.4  # access results names(s) #> [1] \"ssq.table\"        \"ssq.table.cumsum\" \"ssq.total\"        s$ssq.table #>                                                                           1D #> self                                                              0.08362054 #> closest friend of the same sex                                    0.38038232 #> the unhappiest person you know                                   38.26145953 #> A person of the opposite sex that you don't get along with        0.10255329 #> A teacher you respected                                          35.86673556 #> Mother (or the person who filled that kind of role)              85.09696929 #> A person of the opposite sex that you like more than you dislike  7.62166507 #> The most confident person you know                               86.90221665 #> A person you work well with (at job or on sports team etc)        2.76140523 #> A teacher you did not respect                                     1.18276971 #> TOTAL                                                            34.02002230 #>                                                                          2D #> self                                                             59.1396100 #> closest friend of the same sex                                   34.6614168 #> the unhappiest person you know                                    3.8174694 #> A person of the opposite sex that you don't get along with       64.8391505 #> A teacher you respected                                          22.5645682 #> Mother (or the person who filled that kind of role)               0.2444566 #> A person of the opposite sex that you like more than you dislike 24.2441725 #> The most confident person you know                                1.8519711 #> A person you work well with (at job or on sports team etc)       61.8609668 #> A teacher you did not respect                                    58.7062201 #> TOTAL                                                            29.6140782 #>                                                                           3D #> self                                                              9.72441608 #> closest friend of the same sex                                   36.84744260 #> the unhappiest person you know                                   33.03885773 #> A person of the opposite sex that you don't get along with       11.43834146 #> A teacher you respected                                           0.07233821 #> Mother (or the person who filled that kind of role)               7.98409667 #> A person of the opposite sex that you like more than you dislike 22.67464376 #> The most confident person you know                                1.55446887 #> A person you work well with (at job or on sports team etc)        7.63490233 #> A teacher you did not respect                                    32.84976087 #> TOTAL                                                            15.94873686 #>                                                                          4D #> self                                                             10.9584461 #> closest friend of the same sex                                    5.5911733 #> the unhappiest person you know                                    4.9502001 #> A person of the opposite sex that you don't get along with       20.3475057 #> A teacher you respected                                          38.7493025 #> Mother (or the person who filled that kind of role)               0.1129045 #> A person of the opposite sex that you like more than you dislike 39.2750994 #> The most confident person you know                                7.6690124 #> A person you work well with (at job or on sports team etc)       12.7703941 #> A teacher you did not respect                                     0.7757358 #> TOTAL                                                            11.6028957 #>                                                                           5D #> self                                                              0.07707218 #> closest friend of the same sex                                   21.62778661 #> the unhappiest person you know                                   17.95610428 #> A person of the opposite sex that you don't get along with        0.86983552 #> A teacher you respected                                           0.27562893 #> Mother (or the person who filled that kind of role)               3.97662592 #> A person of the opposite sex that you like more than you dislike  0.01392438 #> The most confident person you know                                0.13619358 #> A person you work well with (at job or on sports team etc)       11.09325675 #> A teacher you did not respect                                     6.21877220 #> TOTAL                                                             6.00521758 #>                                                                          6D #> self                                                             1.05186111 #> closest friend of the same sex                                   0.01723136 #> the unhappiest person you know                                   0.68141656 #> A person of the opposite sex that you don't get along with       0.31766009 #> A teacher you respected                                          0.47378066 #> Mother (or the person who filled that kind of role)              2.35229778 #> A person of the opposite sex that you like more than you dislike 5.03938802 #> The most confident person you know                               0.85746621 #> A person you work well with (at job or on sports team etc)       3.23496091 #> A teacher you did not respect                                    0.06956441 #> TOTAL                                                            1.37880842 #>                                                                           7D #> self                                                             15.29581505 #> closest friend of the same sex                                    0.11699863 #> the unhappiest person you know                                    0.78362788 #> A person of the opposite sex that you don't get along with        0.05059405 #> A teacher you respected                                           0.57869543 #> Mother (or the person who filled that kind of role)               0.20342498 #> A person of the opposite sex that you like more than you dislike  0.97139727 #> The most confident person you know                                0.51873308 #> A person you work well with (at job or on sports team etc)        0.61215668 #> A teacher you did not respect                                     0.11128456 #> TOTAL                                                             0.81365711 #>                                                                            8D #> self                                                             3.3191535603 #> closest friend of the same sex                                   0.2244595854 #> the unhappiest person you know                                   0.3907095870 #> A person of the opposite sex that you don't get along with       2.0246491219 #> A teacher you respected                                          0.9083756481 #> Mother (or the person who filled that kind of role)              0.0206249222 #> A person of the opposite sex that you like more than you dislike 0.0156567400 #> The most confident person you know                               0.4927160709 #> A person you work well with (at job or on sports team etc)       0.0037691318 #> A teacher you did not respect                                    0.0005205033 #> TOTAL                                                            0.4876053468 #>                                                                           9D #> self                                                             0.350005389 #> closest friend of the same sex                                   0.533108768 #> the unhappiest person you know                                   0.120154945 #> A person of the opposite sex that you don't get along with       0.009710340 #> A teacher you respected                                          0.510574854 #> Mother (or the person who filled that kind of role)              0.008599402 #> A person of the opposite sex that you like more than you dislike 0.144052867 #> The most confident person you know                               0.017222006 #> A person you work well with (at job or on sports team etc)       0.028188096 #> A teacher you did not respect                                    0.085371923 #> TOTAL                                                            0.128978420 s$ssq.table.cumsum #>                                                                           1D #> self                                                              0.08362054 #> closest friend of the same sex                                    0.38038232 #> the unhappiest person you know                                   38.26145953 #> A person of the opposite sex that you don't get along with        0.10255329 #> A teacher you respected                                          35.86673556 #> Mother (or the person who filled that kind of role)              85.09696929 #> A person of the opposite sex that you like more than you dislike  7.62166507 #> The most confident person you know                               86.90221665 #> A person you work well with (at job or on sports team etc)        2.76140523 #> A teacher you did not respect                                     1.18276971 #> TOTAL                                                            34.02002230 #>                                                                        2D #> self                                                             59.22323 #> closest friend of the same sex                                   35.04180 #> the unhappiest person you know                                   42.07893 #> A person of the opposite sex that you don't get along with       64.94170 #> A teacher you respected                                          58.43130 #> Mother (or the person who filled that kind of role)              85.34143 #> A person of the opposite sex that you like more than you dislike 31.86584 #> The most confident person you know                               88.75419 #> A person you work well with (at job or on sports team etc)       64.62237 #> A teacher you did not respect                                    59.88899 #> TOTAL                                                            63.63410 #>                                                                        3D #> self                                                             68.94765 #> closest friend of the same sex                                   71.88924 #> the unhappiest person you know                                   75.11779 #> A person of the opposite sex that you don't get along with       76.38005 #> A teacher you respected                                          58.50364 #> Mother (or the person who filled that kind of role)              93.32552 #> A person of the opposite sex that you like more than you dislike 54.54048 #> The most confident person you know                               90.30866 #> A person you work well with (at job or on sports team etc)       72.25727 #> A teacher you did not respect                                    92.73875 #> TOTAL                                                            79.58284 #>                                                                        4D #> self                                                             79.90609 #> closest friend of the same sex                                   77.48042 #> the unhappiest person you know                                   80.06799 #> A person of the opposite sex that you don't get along with       96.72755 #> A teacher you respected                                          97.25294 #> Mother (or the person who filled that kind of role)              93.43843 #> A person of the opposite sex that you like more than you dislike 93.81558 #> The most confident person you know                               97.97767 #> A person you work well with (at job or on sports team etc)       85.02767 #> A teacher you did not respect                                    93.51449 #> TOTAL                                                            91.18573 #>                                                                        5D #> self                                                             79.98316 #> closest friend of the same sex                                   99.10820 #> the unhappiest person you know                                   98.02409 #> A person of the opposite sex that you don't get along with       97.59739 #> A teacher you respected                                          97.52857 #> Mother (or the person who filled that kind of role)              97.41505 #> A person of the opposite sex that you like more than you dislike 93.82951 #> The most confident person you know                               98.11386 #> A person you work well with (at job or on sports team etc)       96.12093 #> A teacher you did not respect                                    99.73326 #> TOTAL                                                            97.19095 #>                                                                        6D #> self                                                             81.03503 #> closest friend of the same sex                                   99.12543 #> the unhappiest person you know                                   98.70551 #> A person of the opposite sex that you don't get along with       97.91505 #> A teacher you respected                                          98.00235 #> Mother (or the person who filled that kind of role)              99.76735 #> A person of the opposite sex that you like more than you dislike 98.86889 #> The most confident person you know                               98.97133 #> A person you work well with (at job or on sports team etc)       99.35589 #> A teacher you did not respect                                    99.80282 #> TOTAL                                                            98.56976 #>                                                                        7D #> self                                                             96.33084 #> closest friend of the same sex                                   99.24243 #> the unhappiest person you know                                   99.48914 #> A person of the opposite sex that you don't get along with       97.96564 #> A teacher you respected                                          98.58105 #> Mother (or the person who filled that kind of role)              99.97078 #> A person of the opposite sex that you like more than you dislike 99.84029 #> The most confident person you know                               99.49006 #> A person you work well with (at job or on sports team etc)       99.96804 #> A teacher you did not respect                                    99.91411 #> TOTAL                                                            99.38342 #>                                                                        8D  9D #> self                                                             99.64999 100 #> closest friend of the same sex                                   99.46689 100 #> the unhappiest person you know                                   99.87985 100 #> A person of the opposite sex that you don't get along with       99.99029 100 #> A teacher you respected                                          99.48943 100 #> Mother (or the person who filled that kind of role)              99.99140 100 #> A person of the opposite sex that you like more than you dislike 99.85595 100 #> The most confident person you know                               99.98278 100 #> A person you work well with (at job or on sports team etc)       99.97181 100 #> A teacher you did not respect                                    99.91463 100 #> TOTAL                                                            99.87102 100 s$ssq.total #> [1] 136.4"},{"path":"https://docs.openrepgrid.org/reference/stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Descriptive statistics for constructs and elements — statsElements","title":"Descriptive statistics for constructs and elements — statsElements","text":"Several descriptive measures constructs elements.","code":""},{"path":"https://docs.openrepgrid.org/reference/stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Descriptive statistics for constructs and elements — statsElements","text":"","code":"statsElements(x, index = TRUE, trim = 20)  statsConstructs(x, index = T, trim = 20)"},{"path":"https://docs.openrepgrid.org/reference/stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Descriptive statistics for constructs and elements — statsElements","text":"x repgrid object. index Whether print number element. trim number characters element construct trimmed (default 20). NA trimming occurs. Trimming simply saves space displaying correlation constructs elements long names.","code":""},{"path":"https://docs.openrepgrid.org/reference/stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Descriptive statistics for constructs and elements — statsElements","text":"dataframe containing following measures returned invisibly (see psych::describe()): item name item number number valid cases mean standard deviation trimmed mean (default .1) median (standard interpolated) mad: median absolute deviation (median) minimum maximum skew kurtosis standard error","code":""},{"path":"https://docs.openrepgrid.org/reference/stats.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Descriptive statistics for constructs and elements — statsElements","text":"Note standard deviation variance estimations, .e. including Bessel's correction. info type ?describe.","code":""},{"path":"https://docs.openrepgrid.org/reference/stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Descriptive statistics for constructs and elements — statsElements","text":"","code":"statsConstructs(fbb2003) #>  #> #################################### #> Desriptive statistics for constructs #> #################################### #>  #>                             vars n mean   sd median trimmed  mad min max range #> (1) clever - not bright        1 8 3.75 2.31    4.0    3.75 2.97   1   7     6 #> (2) disorganiz - organized     2 8 4.00 1.77    4.5    4.00 2.22   2   6     4 #> (3) listens - doesn't he       3 8 3.50 2.14    3.0    3.50 2.22   1   7     6 #> (4) no clear v - clear view    4 8 4.38 1.60    4.0    4.38 1.48   3   7     4 #> (5) understand - no underst    5 8 3.50 1.85    2.5    3.50 0.74   2   6     4 #> (6) ambitious - no ambitio     6 8 4.50 1.51    4.5    4.50 2.22   3   7     4 #> (7) respected - not respec     7 8 3.25 1.75    3.0    3.25 1.48   1   6     5 #> (8) distant - warm             8 8 4.12 1.96    4.0    4.12 1.48   1   7     6 #> (9) rather agg - not aggres    9 8 3.62 1.92    3.0    3.62 2.22   1   7     6 #>                              skew kurtosis   se #> (1) clever - not bright      0.02    -1.84 0.82 #> (2) disorganiz - organized  -0.13    -1.96 0.63 #> (3) listens - doesn't he     0.35    -1.40 0.76 #> (4) no clear v - clear view  0.38    -1.68 0.56 #> (5) understand - no underst  0.41    -1.90 0.65 #> (6) ambitious - no ambitio   0.33    -1.58 0.53 #> (7) respected - not respec   0.23    -1.67 0.62 #> (8) distant - warm          -0.05    -1.46 0.69 #> (9) rather agg - not aggres  0.36    -1.25 0.68 statsConstructs(fbb2003, trim = 10) #>  #> #################################### #> Desriptive statistics for constructs #> #################################### #>  #>                   vars n mean   sd median trimmed  mad min max range  skew #> (1) cleve - not b    1 8 3.75 2.31    4.0    3.75 2.97   1   7     6  0.02 #> (2) disor - organ    2 8 4.00 1.77    4.5    4.00 2.22   2   6     4 -0.13 #> (3) liste - doesn    3 8 3.50 2.14    3.0    3.50 2.22   1   7     6  0.35 #> (4) no cl - clear    4 8 4.38 1.60    4.0    4.38 1.48   3   7     4  0.38 #> (5) under - no un    5 8 3.50 1.85    2.5    3.50 0.74   2   6     4  0.41 #> (6) ambit - no am    6 8 4.50 1.51    4.5    4.50 2.22   3   7     4  0.33 #> (7) respe - not r    7 8 3.25 1.75    3.0    3.25 1.48   1   6     5  0.23 #> (8) dista - warm     8 8 4.12 1.96    4.0    4.12 1.48   1   7     6 -0.05 #> (9) rathe - not a    9 8 3.62 1.92    3.0    3.62 2.22   1   7     6  0.36 #>                   kurtosis   se #> (1) cleve - not b    -1.84 0.82 #> (2) disor - organ    -1.96 0.63 #> (3) liste - doesn    -1.40 0.76 #> (4) no cl - clear    -1.68 0.56 #> (5) under - no un    -1.90 0.65 #> (6) ambit - no am    -1.58 0.53 #> (7) respe - not r    -1.67 0.62 #> (8) dista - warm     -1.46 0.69 #> (9) rathe - not a    -1.25 0.68 statsConstructs(fbb2003, trim = 10, index = FALSE) #>  #> #################################### #> Desriptive statistics for constructs #> #################################### #>  #>               vars n mean   sd median trimmed  mad min max range  skew kurtosis #> cleve - not b    1 8 3.75 2.31    4.0    3.75 2.97   1   7     6  0.02    -1.84 #> disor - organ    2 8 4.00 1.77    4.5    4.00 2.22   2   6     4 -0.13    -1.96 #> liste - doesn    3 8 3.50 2.14    3.0    3.50 2.22   1   7     6  0.35    -1.40 #> no cl - clear    4 8 4.38 1.60    4.0    4.38 1.48   3   7     4  0.38    -1.68 #> under - no un    5 8 3.50 1.85    2.5    3.50 0.74   2   6     4  0.41    -1.90 #> ambit - no am    6 8 4.50 1.51    4.5    4.50 2.22   3   7     4  0.33    -1.58 #> respe - not r    7 8 3.25 1.75    3.0    3.25 1.48   1   6     5  0.23    -1.67 #> dista - warm     8 8 4.12 1.96    4.0    4.12 1.48   1   7     6 -0.05    -1.46 #> rathe - not a    9 8 3.62 1.92    3.0    3.62 2.22   1   7     6  0.36    -1.25 #>                 se #> cleve - not b 0.82 #> disor - organ 0.63 #> liste - doesn 0.76 #> no cl - clear 0.56 #> under - no un 0.65 #> ambit - no am 0.53 #> respe - not r 0.62 #> dista - warm  0.69 #> rathe - not a 0.68  statsElements(fbb2003) #>  #> ################################## #> Desriptive statistics for elements #> ################################## #>  #>                          vars n mean   sd median trimmed  mad min max range #> (1) self                    1 9 3.44 1.81      3    3.44 1.48   1   6     5 #> (2) my father               2 9 3.00 1.87      3    3.00 1.48   1   6     5 #> (3) an old flame            3 9 4.89 1.45      5    4.89 1.48   3   7     4 #> (4) an ethical person       4 9 3.11 0.93      3    3.11 0.00   2   5     3 #> (5) my mother               5 9 4.11 1.69      5    4.11 2.97   2   7     5 #> (6) a rejected teacher      6 9 4.33 2.35      5    4.33 2.97   1   7     6 #> (7) as I would love to b    7 9 3.44 2.35      3    3.44 2.97   1   7     6 #> (8) a pitied person         8 9 4.44 1.42      5    4.44 1.48   2   7     5 #>                           skew kurtosis   se #> (1) self                  0.30    -1.60 0.60 #> (2) my father             0.61    -1.22 0.62 #> (3) an old flame         -0.05    -1.72 0.48 #> (4) an ethical person     0.65    -0.54 0.31 #> (5) my mother             0.12    -1.44 0.56 #> (6) a rejected teacher   -0.15    -1.89 0.78 #> (7) as I would love to b  0.19    -1.82 0.78 #> (8) a pitied person      -0.02    -0.75 0.47 statsElements(fbb2003, trim = 10) #>  #> ################################## #> Desriptive statistics for elements #> ################################## #>  #>                vars n mean   sd median trimmed  mad min max range  skew #> (1) self          1 9 3.44 1.81      3    3.44 1.48   1   6     5  0.30 #> (2) my father     2 9 3.00 1.87      3    3.00 1.48   1   6     5  0.61 #> (3) an old fla    3 9 4.89 1.45      5    4.89 1.48   3   7     4 -0.05 #> (4) an ethical    4 9 3.11 0.93      3    3.11 0.00   2   5     3  0.65 #> (5) my mother     5 9 4.11 1.69      5    4.11 2.97   2   7     5  0.12 #> (6) a rejected    6 9 4.33 2.35      5    4.33 2.97   1   7     6 -0.15 #> (7) as I would    7 9 3.44 2.35      3    3.44 2.97   1   7     6  0.19 #> (8) a pitied p    8 9 4.44 1.42      5    4.44 1.48   2   7     5 -0.02 #>                kurtosis   se #> (1) self          -1.60 0.60 #> (2) my father     -1.22 0.62 #> (3) an old fla    -1.72 0.48 #> (4) an ethical    -0.54 0.31 #> (5) my mother     -1.44 0.56 #> (6) a rejected    -1.89 0.78 #> (7) as I would    -1.82 0.78 #> (8) a pitied p    -0.75 0.47 statsElements(fbb2003, trim = 10, index = FALSE) #>  #> ################################## #> Desriptive statistics for elements #> ################################## #>  #>            vars n mean   sd median trimmed  mad min max range  skew kurtosis #> self          1 9 3.44 1.81      3    3.44 1.48   1   6     5  0.30    -1.60 #> my father     2 9 3.00 1.87      3    3.00 1.48   1   6     5  0.61    -1.22 #> an old fla    3 9 4.89 1.45      5    4.89 1.48   3   7     4 -0.05    -1.72 #> an ethical    4 9 3.11 0.93      3    3.11 0.00   2   5     3  0.65    -0.54 #> my mother     5 9 4.11 1.69      5    4.11 2.97   2   7     5  0.12    -1.44 #> a rejected    6 9 4.33 2.35      5    4.33 2.97   1   7     6 -0.15    -1.89 #> as I would    7 9 3.44 2.35      3    3.44 2.97   1   7     6  0.19    -1.82 #> a pitied p    8 9 4.44 1.42      5    4.44 1.48   2   7     5 -0.02    -0.75 #>              se #> self       0.60 #> my father  0.62 #> an old fla 0.48 #> an ethical 0.31 #> my mother  0.56 #> a rejected 0.78 #> as I would 0.78 #> a pitied p 0.47  # save the access the results d <- statsElements(fbb2003) d #>  #> ################################## #> Desriptive statistics for elements #> ################################## #>  #>                          vars n mean   sd median trimmed  mad min max range #> (1) self                    1 9 3.44 1.81      3    3.44 1.48   1   6     5 #> (2) my father               2 9 3.00 1.87      3    3.00 1.48   1   6     5 #> (3) an old flame            3 9 4.89 1.45      5    4.89 1.48   3   7     4 #> (4) an ethical person       4 9 3.11 0.93      3    3.11 0.00   2   5     3 #> (5) my mother               5 9 4.11 1.69      5    4.11 2.97   2   7     5 #> (6) a rejected teacher      6 9 4.33 2.35      5    4.33 2.97   1   7     6 #> (7) as I would love to b    7 9 3.44 2.35      3    3.44 2.97   1   7     6 #> (8) a pitied person         8 9 4.44 1.42      5    4.44 1.48   2   7     5 #>                           skew kurtosis   se #> (1) self                  0.30    -1.60 0.60 #> (2) my father             0.61    -1.22 0.62 #> (3) an old flame         -0.05    -1.72 0.48 #> (4) an ethical person     0.65    -0.54 0.31 #> (5) my mother             0.12    -1.44 0.56 #> (6) a rejected teacher   -0.15    -1.89 0.78 #> (7) as I would love to b  0.19    -1.82 0.78 #> (8) a pitied person      -0.02    -0.75 0.47 d[\"mean\"] #>  #> ################################## #> Desriptive statistics for elements #> ################################## #>  #>                          mean #> (1) self                 3.44 #> (2) my father            3.00 #> (3) an old flame         4.89 #> (4) an ethical person    3.11 #> (5) my mother            4.11 #> (6) a rejected teacher   4.33 #> (7) as I would love to b 3.44 #> (8) a pitied person      4.44 d[2, \"mean\"] # mean rating of 2nd element #> [1] 3  d <- statsConstructs(fbb2003) d #>  #> #################################### #> Desriptive statistics for constructs #> #################################### #>  #>                             vars n mean   sd median trimmed  mad min max range #> (1) clever - not bright        1 8 3.75 2.31    4.0    3.75 2.97   1   7     6 #> (2) disorganiz - organized     2 8 4.00 1.77    4.5    4.00 2.22   2   6     4 #> (3) listens - doesn't he       3 8 3.50 2.14    3.0    3.50 2.22   1   7     6 #> (4) no clear v - clear view    4 8 4.38 1.60    4.0    4.38 1.48   3   7     4 #> (5) understand - no underst    5 8 3.50 1.85    2.5    3.50 0.74   2   6     4 #> (6) ambitious - no ambitio     6 8 4.50 1.51    4.5    4.50 2.22   3   7     4 #> (7) respected - not respec     7 8 3.25 1.75    3.0    3.25 1.48   1   6     5 #> (8) distant - warm             8 8 4.12 1.96    4.0    4.12 1.48   1   7     6 #> (9) rather agg - not aggres    9 8 3.62 1.92    3.0    3.62 2.22   1   7     6 #>                              skew kurtosis   se #> (1) clever - not bright      0.02    -1.84 0.82 #> (2) disorganiz - organized  -0.13    -1.96 0.63 #> (3) listens - doesn't he     0.35    -1.40 0.76 #> (4) no clear v - clear view  0.38    -1.68 0.56 #> (5) understand - no underst  0.41    -1.90 0.65 #> (6) ambitious - no ambitio   0.33    -1.58 0.53 #> (7) respected - not respec   0.23    -1.67 0.62 #> (8) distant - warm          -0.05    -1.46 0.69 #> (9) rather agg - not aggres  0.36    -1.25 0.68 d[\"sd\"] #>  #> #################################### #> Desriptive statistics for constructs #> #################################### #>  #>                               sd #> (1) clever - not bright     2.31 #> (2) disorganiz - organized  1.77 #> (3) listens - doesn't he    2.14 #> (4) no clear v - clear view 1.60 #> (5) understand - no underst 1.85 #> (6) ambitious - no ambitio  1.51 #> (7) respected - not respec  1.75 #> (8) distant - warm          1.96 #> (9) rather agg - not aggres 1.92 d[1, \"sd\"] # sd of ratings on first construct #> [1] 2.31455"},{"path":"https://docs.openrepgrid.org/reference/stepChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Density histogram with steps instead of bars. — stepChart","title":"Density histogram with steps instead of bars. — stepChart","text":"Make histogram steps instead bars. Densities used heights.","code":""},{"path":"https://docs.openrepgrid.org/reference/stepChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density histogram with steps instead of bars. — stepChart","text":"","code":"stepChart(vals, breaks = \"Sturges\", add = FALSE, ...)"},{"path":"https://docs.openrepgrid.org/reference/stepChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density histogram with steps instead of bars. — stepChart","text":"vals Numeric values display. breaks Passed hist. See ?hist parameter breaks information. add Whether add steps existing plot (FALSE) create new plot (default add = TRUE).","code":""},{"path":"https://docs.openrepgrid.org/reference/stepChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density histogram with steps instead of bars. — stepChart","text":"","code":"if (FALSE) { # \\dontrun{ x <- rnorm(1000) y <- rnorm(1000, sd = .6) stepChart(y, breaks = 50) stepChart(x, add = T, breaks = 50, col = \"red\") } # }"},{"path":"https://docs.openrepgrid.org/reference/stop_if_not_0_1_ratings_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Raise error if repgrid object has ratings other than 0/1 — stop_if_not_0_1_ratings_only","title":"Raise error if repgrid object has ratings other than 0/1 — stop_if_not_0_1_ratings_only","text":"Raise error repgrid object ratings 0/1","code":""},{"path":"https://docs.openrepgrid.org/reference/stop_if_not_0_1_ratings_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raise error if repgrid object has ratings other than 0/1 — stop_if_not_0_1_ratings_only","text":"","code":"stop_if_not_0_1_ratings_only(x, name = \"x\")"},{"path":"https://docs.openrepgrid.org/reference/stop_if_not_0_1_ratings_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raise error if repgrid object has ratings other than 0/1 — stop_if_not_0_1_ratings_only","text":"x repgrid object. name Name tested variable error message.","code":""},{"path":"https://docs.openrepgrid.org/reference/stop_if_not_is_repgrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Raise error if not is repgrid object — stop_if_not_is_repgrid","title":"Raise error if not is repgrid object — stop_if_not_is_repgrid","text":"Raise error repgrid object","code":""},{"path":"https://docs.openrepgrid.org/reference/stop_if_not_is_repgrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raise error if not is repgrid object — stop_if_not_is_repgrid","text":"","code":"stop_if_not_is_repgrid(x, name = \"x\")"},{"path":"https://docs.openrepgrid.org/reference/stop_if_not_is_repgrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raise error if not is repgrid object — stop_if_not_is_repgrid","text":"x Object test. Raises error repgrid object. name Name tested variable error message.","code":""},{"path":"https://docs.openrepgrid.org/reference/stop_if_scale_not_defined.html","id":null,"dir":"Reference","previous_headings":"","what":"Raise error if min or max of rating scale are undefined — stop_if_scale_not_defined","title":"Raise error if min or max of rating scale are undefined — stop_if_scale_not_defined","text":"Raise error min max rating scale undefined","code":""},{"path":"https://docs.openrepgrid.org/reference/stop_if_scale_not_defined.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raise error if min or max of rating scale are undefined — stop_if_scale_not_defined","text":"","code":"stop_if_scale_not_defined(x)"},{"path":"https://docs.openrepgrid.org/reference/stop_if_scale_not_defined.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raise error if min or max of rating scale are undefined — stop_if_scale_not_defined","text":"x Object test. Raises error mina max ratings scale defined","code":""},{"path":"https://docs.openrepgrid.org/reference/strReverse.html","id":null,"dir":"Reference","previous_headings":"","what":"reverse a string — strReverse","title":"reverse a string — strReverse","text":"reverses strings vector, .e. c(\"ABC\", \"abc\") becomes c(\"CBA\", \"cba\")","code":""},{"path":"https://docs.openrepgrid.org/reference/strReverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reverse a string — strReverse","text":"","code":"strReverse(x)"},{"path":"https://docs.openrepgrid.org/reference/strReverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"reverse a string — strReverse","text":"x string vector strings","code":""},{"path":"https://docs.openrepgrid.org/reference/strReverse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"reverse a string — strReverse","text":"vector  string vector strings reversed chars","code":""},{"path":"https://docs.openrepgrid.org/reference/strReverse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"reverse a string — strReverse","text":"","code":"strReverse(c(\"ABC\", \"abc\")) #> [1] \"CBA\" \"cba\""},{"path":"https://docs.openrepgrid.org/reference/subassign.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for ","title":"Method for ","text":"possible use ratings layers.","code":""},{"path":"https://docs.openrepgrid.org/reference/subassign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for ","text":"","code":"# S4 method for class 'repgrid' x[i, j, ...] <- value"},{"path":"https://docs.openrepgrid.org/reference/subassign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for ","text":"x repgrid object. , j Row column indices. ... evaluated. value Numeric replacement value(s).","code":""},{"path":"https://docs.openrepgrid.org/reference/subassign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Method for ","text":"","code":"if (FALSE) { # \\dontrun{ x <- randomGrid() x[1, 1] <- 2 x[1, ] <- 4 x[, 2] <- 3  # settings values outside defined rating scale # range throws an error x[1, 1] <- 999  # removing scale range allows arbitary values to be set x <- setScale(x, min = NA, max = NA) x[1, 1] <- 999 } # }"},{"path":"https://docs.openrepgrid.org/reference/swapConstructs.html","id":null,"dir":"Reference","previous_headings":"","what":"Swap the position of two constructs in a grid. — swapConstructs","title":"Swap the position of two constructs in a grid. — swapConstructs","text":"Swap position two constructs grid.","code":""},{"path":"https://docs.openrepgrid.org/reference/swapConstructs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swap the position of two constructs in a grid. — swapConstructs","text":"","code":"swapConstructs(x, pos1 = 1, pos2 = 1)"},{"path":"https://docs.openrepgrid.org/reference/swapConstructs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swap the position of two constructs in a grid. — swapConstructs","text":"x repgrid object. pos1 Row number first construct swapped (default=1). pos2 Row number second construct swapped (default=1).","code":""},{"path":"https://docs.openrepgrid.org/reference/swapConstructs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Swap the position of two constructs in a grid. — swapConstructs","text":"repgrid object","code":""},{"path":"https://docs.openrepgrid.org/reference/swapConstructs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Swap the position of two constructs in a grid. — swapConstructs","text":"","code":"if (FALSE) { # \\dontrun{  x <- randomGrid() swapConstructs(x, 1, 3) # swap constructs 1 and 3 swapConstructs(x, 1:2, 3:4) # swap construct 1 with 3 and 2 with 4 } # }"},{"path":"https://docs.openrepgrid.org/reference/swapElements.html","id":null,"dir":"Reference","previous_headings":"","what":"Swap the position of two elements in a grid. — swapElements","title":"Swap the position of two elements in a grid. — swapElements","text":"Swap position two elements grid.","code":""},{"path":"https://docs.openrepgrid.org/reference/swapElements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swap the position of two elements in a grid. — swapElements","text":"","code":"swapElements(x, pos1 = 1, pos2 = 1)"},{"path":"https://docs.openrepgrid.org/reference/swapElements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swap the position of two elements in a grid. — swapElements","text":"x repgrid object. pos1 Column number first element swapped (default=1). pos2 Column number second element swapped (default=1).","code":""},{"path":"https://docs.openrepgrid.org/reference/swapElements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Swap the position of two elements in a grid. — swapElements","text":"repgrid object.","code":""},{"path":"https://docs.openrepgrid.org/reference/swapElements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Swap the position of two elements in a grid. — swapElements","text":"","code":"if (FALSE) { # \\dontrun{ x <- randomGrid() swapElements(x, 1, 3) # swap elements 1 and 3 swapElements(x, 1:2, 3:4) # swap element 1 with 3 and 2 with 4 } # }"},{"path":"https://docs.openrepgrid.org/reference/trim_val.html","id":null,"dir":"Reference","previous_headings":"","what":"trim vector to lower or upper value — trim_val","title":"trim vector to lower or upper value — trim_val","text":"range value may take restricted upper lower boundary. exceeds boundary value replaced boundary value alternatively NA","code":""},{"path":"https://docs.openrepgrid.org/reference/trim_val.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"trim vector to lower or upper value — trim_val","text":"","code":"trim_val(x, minmax = c(-Inf, Inf), na = FALSE)"},{"path":"https://docs.openrepgrid.org/reference/trim_val.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"trim vector to lower or upper value — trim_val","text":"x numeric vector minmax minimal maximal possible value (default c(-Inf, Inf) .e. trimming occurs) na Use NAs replacing values range","code":""},{"path":"https://docs.openrepgrid.org/reference/trim_val.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"trim vector to lower or upper value — trim_val","text":"vector   vector whose elements range replaced","code":""},{"path":"https://docs.openrepgrid.org/reference/trim_val.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"trim vector to lower or upper value — trim_val","text":"","code":"trim_val(30) #> [1] 30 trim_val(30, c(10, 20)) #> [1] 20"},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-0117","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.1.17","title":"OpenRepGrid 0.1.17","text":"CRAN release: 2025-03-02 clusterBoot gains trim arg. Construct labels dendrogram longer trimmed default (#58). biplot2d: improved color options elements constructs. New args c.label.col.left, c.label.col.right. Args e.label.col, c.label.col, e.point.col now vectorized. bertin gains arguments col.c.left, col.c.right, col.e col.e.lines set color construct poles, elements element lines (#51). names now returns element names alternative elements(). subsetting columns using elements names (boeker[, c(\"self\", \"ideal self\")]) (#48) cbind / bind elements combining columns grids (#46)","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-0116","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.1.16","title":"OpenRepGrid 0.1.16","text":"CRAN release: 2024-12-02 Improved documentation required JOSS review.","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-0115","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.1.15","title":"OpenRepGrid 0.1.15","text":"CRAN release: 2024-07-20 add LICENSE.md file rgl installation now optional (close #41) rename ward method ward.D cluster (fix #36) indexDDI indexUncertainty, two dispersion indexes dependency (e.g., situation-resource) grids added. Jon Raskin kindly helped documentation.","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-0114","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.1.14","title":"OpenRepGrid 0.1.14","text":"CRAN release: 2023-05-16 remove TCLTK import. interactive windows . move CI/CD Travis github actions resolve conflicts loading packages update docs indexPolarity reverse alternative swapPoles indexBieri: Bieri index cognitive complexity matches: count rating matches pairs constructs elements reorder method invert construct /element order dilemmatic construct (indexDilemmatic) polarization measure (indexPolarization) new print option indexIntensity normalize argument distance indexSelfConstruction plot method indexDilemma produce network graphs add logo documentation cognitive self construction: self vs. ideal vs. others (indexSelfConstruction) addAvgElement add average element rep method regrid objects creates gridlist summary measures indexDilemma (PID, IID, PICID) midpoint function (alias getScaleMidpoint) print method indexDilemma fix indexDilemma output bug (#17, thanks José Antonio González Del Puerto aka @MindCartographer) perturbation grid ratings perturbate grids_perturbate indexPvaff now uses PCA construct centered raw data line biplot (Gridcor) allow blanks end line tags importTxt grids_leave_n_out grids_bootstrap resampling constructs gridlist class, simple list repgrid objects","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-0113","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.1.13","title":"OpenRepGrid 0.1.13","text":"indexDilemma improved fixed (thanks Diego Vitali aka @artoo-git) biplot2d now hide construct points default setting (cex=0) setting rating value outside defined scale range now throws error ‘ratings’ access replace grid ratings added ‘elements’ added get set element names replaces ‘getElementNames’ ‘eNames’ become deprecated. ‘constructs’, ‘leftpoles’, ‘rightpoles’ added get set construct poles replace ‘getConstructNames’ ‘cNames’ become deprecated.","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-0111","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.1.11","title":"OpenRepGrid 0.1.11","text":"saveAsExcel save grids Microsoft Excel files replace xlsx openxlsx import Excel files get rid JRE dependency","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-0110","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.1.10","title":"OpenRepGrid 0.1.10","text":"CRAN release: 2017-02-24 indexDilemma: improved implicative dilemmas (thanks Alejandro García, (#24, @j4n7) changelog file place documenting changes removed. changes now NEWS","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-019","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.1.9","title":"OpenRepGrid 0.1.9","text":"CRAN release: 2014-09-07 align parameter added cluster importTxt now erase empty lines changed default settings implicative dilemmas dependency xlsx removed (issue #15)","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-018","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.1.8","title":"OpenRepGrid 0.1.8","text":"CRAN release: 2013-06-14 importGridstat can now import multigrid files bug fix importTxt: negative values read ","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-017","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.1.7","title":"OpenRepGrid 0.1.7","text":"CRAN release: 2013-05-26 print functions grid indexes added, former output argument longer exists settings function added. Settings can now modified, saved loaded clusterBoot function p-values cluster analysis functions topic overview documentation bindConstructs can now take many grids /lists grids arguments. Element names now matched reordered automatically ‘+’ can now used concatenated two grids list grids importExcel function added importTxt: ratings range can now arbitrary number blanks tabs values. characters - (minus) ? (question mark) read missing values (NA). file extensions .TXT (capitals) now recognized clusterBoot added:implementation pvclust functions","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-016","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.1.6","title":"OpenRepGrid 0.1.6","text":"CRAN release: 2012-04-05 biplot functions fixed. work .","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-015","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.1.5","title":"OpenRepGrid 0.1.5","text":"CRAN release: 2011-07-23 First release version available CRAN. method dim return size grid. simple wrapper around getNoOfConstructs getNoOfElements package description updated prob argument distanceXXX functions added bug makeRepgrid corrected: ratings now read row","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-014","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.1.4","title":"OpenRepGrid 0.1.4","text":"demo added bug corrected importScivesco changed package description prob parameter: randomGrid(s), quasiDistributionDistanceSlater (dev) distanceNormalized","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-013","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.1.3","title":"OpenRepGrid 0.1.3","text":"permuteConstructs (dev) update openrepgrid-internal permuteGrid (dev) update zzz corrected COLLATION order","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-012","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.1.2","title":"OpenRepGrid 0.1.2","text":"polishing console output several functions: constructCor elementCor statsConstructs statsElements distance alignByLoadings others might changed (undocumented)","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-011","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.1.1","title":"OpenRepGrid 0.1.1","text":"New Features indexConflict1: unbalanced triads (Slade & Sheehan) indexConflict2: unbalanced triads (Bassler et al.) indexConflict3: triangle inequalities indexDilemma: detect implicative dilemmas data leach2001a leach2001b Internal changes getConstructNames2 getElementNames2 formatMatrix","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-010","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.1.0","title":"OpenRepGrid 0.1.0","text":"New Features Slater distance Hartmann distance","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-009","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.0.9","title":"OpenRepGrid 0.0.9","text":"New Features zoom argument biplots variance explained options biplots color controls biplots points labels overplotting high zoom values PVAFF index frames biplot3d intensity index","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-008","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.0.8","title":"OpenRepGrid 0.0.8","text":"New Features construct lines drawBiplot2d saveAsTxt new examples added","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-007","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.0.7","title":"OpenRepGrid 0.0.7","text":"New Features updated documentation files changes addVarianceExplainedToBiplot2d alignByIdeal","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-006","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.0.6","title":"OpenRepGrid 0.0.6","text":"New Features biplot3d (new version) biplotEsa2d biplotEsa3d biplotSlater2d biplotSlater3d home","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-005","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.0.5","title":"OpenRepGrid 0.0.5","text":"New Features center normalize","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-004","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.0.4","title":"OpenRepGrid 0.0.4","text":"New Features documented","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-003","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.0.3","title":"OpenRepGrid 0.0.3","text":"New Features: distance importGridsuite importScivesco importGridstat importGridcor importTxt constructSomers .e. Somers’ d getRatingLayers (internal function) cluster (constructs) data feixas2004 data fbb2003 constructRmsCor constructPca","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-002","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.0.2","title":"OpenRepGrid 0.0.2","text":"Several new Features","code":""},{"path":"https://docs.openrepgrid.org/news/index.html","id":"openrepgrid-001","dir":"Changelog","previous_headings":"","what":"OpenRepGrid 0.0.1","title":"OpenRepGrid 0.0.1","text":"First version (2010-12-03)","code":""}]
